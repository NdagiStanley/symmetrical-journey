{"version":3,"sources":["webpack:////app.3503a391ca608548dbf7.js","webpack:///webpack/bootstrap 5138dc34a451cfa56a5d","webpack:///./src/main.js","webpack:///./~/vue/dist/vue.common.js","webpack:///./src/store.js","webpack:///./src/components/Dashboard.vue","webpack:///./src/components/Home.vue","webpack:///./~/vue-router/dist/vue-router.js","webpack:///./src/getters.js","webpack:///App.vue","webpack:///Dashboard.vue","webpack:///Home.vue","webpack:///./src/App.vue?d818","webpack:///./src/components/Home.vue?381f","webpack:///./src/components/Dashboard.vue?90f4","webpack:///./src/App.vue","webpack:///./~/vue-resource/dist/vue-resource.common.js","webpack:///./~/vuex/dist/vuex.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_vueRouter","_vueRouter2","_vueResource","_vueResource2","_App","_App2","_Home","_Home2","_Dashboard","_Dashboard2","config","delimiters","debug","devtools","use","router","map","/","component","/dashboard","redirect","*","afterEach","transition","console","log","to","path","start","global","set","key","val","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","i","length","vm","_proxy","_digest","del","_unproxy","hasOwnProperty","isLiteral","exp","literalValueRE","test","isReserved","str","charCodeAt","_toString","value","toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","a","b","slice","camelize","replace","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","toLowerCase","classify","classifyRE","bind","fn","ctx","l","arguments","apply","toArray","list","ret","Array","extend","from","keys","Object","isObject","isPlainObject","OBJECT_STRING","def","enumerable","defineProperty","writable","configurable","_debounce","func","wait","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","this","indexOf","arr","cancellable","cb","cancelled","cancel","looseEqual","JSON","stringify","Cache","limit","size","head","tail","undefined","_keymap","create","pushFilter","filter","lastFilterIndex","trim","tokens","match","filterTokenRE","name","processFilterArg","dir","filters","push","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","get","inSingle","inDouble","curly","square","paren","prev","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","text","index","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","join","single","$eval","inlineFilters","filterRE","appendWithTransition","el","target","applyTransition","appendChild","beforeWithTransition","before","removeWithTransition","remove","direction","op","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","action","query","document","querySelector","inDoc","node","doc","ownerDocument","documentElement","parent","parentNode","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","on","event","useCapture","addEventListener","off","removeEventListener","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","setAttribute","addClass","classList","add","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","createElement","isTrimmable","lastChild","data","tagName","createAnchor","persist","anchor","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","next","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","options","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","components","ids","Vue","guardProps","props","isArray","type","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","warnMissing","camelizedId","charAt","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","e","newVal","initMixin","prototype","_init","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","$options","constructor","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","trimmed","parse","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","$set","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","queue","userQueue","has","circular","waiting","flushBatcherQueue","_again","runBatcherQueue","emit","watcher","run","pushWatcher","q","user","nextTick","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","twoWay","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","template","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","callHook","attach","shouldCallRemove","self","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","Math","floor","getTrackByKey","trackByKey","getValue","multi","init","selected","_value","indexOf$1","keyFilter","handler","codes","charCode","parseInt","keyCodes","concat","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","style","kebab","camelPrefixes","normalize$1","_key","k","split","callActivateHooks","called","total","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","inlineProps","propsData","initProp","$get","_bindDir","propDef","Boolean","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","required","valid","expectedTypes","assertedType","assertType","expectedType","validator","coerce","String","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","forEach","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileTextNode","compileElement","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","j","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","transitionRE","bindRE","onRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","noop","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","update","computed","userDef","methods","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","hook","$emit","Directive","_locked","_bound","_listeners","_host","lifecycleMixin","_ref","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$remove","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","reason","dataAPI","clean","asStatement","$arguments","$delete","$watch","deep","sync","immediate","filterRE$1","$interpolate","$log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","splice","isSource","shouldPropagate","hasParentCbs","some","$broadcast","source","$dispatch","lifecycleAPI","ready","$compile","limitBy","filterBy","search","delimiter","convertArray","item","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","util","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","plugin","installed","unshift","install","mixin","definition","inBrowser","window","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isAndroid","isIos","isWechat","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","setImmediate","counter","observer","textNode","characterData","Set","shift","entry","newer","older","returnEntry","freeze","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","warn","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","tmp","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","params","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","delete","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","cssText","handleObject","reduce","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","setAttributeNS","cloak","for","if","vClass","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","_this","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","decimals","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","version","_vuex","_vuex2","state","picId","mutations","SELECTED","Store","__vue_script__","__vue_template__","Target","matcher","delegate","Matcher","routes","generateMatch","startingPath","nestedCallback","fullPath","addRoute","routeArray","len","substr","route","eachRoute","baseRoute","callback","binding","addRouteCallback","msg","noWarning","error","tryDecode","uri","asComponent","decodeURIComponent","decodeURI","StaticSegment","string","DynamicSegment","StarSegment","EpsilonSegment","specificity","segments","results","segment","State","charSpec","nextStates","sortSolutions","states","recognizeChar","RecognizeResults","queryParams","findHandler","regex","captures","currentCapture","isDynamic","addSegment","currentState","eachChar","decodeQueryParamPart","part","warn$1","resolvePath","base","relative","stack","pop","isPromise","then","getRouteConfig","resolveAsyncComponent","resolver","resolve","exports$1","mapParams","genQuery","canReuse","view","canReuseFn","canDeactivate","fromComponent","expectBoolean","canActivate","aborted","deactivate","callHooks","reuse","activateQueue","saveChildView","activateHook","dataHook","waitForData","activated","loading","$loadingRouteData","_routerView","cachedChildView","_keepAliveRouterView","childView","_rendered","_transitionOnLoad","setCurrent","afterData","afterActivate","loadData","postActivate","processData","promises","resolvedVal","all","isPlainOjbect","applyOverride","_Vue$util","root","_parent","$router","$route","_children","_defineMeta","hooksToMergeRE","View","componentDef","viewDef","_isDynamicLiteral","parentView","_rootView","_currentTransition","elementDirective","Link","sameOrigin","link","protocol","location","hostname","port","toggleClasses","onPriority","LINK_UPDATE","activeId","childLinks","existingId","activeIds","updateClasses","onRouteUpdate","onClick","exact","prevActiveClass","activeClass","metaKey","ctrlKey","shiftKey","defaultPrevented","button","go","pathname","history","rootRE","newPath","stringifyPath","updateActiveMatch","updateHref","activeRE","queryStringRE","isAbsolute","href","formatPath","_linkActiveClass","dest","trailingSlashRE","guardComponent","comp","babelHelpers","classCallCheck","instance","Constructor","TypeError","willAddRoute","Error","addChild","contextEntered","specials","validChars","generate","invalidChars","repeat","isEqual","chars","returned","oCreate","proto","F","RouteRecognizer","rootState","allSegments","isEmpty","as","handlersFor","hasRoute","output","generateQueryString","pairs","pair","encodeURIComponent","arrayPair","parseQueryString","queryString","keyLength","recognize","pathLen","queryStart","isSlashDropped","solutions","hashRE","HTML5History","onChange","baseEl","url","replaceState","pos","x","pageXOffset","y","pageYOffset","pushState","hashMatch","HashHistory","hashbang","formattedPath","isAbsoloute","AbstractHistory","currentPath","RouteTransition","abort","abortingOnLoad","deactivateQueue","reverseDeactivateQueue","reverse","reuseQueue","runQueue","_onTransitionValidated","_view","step","_ref$expectBoolean","_ref$postActivate","nextCalled","onError","err","_suppress","onPromiseError","nextWithBoolean","ok","nextWithData","exposed","internalKeysRE","Route","_recognizer","_notFoundHandler","historyBackends","abstract","html5","Router","_ref$hashbang","_ref$abstract","_ref$history","_ref$saveScrollPosition","saveScrollPosition","_ref$transitionOnLoad","transitionOnLoad","_ref$suppressTransitionError","suppressTransitionError","_ref$root","_ref$linkActiveClass","linkActiveClass","app","_guardRecognizer","_started","_startCb","_currentRoute","_previousTransition","_notFoundRedirect","_beforeEachHooks","_afterEachHooks","_root","_abstract","_hashbang","hasPushState","_history","_historyFallback","History","_match","_saveScrollPosition","_map","rootPath","_notFound","_addRoute","_addRedirect","_addAlias","beforeEach","App","_appContainer","Ctor","_appConstructor","_location","assign","generatedPath","currentParams","targetParams","encodeURI","subRoutes","subPath","redirectPath","_addGuard","aliasPath","mappedPath","_handler","_this2","realPath","_checkGuard","_this3","currentRoute","currentTransition","_prevTransition","beforeHooks","startTransition","_postTransition","scrollTo","scrollX","offsetTop","externalVue","getId","_store","_store2","Dashboard","Home","store","_getters","$http","imageId","response","uploaded_image","vuex","getters","effect","edited_image","share","pic","FB","ui","mobile_iframe","error_message","alert","checkPictures","checkCategories","deletePic","pics","onSubmitForm","fileUploadFormData","FormData","fileinput","files","post","splash","dispatch","Util","toLower","isFunction","_typeof","getPrototypeOf","opts","merge","$vm","each","array","_merge","urlParams","Url","legacy","variables","slash","encodeUriSegment","encodeUriQuery","spaces","expand","tmpl","expanded","vars","operators","operator","values","variable","getValues","separator","encodeReserved","modifier","isDefined","substring","encodeValue","isKeyOperator","transform","transforms","serialize","plain","Promise$2","executor","PENDING","deferred","promise","r","reject","Promise$1","PromiseObj","xdrClient","request","xdr","XDomainRequest","responseText","status","statusText","onload","onabort","onerror","ontimeout","onprogress","send","crossOrigin","requestUrl","originUrl","jsonpClient","script","random","jsonp","interceptor","client","when","fulfilled","rejected","xhrClient","xhr","XMLHttpRequest","headers","getAllResponseHeaders","upload","header","setRequestHeader","Client","parseHeaders","row","Http","interceptors","success","Resource","resource","http","Promise","$url","$resource","$promise","Symbol","ie","documentMode","escape","RESOLVED","REJECTED","iterable","race","onResolved","onRejected","always","supportCors","_request","emulateHTTP","exports$2","emulateJSON","_response","exports$3","exports$4","beforeSend","exports$5","exports$6","common","custom","exports$7","clearTimeout","jsonType","Content-Type","patch","Accept","X-Requested-With","mergeObjects","existing","deepClone","getWatcher","getDep","override","vuexInit","$store","defineVuexGetter","makeBoundAction","_getterCacheId","_vm","computedGetter","_len","_key2","_Vue","createLogger","protoProps","staticProps","toConsumableArray","arr2","devtoolMiddleware","onInit","targetState","_dispatching","onMutation","mutation","_ref$state","_ref$mutations","_ref$modules","_ref$middlewares","middlewares","_ref$strict","strict","_rootMutations","_mutations","_modules","_setupModuleState","_setupModuleMutations","_setupMiddlewares","_setupMutationCheck","_len2","payload","_applyMiddlewares","_ref2","updatedModules","allMutations","_len3","_key3","_this4","_middlewares","_needSnapshots","snapshot","initialSnapshot","_prevSnapshot","_this5","prevSnapshot","clonedPayload","v"],"mappings":"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","file":"/app.3503a391ca608548dbf7.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(1);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _vueRouter = __webpack_require__(5);\n\t\n\tvar _vueRouter2 = _interopRequireDefault(_vueRouter);\n\t\n\tvar _vueResource = __webpack_require__(15);\n\t\n\tvar _vueResource2 = _interopRequireDefault(_vueResource);\n\t\n\tvar _App = __webpack_require__(14);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tvar _Home = __webpack_require__(4);\n\t\n\tvar _Home2 = _interopRequireDefault(_Home);\n\t\n\tvar _Dashboard = __webpack_require__(3);\n\t\n\tvar _Dashboard2 = _interopRequireDefault(_Dashboard);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.config.delimiters = ['[[', ']]'];\n\t_vue2.default.config.debug = true;\n\t_vue2.default.config.devtools = true;\n\t\n\t_vue2.default.use(_vueResource2.default);\n\t_vue2.default.use(_vueRouter2.default);\n\t\n\tvar router = new _vueRouter2.default();\n\t\n\trouter.map({\n\t  '/': {\n\t    component: _Home2.default\n\t  },\n\t  '/dashboard': {\n\t    component: _Dashboard2.default\n\t  }\n\t});\n\t\n\trouter.redirect({\n\t  '*': '/'\n\t});\n\t\n\trouter.afterEach(function (transition) {\n\t  console.log('Successfully navigated to: ' + transition.to.path);\n\t});\n\t\n\trouter.start(_App2.default, '#app');\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.24\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n\tvar isWechat = UA && UA.indexOf('micromessenger') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined' && !(isWechat && isIos)) {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  if (!node) return false;\n\t  var doc = node.ownerDocument.documentElement;\n\t  var parent = node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (false) {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (false) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIos: isIos,\n\t\tisWechat: isWechat,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    (\"production\") !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  var _again = true;\n\t\n\t  _function: while (_again) {\n\t    _again = false;\n\t\n\t    runBatcherQueue(queue);\n\t    runBatcherQueue(userQueue);\n\t    // user watchers triggered more watchers,\n\t    // keep flushing until it depletes\n\t    if (queue.length) {\n\t      _again = true;\n\t      continue _function;\n\t    }\n\t    // dev tool hook\n\t    /* istanbul ignore if */\n\t    if (devtools && config.devtools) {\n\t      devtools.emit('flush');\n\t    }\n\t    resetBatcherState();\n\t  }\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  queue.length = 0;\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if (isA || isO) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (false) {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (false) {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node, true);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.24';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (false) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _vue = __webpack_require__(1);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _vuex = __webpack_require__(16);\n\t\n\tvar _vuex2 = _interopRequireDefault(_vuex);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.use(_vuex2.default);\n\t\n\tvar state = {\n\t  picId: 0\n\t};\n\t\n\tvar mutations = {\n\t  SELECTED: function SELECTED(state, id) {\n\t    state.picId = id;\n\t  }\n\t};\n\t\n\texports.default = new _vuex2.default.Store({\n\t  state: state,\n\t  mutations: mutations\n\t});\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(10)\n\t__vue_script__ = __webpack_require__(8)\n\t__vue_template__ = __webpack_require__(13)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(9)\n\t__vue_template__ = __webpack_require__(12)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * vue-router v0.7.13\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.VueRouter = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t  function Target(path, matcher, delegate) {\n\t    this.path = path;\n\t    this.matcher = matcher;\n\t    this.delegate = delegate;\n\t  }\n\t\n\t  Target.prototype = {\n\t    to: function to(target, callback) {\n\t      var delegate = this.delegate;\n\t\n\t      if (delegate && delegate.willAddRoute) {\n\t        target = delegate.willAddRoute(this.matcher.target, target);\n\t      }\n\t\n\t      this.matcher.add(this.path, target);\n\t\n\t      if (callback) {\n\t        if (callback.length === 0) {\n\t          throw new Error(\"You must have an argument in the function passed to `to`\");\n\t        }\n\t        this.matcher.addChild(this.path, target, callback, this.delegate);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function Matcher(target) {\n\t    this.routes = {};\n\t    this.children = {};\n\t    this.target = target;\n\t  }\n\t\n\t  Matcher.prototype = {\n\t    add: function add(path, handler) {\n\t      this.routes[path] = handler;\n\t    },\n\t\n\t    addChild: function addChild(path, target, callback, delegate) {\n\t      var matcher = new Matcher(target);\n\t      this.children[path] = matcher;\n\t\n\t      var match = generateMatch(path, matcher, delegate);\n\t\n\t      if (delegate && delegate.contextEntered) {\n\t        delegate.contextEntered(target, match);\n\t      }\n\t\n\t      callback(match);\n\t    }\n\t  };\n\t\n\t  function generateMatch(startingPath, matcher, delegate) {\n\t    return function (path, nestedCallback) {\n\t      var fullPath = startingPath + path;\n\t\n\t      if (nestedCallback) {\n\t        nestedCallback(generateMatch(fullPath, matcher, delegate));\n\t      } else {\n\t        return new Target(startingPath + path, matcher, delegate);\n\t      }\n\t    };\n\t  }\n\t\n\t  function addRoute(routeArray, path, handler) {\n\t    var len = 0;\n\t    for (var i = 0, l = routeArray.length; i < l; i++) {\n\t      len += routeArray[i].path.length;\n\t    }\n\t\n\t    path = path.substr(len);\n\t    var route = { path: path, handler: handler };\n\t    routeArray.push(route);\n\t  }\n\t\n\t  function eachRoute(baseRoute, matcher, callback, binding) {\n\t    var routes = matcher.routes;\n\t\n\t    for (var path in routes) {\n\t      if (routes.hasOwnProperty(path)) {\n\t        var routeArray = baseRoute.slice();\n\t        addRoute(routeArray, path, routes[path]);\n\t\n\t        if (matcher.children[path]) {\n\t          eachRoute(routeArray, matcher.children[path], callback, binding);\n\t        } else {\n\t          callback.call(binding, routeArray);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function map (callback, addRouteCallback) {\n\t    var matcher = new Matcher();\n\t\n\t    callback(generateMatch(\"\", matcher, this.delegate));\n\t\n\t    eachRoute([], matcher, function (route) {\n\t      if (addRouteCallback) {\n\t        addRouteCallback(this, route);\n\t      } else {\n\t        this.add(route);\n\t      }\n\t    }, this);\n\t  }\n\t\n\t  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\t\n\t  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\t\n\t  var noWarning = false;\n\t  function warn(msg) {\n\t    if (!noWarning && typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  function tryDecode(uri, asComponent) {\n\t    try {\n\t      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n\t    } catch (e) {\n\t      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n\t    }\n\t  }\n\t\n\t  function isArray(test) {\n\t    return Object.prototype.toString.call(test) === \"[object Array]\";\n\t  }\n\t\n\t  // A Segment represents a segment in the original route description.\n\t  // Each Segment type provides an `eachChar` and `regex` method.\n\t  //\n\t  // The `eachChar` method invokes the callback with one or more character\n\t  // specifications. A character specification consumes one or more input\n\t  // characters.\n\t  //\n\t  // The `regex` method returns a regex fragment for the segment. If the\n\t  // segment is a dynamic of star segment, the regex fragment also includes\n\t  // a capture.\n\t  //\n\t  // A character specification contains:\n\t  //\n\t  // * `validChars`: a String with a list of all valid characters, or\n\t  // * `invalidChars`: a String with a list of all invalid characters\n\t  // * `repeat`: true if the character specification can repeat\n\t\n\t  function StaticSegment(string) {\n\t    this.string = string;\n\t  }\n\t  StaticSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      var string = this.string,\n\t          ch;\n\t\n\t      for (var i = 0, l = string.length; i < l; i++) {\n\t        ch = string.charAt(i);\n\t        callback({ validChars: ch });\n\t      }\n\t    },\n\t\n\t    regex: function regex() {\n\t      return this.string.replace(escapeRegex, '\\\\$1');\n\t    },\n\t\n\t    generate: function generate() {\n\t      return this.string;\n\t    }\n\t  };\n\t\n\t  function DynamicSegment(name) {\n\t    this.name = name;\n\t  }\n\t  DynamicSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"/\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"([^/]+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function StarSegment(name) {\n\t    this.name = name;\n\t  }\n\t  StarSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"(.+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function EpsilonSegment() {}\n\t  EpsilonSegment.prototype = {\n\t    eachChar: function eachChar() {},\n\t    regex: function regex() {\n\t      return \"\";\n\t    },\n\t    generate: function generate() {\n\t      return \"\";\n\t    }\n\t  };\n\t\n\t  function parse(route, names, specificity) {\n\t    // normalize route as not starting with a \"/\". Recognition will\n\t    // also normalize.\n\t    if (route.charAt(0) === \"/\") {\n\t      route = route.substr(1);\n\t    }\n\t\n\t    var segments = route.split(\"/\"),\n\t        results = [];\n\t\n\t    // A routes has specificity determined by the order that its different segments\n\t    // appear in. This system mirrors how the magnitude of numbers written as strings\n\t    // works.\n\t    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n\t    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n\t    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n\t    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n\t    // leading symbol, \"1\".\n\t    // The rule is that symbols to the left carry more weight than symbols to the right\n\t    // when a number is written out as a string. In the above strings, the leading digit\n\t    // represents how many 100's are in the number, and it carries more weight than the middle\n\t    // number which represents how many 10's are in the number.\n\t    // This system of number magnitude works well for route specificity, too. A route written as\n\t    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n\t    // `x`, irrespective of the other parts.\n\t    // Because of this similarity, we assign each type of segment a number value written as a\n\t    // string. We can find the specificity of compound routes by concatenating these strings\n\t    // together, from left to right. After we have looped through all of the segments,\n\t    // we convert the string to a number.\n\t    specificity.val = '';\n\t\n\t    for (var i = 0, l = segments.length; i < l; i++) {\n\t      var segment = segments[i],\n\t          match;\n\t\n\t      if (match = segment.match(/^:([^\\/]+)$/)) {\n\t        results.push(new DynamicSegment(match[1]));\n\t        names.push(match[1]);\n\t        specificity.val += '3';\n\t      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n\t        results.push(new StarSegment(match[1]));\n\t        specificity.val += '2';\n\t        names.push(match[1]);\n\t      } else if (segment === \"\") {\n\t        results.push(new EpsilonSegment());\n\t        specificity.val += '1';\n\t      } else {\n\t        results.push(new StaticSegment(segment));\n\t        specificity.val += '4';\n\t      }\n\t    }\n\t\n\t    specificity.val = +specificity.val;\n\t\n\t    return results;\n\t  }\n\t\n\t  // A State has a character specification and (`charSpec`) and a list of possible\n\t  // subsequent states (`nextStates`).\n\t  //\n\t  // If a State is an accepting state, it will also have several additional\n\t  // properties:\n\t  //\n\t  // * `regex`: A regular expression that is used to extract parameters from paths\n\t  //   that reached this accepting state.\n\t  // * `handlers`: Information on how to convert the list of captures into calls\n\t  //   to registered handlers with the specified parameters\n\t  // * `types`: How many static, dynamic or star segments in this route. Used to\n\t  //   decide which route to use if multiple registered routes match a path.\n\t  //\n\t  // Currently, State is implemented naively by looping over `nextStates` and\n\t  // comparing a character specification against a character. A more efficient\n\t  // implementation would use a hash of keys pointing at one or more next states.\n\t\n\t  function State(charSpec) {\n\t    this.charSpec = charSpec;\n\t    this.nextStates = [];\n\t  }\n\t\n\t  State.prototype = {\n\t    get: function get(charSpec) {\n\t      var nextStates = this.nextStates;\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        var child = nextStates[i];\n\t\n\t        var isEqual = child.charSpec.validChars === charSpec.validChars;\n\t        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\t\n\t        if (isEqual) {\n\t          return child;\n\t        }\n\t      }\n\t    },\n\t\n\t    put: function put(charSpec) {\n\t      var state;\n\t\n\t      // If the character specification already exists in a child of the current\n\t      // state, just return that state.\n\t      if (state = this.get(charSpec)) {\n\t        return state;\n\t      }\n\t\n\t      // Make a new state for the character spec\n\t      state = new State(charSpec);\n\t\n\t      // Insert the new state as a child of the current state\n\t      this.nextStates.push(state);\n\t\n\t      // If this character specification repeats, insert the new state as a child\n\t      // of itself. Note that this will not trigger an infinite loop because each\n\t      // transition during recognition consumes a character.\n\t      if (charSpec.repeat) {\n\t        state.nextStates.push(state);\n\t      }\n\t\n\t      // Return the new state\n\t      return state;\n\t    },\n\t\n\t    // Find a list of child states matching the next character\n\t    match: function match(ch) {\n\t      // DEBUG \"Processing `\" + ch + \"`:\"\n\t      var nextStates = this.nextStates,\n\t          child,\n\t          charSpec,\n\t          chars;\n\t\n\t      // DEBUG \"  \" + debugState(this)\n\t      var returned = [];\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        child = nextStates[i];\n\t\n\t        charSpec = child.charSpec;\n\t\n\t        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) !== -1) {\n\t            returned.push(child);\n\t          }\n\t        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) === -1) {\n\t            returned.push(child);\n\t          }\n\t        }\n\t      }\n\t\n\t      return returned;\n\t    }\n\t\n\t    /** IF DEBUG\n\t    , debug: function() {\n\t      var charSpec = this.charSpec,\n\t          debug = \"[\",\n\t          chars = charSpec.validChars || charSpec.invalidChars;\n\t       if (charSpec.invalidChars) { debug += \"^\"; }\n\t      debug += chars;\n\t      debug += \"]\";\n\t       if (charSpec.repeat) { debug += \"+\"; }\n\t       return debug;\n\t    }\n\t    END IF **/\n\t  };\n\t\n\t  /** IF DEBUG\n\t  function debug(log) {\n\t    console.log(log);\n\t  }\n\t\n\t  function debugState(state) {\n\t    return state.nextStates.map(function(n) {\n\t      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n\t      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n\t    }).join(\", \")\n\t  }\n\t  END IF **/\n\t\n\t  // Sort the routes by specificity\n\t  function sortSolutions(states) {\n\t    return states.sort(function (a, b) {\n\t      return b.specificity.val - a.specificity.val;\n\t    });\n\t  }\n\t\n\t  function recognizeChar(states, ch) {\n\t    var nextStates = [];\n\t\n\t    for (var i = 0, l = states.length; i < l; i++) {\n\t      var state = states[i];\n\t\n\t      nextStates = nextStates.concat(state.match(ch));\n\t    }\n\t\n\t    return nextStates;\n\t  }\n\t\n\t  var oCreate = Object.create || function (proto) {\n\t    function F() {}\n\t    F.prototype = proto;\n\t    return new F();\n\t  };\n\t\n\t  function RecognizeResults(queryParams) {\n\t    this.queryParams = queryParams || {};\n\t  }\n\t  RecognizeResults.prototype = oCreate({\n\t    splice: Array.prototype.splice,\n\t    slice: Array.prototype.slice,\n\t    push: Array.prototype.push,\n\t    length: 0,\n\t    queryParams: null\n\t  });\n\t\n\t  function findHandler(state, path, queryParams) {\n\t    var handlers = state.handlers,\n\t        regex = state.regex;\n\t    var captures = path.match(regex),\n\t        currentCapture = 1;\n\t    var result = new RecognizeResults(queryParams);\n\t\n\t    for (var i = 0, l = handlers.length; i < l; i++) {\n\t      var handler = handlers[i],\n\t          names = handler.names,\n\t          params = {};\n\t\n\t      for (var j = 0, m = names.length; j < m; j++) {\n\t        params[names[j]] = captures[currentCapture++];\n\t      }\n\t\n\t      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  function addSegment(currentState, segment) {\n\t    segment.eachChar(function (ch) {\n\t      var state;\n\t\n\t      currentState = currentState.put(ch);\n\t    });\n\t\n\t    return currentState;\n\t  }\n\t\n\t  function decodeQueryParamPart(part) {\n\t    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n\t    part = part.replace(/\\+/gm, '%20');\n\t    return tryDecode(part, true);\n\t  }\n\t\n\t  // The main interface\n\t\n\t  var RouteRecognizer = function RouteRecognizer() {\n\t    this.rootState = new State();\n\t    this.names = {};\n\t  };\n\t\n\t  RouteRecognizer.prototype = {\n\t    add: function add(routes, options) {\n\t      var currentState = this.rootState,\n\t          regex = \"^\",\n\t          specificity = {},\n\t          handlers = [],\n\t          allSegments = [],\n\t          name;\n\t\n\t      var isEmpty = true;\n\t\n\t      for (var i = 0, l = routes.length; i < l; i++) {\n\t        var route = routes[i],\n\t            names = [];\n\t\n\t        var segments = parse(route.path, names, specificity);\n\t\n\t        allSegments = allSegments.concat(segments);\n\t\n\t        for (var j = 0, m = segments.length; j < m; j++) {\n\t          var segment = segments[j];\n\t\n\t          if (segment instanceof EpsilonSegment) {\n\t            continue;\n\t          }\n\t\n\t          isEmpty = false;\n\t\n\t          // Add a \"/\" for the new segment\n\t          currentState = currentState.put({ validChars: \"/\" });\n\t          regex += \"/\";\n\t\n\t          // Add a representation of the segment to the NFA and regex\n\t          currentState = addSegment(currentState, segment);\n\t          regex += segment.regex();\n\t        }\n\t\n\t        var handler = { handler: route.handler, names: names };\n\t        handlers.push(handler);\n\t      }\n\t\n\t      if (isEmpty) {\n\t        currentState = currentState.put({ validChars: \"/\" });\n\t        regex += \"/\";\n\t      }\n\t\n\t      currentState.handlers = handlers;\n\t      currentState.regex = new RegExp(regex + \"$\");\n\t      currentState.specificity = specificity;\n\t\n\t      if (name = options && options.as) {\n\t        this.names[name] = {\n\t          segments: allSegments,\n\t          handlers: handlers\n\t        };\n\t      }\n\t    },\n\t\n\t    handlersFor: function handlersFor(name) {\n\t      var route = this.names[name],\n\t          result = [];\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      for (var i = 0, l = route.handlers.length; i < l; i++) {\n\t        result.push(route.handlers[i]);\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    hasRoute: function hasRoute(name) {\n\t      return !!this.names[name];\n\t    },\n\t\n\t    generate: function generate(name, params) {\n\t      var route = this.names[name],\n\t          output = \"\";\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      var segments = route.segments;\n\t\n\t      for (var i = 0, l = segments.length; i < l; i++) {\n\t        var segment = segments[i];\n\t\n\t        if (segment instanceof EpsilonSegment) {\n\t          continue;\n\t        }\n\t\n\t        output += \"/\";\n\t        output += segment.generate(params);\n\t      }\n\t\n\t      if (output.charAt(0) !== '/') {\n\t        output = '/' + output;\n\t      }\n\t\n\t      if (params && params.queryParams) {\n\t        output += this.generateQueryString(params.queryParams);\n\t      }\n\t\n\t      return output;\n\t    },\n\t\n\t    generateQueryString: function generateQueryString(params) {\n\t      var pairs = [];\n\t      var keys = [];\n\t      for (var key in params) {\n\t        if (params.hasOwnProperty(key)) {\n\t          keys.push(key);\n\t        }\n\t      }\n\t      keys.sort();\n\t      for (var i = 0, len = keys.length; i < len; i++) {\n\t        key = keys[i];\n\t        var value = params[key];\n\t        if (value == null) {\n\t          continue;\n\t        }\n\t        var pair = encodeURIComponent(key);\n\t        if (isArray(value)) {\n\t          for (var j = 0, l = value.length; j < l; j++) {\n\t            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n\t            pairs.push(arrayPair);\n\t          }\n\t        } else {\n\t          pair += \"=\" + encodeURIComponent(value);\n\t          pairs.push(pair);\n\t        }\n\t      }\n\t\n\t      if (pairs.length === 0) {\n\t        return '';\n\t      }\n\t\n\t      return \"?\" + pairs.join(\"&\");\n\t    },\n\t\n\t    parseQueryString: function parseQueryString(queryString) {\n\t      var pairs = queryString.split(\"&\"),\n\t          queryParams = {};\n\t      for (var i = 0; i < pairs.length; i++) {\n\t        var pair = pairs[i].split('='),\n\t            key = decodeQueryParamPart(pair[0]),\n\t            keyLength = key.length,\n\t            isArray = false,\n\t            value;\n\t        if (pair.length === 1) {\n\t          value = 'true';\n\t        } else {\n\t          //Handle arrays\n\t          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n\t            isArray = true;\n\t            key = key.slice(0, keyLength - 2);\n\t            if (!queryParams[key]) {\n\t              queryParams[key] = [];\n\t            }\n\t          }\n\t          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n\t        }\n\t        if (isArray) {\n\t          queryParams[key].push(value);\n\t        } else {\n\t          queryParams[key] = value;\n\t        }\n\t      }\n\t      return queryParams;\n\t    },\n\t\n\t    recognize: function recognize(path, silent) {\n\t      noWarning = silent;\n\t      var states = [this.rootState],\n\t          pathLen,\n\t          i,\n\t          l,\n\t          queryStart,\n\t          queryParams = {},\n\t          isSlashDropped = false;\n\t\n\t      queryStart = path.indexOf('?');\n\t      if (queryStart !== -1) {\n\t        var queryString = path.substr(queryStart + 1, path.length);\n\t        path = path.substr(0, queryStart);\n\t        if (queryString) {\n\t          queryParams = this.parseQueryString(queryString);\n\t        }\n\t      }\n\t\n\t      path = tryDecode(path);\n\t      if (!path) return;\n\t\n\t      // DEBUG GROUP path\n\t\n\t      if (path.charAt(0) !== \"/\") {\n\t        path = \"/\" + path;\n\t      }\n\t\n\t      pathLen = path.length;\n\t      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n\t        path = path.substr(0, pathLen - 1);\n\t        isSlashDropped = true;\n\t      }\n\t\n\t      for (i = 0, l = path.length; i < l; i++) {\n\t        states = recognizeChar(states, path.charAt(i));\n\t        if (!states.length) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      // END DEBUG GROUP\n\t\n\t      var solutions = [];\n\t      for (i = 0, l = states.length; i < l; i++) {\n\t        if (states[i].handlers) {\n\t          solutions.push(states[i]);\n\t        }\n\t      }\n\t\n\t      states = sortSolutions(solutions);\n\t\n\t      var state = solutions[0];\n\t\n\t      if (state && state.handlers) {\n\t        // if a trailing slash was dropped and a star segment is the last segment\n\t        // specified, put the trailing slash back\n\t        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n\t          path = path + \"/\";\n\t        }\n\t        return findHandler(state, path, queryParams);\n\t      }\n\t    }\n\t  };\n\t\n\t  RouteRecognizer.prototype.map = map;\n\t\n\t  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\t\n\t  // export default for holding the Vue reference\n\t  var exports$1 = {};\n\t  /**\n\t   * Warn stuff.\n\t   *\n\t   * @param {String} msg\n\t   */\n\t\n\t  function warn$1(msg) {\n\t    /* istanbul ignore next */\n\t    if (typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Resolve a relative path.\n\t   *\n\t   * @param {String} base\n\t   * @param {String} relative\n\t   * @param {Boolean} append\n\t   * @return {String}\n\t   */\n\t\n\t  function resolvePath(base, relative, append) {\n\t    var query = base.match(/(\\?.*)$/);\n\t    if (query) {\n\t      query = query[1];\n\t      base = base.slice(0, -query.length);\n\t    }\n\t    // a query!\n\t    if (relative.charAt(0) === '?') {\n\t      return base + relative;\n\t    }\n\t    var stack = base.split('/');\n\t    // remove trailing segment if:\n\t    // - not appending\n\t    // - appending to trailing slash (last segment is empty)\n\t    if (!append || !stack[stack.length - 1]) {\n\t      stack.pop();\n\t    }\n\t    // resolve relative path\n\t    var segments = relative.replace(/^\\//, '').split('/');\n\t    for (var i = 0; i < segments.length; i++) {\n\t      var segment = segments[i];\n\t      if (segment === '.') {\n\t        continue;\n\t      } else if (segment === '..') {\n\t        stack.pop();\n\t      } else {\n\t        stack.push(segment);\n\t      }\n\t    }\n\t    // ensure leading slash\n\t    if (stack[0] !== '') {\n\t      stack.unshift('');\n\t    }\n\t    return stack.join('/');\n\t  }\n\t\n\t  /**\n\t   * Forgiving check for a promise\n\t   *\n\t   * @param {Object} p\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isPromise(p) {\n\t    return p && typeof p.then === 'function';\n\t  }\n\t\n\t  /**\n\t   * Retrive a route config field from a component instance\n\t   * OR a component contructor.\n\t   *\n\t   * @param {Function|Vue} component\n\t   * @param {String} name\n\t   * @return {*}\n\t   */\n\t\n\t  function getRouteConfig(component, name) {\n\t    var options = component && (component.$options || component.options);\n\t    return options && options.route && options.route[name];\n\t  }\n\t\n\t  /**\n\t   * Resolve an async component factory. Have to do a dirty\n\t   * mock here because of Vue core's internal API depends on\n\t   * an ID check.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Function} cb\n\t   */\n\t\n\t  var resolver = undefined;\n\t\n\t  function resolveAsyncComponent(handler, cb) {\n\t    if (!resolver) {\n\t      resolver = {\n\t        resolve: exports$1.Vue.prototype._resolveComponent,\n\t        $options: {\n\t          components: {\n\t            _: handler.component\n\t          }\n\t        }\n\t      };\n\t    } else {\n\t      resolver.$options.components._ = handler.component;\n\t    }\n\t    resolver.resolve('_', function (Component) {\n\t      handler.component = Component;\n\t      cb(Component);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Map the dynamic segments in a path to params.\n\t   *\n\t   * @param {String} path\n\t   * @param {Object} params\n\t   * @param {Object} query\n\t   */\n\t\n\t  function mapParams(path, params, query) {\n\t    if (params === undefined) params = {};\n\t\n\t    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n\t      var val = params[key];\n\t      /* istanbul ignore if */\n\t      if (!val) {\n\t        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n\t      }\n\t      return val || '';\n\t    });\n\t    if (query) {\n\t      path += genQuery(query);\n\t    }\n\t    return path;\n\t  }\n\t\n\t  var hashRE = /#.*$/;\n\t\n\t  var HTML5History = (function () {\n\t    function HTML5History(_ref) {\n\t      var root = _ref.root;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HTML5History);\n\t\n\t      if (root && root !== '/') {\n\t        // make sure there's the starting slash\n\t        if (root.charAt(0) !== '/') {\n\t          root = '/' + root;\n\t        }\n\t        // remove trailing slash\n\t        this.root = root.replace(/\\/$/, '');\n\t        this.rootRE = new RegExp('^\\\\' + this.root);\n\t      } else {\n\t        this.root = null;\n\t      }\n\t      this.onChange = onChange;\n\t      // check base tag\n\t      var baseEl = document.querySelector('base');\n\t      this.base = baseEl && baseEl.getAttribute('href');\n\t    }\n\t\n\t    HTML5History.prototype.start = function start() {\n\t      var _this = this;\n\t\n\t      this.listener = function (e) {\n\t        var url = location.pathname + location.search;\n\t        if (_this.root) {\n\t          url = url.replace(_this.rootRE, '');\n\t        }\n\t        _this.onChange(url, e && e.state, location.hash);\n\t      };\n\t      window.addEventListener('popstate', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HTML5History.prototype.stop = function stop() {\n\t      window.removeEventListener('popstate', this.listener);\n\t    };\n\t\n\t    HTML5History.prototype.go = function go(path, replace, append) {\n\t      var url = this.formatPath(path, append);\n\t      if (replace) {\n\t        history.replaceState({}, '', url);\n\t      } else {\n\t        // record scroll position by replacing current state\n\t        history.replaceState({\n\t          pos: {\n\t            x: window.pageXOffset,\n\t            y: window.pageYOffset\n\t          }\n\t        }, '', location.href);\n\t        // then push new state\n\t        history.pushState({}, '', url);\n\t      }\n\t      var hashMatch = path.match(hashRE);\n\t      var hash = hashMatch && hashMatch[0];\n\t      path = url\n\t      // strip hash so it doesn't mess up params\n\t      .replace(hashRE, '')\n\t      // remove root before matching\n\t      .replace(this.rootRE, '');\n\t      this.onChange(path, null, hash);\n\t    };\n\t\n\t    HTML5History.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/'\n\t      // absolute path\n\t      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n\t    };\n\t\n\t    return HTML5History;\n\t  })();\n\t\n\t  var HashHistory = (function () {\n\t    function HashHistory(_ref) {\n\t      var hashbang = _ref.hashbang;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HashHistory);\n\t\n\t      this.hashbang = hashbang;\n\t      this.onChange = onChange;\n\t    }\n\t\n\t    HashHistory.prototype.start = function start() {\n\t      var self = this;\n\t      this.listener = function () {\n\t        var path = location.hash;\n\t        var raw = path.replace(/^#!?/, '');\n\t        // always\n\t        if (raw.charAt(0) !== '/') {\n\t          raw = '/' + raw;\n\t        }\n\t        var formattedPath = self.formatPath(raw);\n\t        if (formattedPath !== path) {\n\t          location.replace(formattedPath);\n\t          return;\n\t        }\n\t        // determine query\n\t        // note it's possible to have queries in both the actual URL\n\t        // and the hash fragment itself.\n\t        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n\t        self.onChange(path.replace(/^#!?/, '') + query);\n\t      };\n\t      window.addEventListener('hashchange', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HashHistory.prototype.stop = function stop() {\n\t      window.removeEventListener('hashchange', this.listener);\n\t    };\n\t\n\t    HashHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.formatPath(path, append);\n\t      if (replace) {\n\t        location.replace(path);\n\t      } else {\n\t        location.hash = path;\n\t      }\n\t    };\n\t\n\t    HashHistory.prototype.formatPath = function formatPath(path, append) {\n\t      var isAbsoloute = path.charAt(0) === '/';\n\t      var prefix = '#' + (this.hashbang ? '!' : '');\n\t      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n\t    };\n\t\n\t    return HashHistory;\n\t  })();\n\t\n\t  var AbstractHistory = (function () {\n\t    function AbstractHistory(_ref) {\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, AbstractHistory);\n\t\n\t      this.onChange = onChange;\n\t      this.currentPath = '/';\n\t    }\n\t\n\t    AbstractHistory.prototype.start = function start() {\n\t      this.onChange('/');\n\t    };\n\t\n\t    AbstractHistory.prototype.stop = function stop() {\n\t      // noop\n\t    };\n\t\n\t    AbstractHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.currentPath = this.formatPath(path, append);\n\t      this.onChange(path);\n\t    };\n\t\n\t    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n\t    };\n\t\n\t    return AbstractHistory;\n\t  })();\n\t\n\t  /**\n\t   * Determine the reusability of an existing router view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function canReuse(view, handler, transition) {\n\t    var component = view.childVM;\n\t    if (!component || !handler) {\n\t      return false;\n\t    }\n\t    // important: check view.Component here because it may\n\t    // have been changed in activate hook\n\t    if (view.Component !== handler.component) {\n\t      return false;\n\t    }\n\t    var canReuseFn = getRouteConfig(component, 'canReuse');\n\t    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n\t      to: transition.to,\n\t      from: transition.from\n\t    }) : true; // defaults to true\n\t  }\n\t\n\t  /**\n\t   * Check if a component can deactivate.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canDeactivate(view, transition, next) {\n\t    var fromComponent = view.childVM;\n\t    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHook(hook, fromComponent, next, {\n\t        expectBoolean: true\n\t      });\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if a component can activate.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canActivate(handler, transition, next) {\n\t    resolveAsyncComponent(handler, function (Component) {\n\t      // have to check due to async-ness\n\t      if (transition.aborted) {\n\t        return;\n\t      }\n\t      // determine if this component can be activated\n\t      var hook = getRouteConfig(Component, 'canActivate');\n\t      if (!hook) {\n\t        next();\n\t      } else {\n\t        transition.callHook(hook, null, next, {\n\t          expectBoolean: true\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Call deactivate hooks for existing router-views.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function deactivate(view, transition, next) {\n\t    var component = view.childVM;\n\t    var hook = getRouteConfig(component, 'deactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHooks(hook, component, next);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Activate / switch component for a router-view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Number} depth\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function activate(view, transition, depth, cb, reuse) {\n\t    var handler = transition.activateQueue[depth];\n\t    if (!handler) {\n\t      saveChildView(view);\n\t      if (view._bound) {\n\t        view.setComponent(null);\n\t      }\n\t      cb && cb();\n\t      return;\n\t    }\n\t\n\t    var Component = view.Component = handler.component;\n\t    var activateHook = getRouteConfig(Component, 'activate');\n\t    var dataHook = getRouteConfig(Component, 'data');\n\t    var waitForData = getRouteConfig(Component, 'waitForData');\n\t\n\t    view.depth = depth;\n\t    view.activated = false;\n\t\n\t    var component = undefined;\n\t    var loading = !!(dataHook && !waitForData);\n\t\n\t    // \"reuse\" is a flag passed down when the parent view is\n\t    // either reused via keep-alive or as a child of a kept-alive view.\n\t    // of course we can only reuse if the current kept-alive instance\n\t    // is of the correct type.\n\t    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\t\n\t    if (reuse) {\n\t      // just reuse\n\t      component = view.childVM;\n\t      component.$loadingRouteData = loading;\n\t    } else {\n\t      saveChildView(view);\n\t\n\t      // unbuild current component. this step also destroys\n\t      // and removes all nested child views.\n\t      view.unbuild(true);\n\t\n\t      // build the new component. this will also create the\n\t      // direct child view of the current one. it will register\n\t      // itself as view.childView.\n\t      component = view.build({\n\t        _meta: {\n\t          $loadingRouteData: loading\n\t        },\n\t        created: function created() {\n\t          this._routerView = view;\n\t        }\n\t      });\n\t\n\t      // handle keep-alive.\n\t      // when a kept-alive child vm is restored, we need to\n\t      // add its cached child views into the router's view list,\n\t      // and also properly update current view's child view.\n\t      if (view.keepAlive) {\n\t        component.$loadingRouteData = loading;\n\t        var cachedChildView = component._keepAliveRouterView;\n\t        if (cachedChildView) {\n\t          view.childView = cachedChildView;\n\t          component._keepAliveRouterView = null;\n\t        }\n\t      }\n\t    }\n\t\n\t    // cleanup the component in case the transition is aborted\n\t    // before the component is ever inserted.\n\t    var cleanup = function cleanup() {\n\t      component.$destroy();\n\t    };\n\t\n\t    // actually insert the component and trigger transition\n\t    var insert = function insert() {\n\t      if (reuse) {\n\t        cb && cb();\n\t        return;\n\t      }\n\t      var router = transition.router;\n\t      if (router._rendered || router._transitionOnLoad) {\n\t        view.transition(component);\n\t      } else {\n\t        // no transition on first render, manual transition\n\t        /* istanbul ignore if */\n\t        if (view.setCurrent) {\n\t          // 0.12 compat\n\t          view.setCurrent(component);\n\t        } else {\n\t          // 1.0\n\t          view.childVM = component;\n\t        }\n\t        component.$before(view.anchor, null, false);\n\t      }\n\t      cb && cb();\n\t    };\n\t\n\t    var afterData = function afterData() {\n\t      // activate the child view\n\t      if (view.childView) {\n\t        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n\t      }\n\t      insert();\n\t    };\n\t\n\t    // called after activation hook is resolved\n\t    var afterActivate = function afterActivate() {\n\t      view.activated = true;\n\t      if (dataHook && waitForData) {\n\t        // wait until data loaded to insert\n\t        loadData(component, transition, dataHook, afterData, cleanup);\n\t      } else {\n\t        // load data and insert at the same time\n\t        if (dataHook) {\n\t          loadData(component, transition, dataHook);\n\t        }\n\t        afterData();\n\t      }\n\t    };\n\t\n\t    if (activateHook) {\n\t      transition.callHooks(activateHook, component, afterActivate, {\n\t        cleanup: cleanup,\n\t        postActivate: true\n\t      });\n\t    } else {\n\t      afterActivate();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Reuse a view, just reload data if necessary.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function reuse(view, transition) {\n\t    var component = view.childVM;\n\t    var dataHook = getRouteConfig(component, 'data');\n\t    if (dataHook) {\n\t      loadData(component, transition, dataHook);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Asynchronously load and apply data to component.\n\t   *\n\t   * @param {Vue} component\n\t   * @param {Transition} transition\n\t   * @param {Function} hook\n\t   * @param {Function} cb\n\t   * @param {Function} cleanup\n\t   */\n\t\n\t  function loadData(component, transition, hook, cb, cleanup) {\n\t    component.$loadingRouteData = true;\n\t    transition.callHooks(hook, component, function () {\n\t      component.$loadingRouteData = false;\n\t      component.$emit('route-data-loaded', component);\n\t      cb && cb();\n\t    }, {\n\t      cleanup: cleanup,\n\t      postActivate: true,\n\t      processData: function processData(data) {\n\t        // handle promise sugar syntax\n\t        var promises = [];\n\t        if (isPlainObject(data)) {\n\t          Object.keys(data).forEach(function (key) {\n\t            var val = data[key];\n\t            if (isPromise(val)) {\n\t              promises.push(val.then(function (resolvedVal) {\n\t                component.$set(key, resolvedVal);\n\t              }));\n\t            } else {\n\t              component.$set(key, val);\n\t            }\n\t          });\n\t        }\n\t        if (promises.length) {\n\t          return promises[0].constructor.all(promises);\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Save the child view for a kept-alive view so that\n\t   * we can restore it when it is switched back to.\n\t   *\n\t   * @param {Directive} view\n\t   */\n\t\n\t  function saveChildView(view) {\n\t    if (view.keepAlive && view.childVM && view.childView) {\n\t      view.childVM._keepAliveRouterView = view.childView;\n\t    }\n\t    view.childView = null;\n\t  }\n\t\n\t  /**\n\t   * Check plain object.\n\t   *\n\t   * @param {*} val\n\t   */\n\t\n\t  function isPlainObject(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  /**\n\t   * A RouteTransition object manages the pipeline of a\n\t   * router-view switching process. This is also the object\n\t   * passed into user route hooks.\n\t   *\n\t   * @param {Router} router\n\t   * @param {Route} to\n\t   * @param {Route} from\n\t   */\n\t\n\t  var RouteTransition = (function () {\n\t    function RouteTransition(router, to, from) {\n\t      babelHelpers.classCallCheck(this, RouteTransition);\n\t\n\t      this.router = router;\n\t      this.to = to;\n\t      this.from = from;\n\t      this.next = null;\n\t      this.aborted = false;\n\t      this.done = false;\n\t    }\n\t\n\t    /**\n\t     * Abort current transition and return to previous location.\n\t     */\n\t\n\t    RouteTransition.prototype.abort = function abort() {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        // if the root path throws an error during validation\n\t        // on initial load, it gets caught in an infinite loop.\n\t        var abortingOnLoad = !this.from.path && this.to.path === '/';\n\t        if (!abortingOnLoad) {\n\t          this.router.replace(this.from.path || '/');\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Abort current transition and redirect to a new location.\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    RouteTransition.prototype.redirect = function redirect(path) {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        if (typeof path === 'string') {\n\t          path = mapParams(path, this.to.params, this.to.query);\n\t        } else {\n\t          path.params = path.params || this.to.params;\n\t          path.query = path.query || this.to.query;\n\t        }\n\t        this.router.replace(path);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * A router view transition's pipeline can be described as\n\t     * follows, assuming we are transitioning from an existing\n\t     * <router-view> chain [Component A, Component B] to a new\n\t     * chain [Component A, Component C]:\n\t     *\n\t     *  A    A\n\t     *  | => |\n\t     *  B    C\n\t     *\n\t     * 1. Reusablity phase:\n\t     *   -> canReuse(A, A)\n\t     *   -> canReuse(B, C)\n\t     *   -> determine new queues:\n\t     *      - deactivation: [B]\n\t     *      - activation: [C]\n\t     *\n\t     * 2. Validation phase:\n\t     *   -> canDeactivate(B)\n\t     *   -> canActivate(C)\n\t     *\n\t     * 3. Activation phase:\n\t     *   -> deactivate(B)\n\t     *   -> activate(C)\n\t     *\n\t     * Each of these steps can be asynchronous, and any\n\t     * step can potentially abort the transition.\n\t     *\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.start = function start(cb) {\n\t      var transition = this;\n\t\n\t      // determine the queue of views to deactivate\n\t      var deactivateQueue = [];\n\t      var view = this.router._rootView;\n\t      while (view) {\n\t        deactivateQueue.unshift(view);\n\t        view = view.childView;\n\t      }\n\t      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\t\n\t      // determine the queue of route handlers to activate\n\t      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n\t        return match.handler;\n\t      });\n\t\n\t      // 1. Reusability phase\n\t      var i = undefined,\n\t          reuseQueue = undefined;\n\t      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n\t        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n\t          break;\n\t        }\n\t      }\n\t      if (i > 0) {\n\t        reuseQueue = reverseDeactivateQueue.slice(0, i);\n\t        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n\t        activateQueue = activateQueue.slice(i);\n\t      }\n\t\n\t      // 2. Validation phase\n\t      transition.runQueue(deactivateQueue, canDeactivate, function () {\n\t        transition.runQueue(activateQueue, canActivate, function () {\n\t          transition.runQueue(deactivateQueue, deactivate, function () {\n\t            // 3. Activation phase\n\t\n\t            // Update router current route\n\t            transition.router._onTransitionValidated(transition);\n\t\n\t            // trigger reuse for all reused views\n\t            reuseQueue && reuseQueue.forEach(function (view) {\n\t              return reuse(view, transition);\n\t            });\n\t\n\t            // the root of the chain that needs to be replaced\n\t            // is the top-most non-reusable view.\n\t            if (deactivateQueue.length) {\n\t              var _view = deactivateQueue[deactivateQueue.length - 1];\n\t              var depth = reuseQueue ? reuseQueue.length : 0;\n\t              activate(_view, transition, depth, cb);\n\t            } else {\n\t              cb();\n\t            }\n\t          });\n\t        });\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Asynchronously and sequentially apply a function to a\n\t     * queue.\n\t     *\n\t     * @param {Array} queue\n\t     * @param {Function} fn\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n\t      var transition = this;\n\t      step(0);\n\t      function step(index) {\n\t        if (index >= queue.length) {\n\t          cb();\n\t        } else {\n\t          fn(queue[index], transition, function () {\n\t            step(index + 1);\n\t          });\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a user provided route transition hook and handle\n\t     * the response (e.g. if the user returns a promise).\n\t     *\n\t     * If the user neither expects an argument nor returns a\n\t     * promise, the hook is assumed to be synchronous.\n\t     *\n\t     * @param {Function} hook\n\t     * @param {*} [context]\n\t     * @param {Function} [cb]\n\t     * @param {Object} [options]\n\t     *                 - {Boolean} expectBoolean\n\t     *                 - {Boolean} postActive\n\t     *                 - {Function} processData\n\t     *                 - {Function} cleanup\n\t     */\n\t\n\t    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n\t      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t      var _ref$expectBoolean = _ref.expectBoolean;\n\t      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n\t      var _ref$postActivate = _ref.postActivate;\n\t      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n\t      var processData = _ref.processData;\n\t      var cleanup = _ref.cleanup;\n\t\n\t      var transition = this;\n\t      var nextCalled = false;\n\t\n\t      // abort the transition\n\t      var abort = function abort() {\n\t        cleanup && cleanup();\n\t        transition.abort();\n\t      };\n\t\n\t      // handle errors\n\t      var onError = function onError(err) {\n\t        postActivate ? next() : abort();\n\t        if (err && !transition.router._suppress) {\n\t          warn$1('Uncaught error during transition: ');\n\t          throw err instanceof Error ? err : new Error(err);\n\t        }\n\t      };\n\t\n\t      // since promise swallows errors, we have to\n\t      // throw it in the next tick...\n\t      var onPromiseError = function onPromiseError(err) {\n\t        try {\n\t          onError(err);\n\t        } catch (e) {\n\t          setTimeout(function () {\n\t            throw e;\n\t          }, 0);\n\t        }\n\t      };\n\t\n\t      // advance the transition to the next step\n\t      var next = function next() {\n\t        if (nextCalled) {\n\t          warn$1('transition.next() should be called only once.');\n\t          return;\n\t        }\n\t        nextCalled = true;\n\t        if (transition.aborted) {\n\t          cleanup && cleanup();\n\t          return;\n\t        }\n\t        cb && cb();\n\t      };\n\t\n\t      var nextWithBoolean = function nextWithBoolean(res) {\n\t        if (typeof res === 'boolean') {\n\t          res ? next() : abort();\n\t        } else if (isPromise(res)) {\n\t          res.then(function (ok) {\n\t            ok ? next() : abort();\n\t          }, onPromiseError);\n\t        } else if (!hook.length) {\n\t          next();\n\t        }\n\t      };\n\t\n\t      var nextWithData = function nextWithData(data) {\n\t        var res = undefined;\n\t        try {\n\t          res = processData(data);\n\t        } catch (err) {\n\t          return onError(err);\n\t        }\n\t        if (isPromise(res)) {\n\t          res.then(next, onPromiseError);\n\t        } else {\n\t          next();\n\t        }\n\t      };\n\t\n\t      // expose a clone of the transition object, so that each\n\t      // hook gets a clean copy and prevent the user from\n\t      // messing with the internals.\n\t      var exposed = {\n\t        to: transition.to,\n\t        from: transition.from,\n\t        abort: abort,\n\t        next: processData ? nextWithData : next,\n\t        redirect: function redirect() {\n\t          transition.redirect.apply(transition, arguments);\n\t        }\n\t      };\n\t\n\t      // actually call the hook\n\t      var res = undefined;\n\t      try {\n\t        res = hook.call(context, exposed);\n\t      } catch (err) {\n\t        return onError(err);\n\t      }\n\t\n\t      if (expectBoolean) {\n\t        // boolean hooks\n\t        nextWithBoolean(res);\n\t      } else if (isPromise(res)) {\n\t        // promise\n\t        if (processData) {\n\t          res.then(nextWithData, onPromiseError);\n\t        } else {\n\t          res.then(next, onPromiseError);\n\t        }\n\t      } else if (processData && isPlainOjbect(res)) {\n\t        // data promise sugar\n\t        nextWithData(res);\n\t      } else if (!hook.length) {\n\t        next();\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a single hook or an array of async hooks in series.\n\t     *\n\t     * @param {Array} hooks\n\t     * @param {*} context\n\t     * @param {Function} cb\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n\t      var _this = this;\n\t\n\t      if (Array.isArray(hooks)) {\n\t        this.runQueue(hooks, function (hook, _, next) {\n\t          if (!_this.aborted) {\n\t            _this.callHook(hook, context, next, options);\n\t          }\n\t        }, cb);\n\t      } else {\n\t        this.callHook(hooks, context, cb, options);\n\t      }\n\t    };\n\t\n\t    return RouteTransition;\n\t  })();\n\t\n\t  function isPlainOjbect(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  function toArray(val) {\n\t    return val ? Array.prototype.slice.call(val) : [];\n\t  }\n\t\n\t  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\t\n\t  /**\n\t   * Route Context Object\n\t   *\n\t   * @param {String} path\n\t   * @param {Router} router\n\t   */\n\t\n\t  var Route = function Route(path, router) {\n\t    var _this = this;\n\t\n\t    babelHelpers.classCallCheck(this, Route);\n\t\n\t    var matched = router._recognizer.recognize(path);\n\t    if (matched) {\n\t      // copy all custom fields from route configs\n\t      [].forEach.call(matched, function (match) {\n\t        for (var key in match.handler) {\n\t          if (!internalKeysRE.test(key)) {\n\t            _this[key] = match.handler[key];\n\t          }\n\t        }\n\t      });\n\t      // set query and params\n\t      this.query = matched.queryParams;\n\t      this.params = [].reduce.call(matched, function (prev, cur) {\n\t        if (cur.params) {\n\t          for (var key in cur.params) {\n\t            prev[key] = cur.params[key];\n\t          }\n\t        }\n\t        return prev;\n\t      }, {});\n\t    }\n\t    // expose path and router\n\t    this.path = path;\n\t    // for internal use\n\t    this.matched = matched || router._notFoundHandler;\n\t    // internal reference to router\n\t    Object.defineProperty(this, 'router', {\n\t      enumerable: false,\n\t      value: router\n\t    });\n\t    // Important: freeze self to prevent observation\n\t    Object.freeze(this);\n\t  };\n\t\n\t  function applyOverride (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var extend = _Vue$util.extend;\n\t    var isArray = _Vue$util.isArray;\n\t    var defineReactive = _Vue$util.defineReactive;\n\t\n\t    // override Vue's init and destroy process to keep track of router instances\n\t    var init = Vue.prototype._init;\n\t    Vue.prototype._init = function (options) {\n\t      options = options || {};\n\t      var root = options._parent || options.parent || this;\n\t      var router = root.$router;\n\t      var route = root.$route;\n\t      if (router) {\n\t        // expose router\n\t        this.$router = router;\n\t        router._children.push(this);\n\t        /* istanbul ignore if */\n\t        if (this._defineMeta) {\n\t          // 0.12\n\t          this._defineMeta('$route', route);\n\t        } else {\n\t          // 1.0\n\t          defineReactive(this, '$route', route);\n\t        }\n\t      }\n\t      init.call(this, options);\n\t    };\n\t\n\t    var destroy = Vue.prototype._destroy;\n\t    Vue.prototype._destroy = function () {\n\t      if (!this._isBeingDestroyed && this.$router) {\n\t        this.$router._children.$remove(this);\n\t      }\n\t      destroy.apply(this, arguments);\n\t    };\n\t\n\t    // 1.0 only: enable route mixins\n\t    var strats = Vue.config.optionMergeStrategies;\n\t    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\t\n\t    if (strats) {\n\t      strats.route = function (parentVal, childVal) {\n\t        if (!childVal) return parentVal;\n\t        if (!parentVal) return childVal;\n\t        var ret = {};\n\t        extend(ret, parentVal);\n\t        for (var key in childVal) {\n\t          var a = ret[key];\n\t          var b = childVal[key];\n\t          // for data, activate and deactivate, we need to merge them into\n\t          // arrays similar to lifecycle hooks.\n\t          if (a && hooksToMergeRE.test(key)) {\n\t            ret[key] = (isArray(a) ? a : [a]).concat(b);\n\t          } else {\n\t            ret[key] = b;\n\t          }\n\t        }\n\t        return ret;\n\t      };\n\t    }\n\t  }\n\t\n\t  function View (Vue) {\n\t\n\t    var _ = Vue.util;\n\t    var componentDef =\n\t    // 0.12\n\t    Vue.directive('_component') ||\n\t    // 1.0\n\t    Vue.internalDirectives.component;\n\t    // <router-view> extends the internal component directive\n\t    var viewDef = _.extend({}, componentDef);\n\t\n\t    // with some overrides\n\t    _.extend(viewDef, {\n\t\n\t      _isRouterView: true,\n\t\n\t      bind: function bind() {\n\t        var route = this.vm.$route;\n\t        /* istanbul ignore if */\n\t        if (!route) {\n\t          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n\t          return;\n\t        }\n\t        // force dynamic directive so v-component doesn't\n\t        // attempt to build right now\n\t        this._isDynamicLiteral = true;\n\t        // finally, init by delegating to v-component\n\t        componentDef.bind.call(this);\n\t\n\t        // locate the parent view\n\t        var parentView = undefined;\n\t        var parent = this.vm;\n\t        while (parent) {\n\t          if (parent._routerView) {\n\t            parentView = parent._routerView;\n\t            break;\n\t          }\n\t          parent = parent.$parent;\n\t        }\n\t        if (parentView) {\n\t          // register self as a child of the parent view,\n\t          // instead of activating now. This is so that the\n\t          // child's activate hook is called after the\n\t          // parent's has resolved.\n\t          this.parentView = parentView;\n\t          parentView.childView = this;\n\t        } else {\n\t          // this is the root view!\n\t          var router = route.router;\n\t          router._rootView = this;\n\t        }\n\t\n\t        // handle late-rendered view\n\t        // two possibilities:\n\t        // 1. root view rendered after transition has been\n\t        //    validated;\n\t        // 2. child view rendered after parent view has been\n\t        //    activated.\n\t        var transition = route.router._currentTransition;\n\t        if (!parentView && transition.done || parentView && parentView.activated) {\n\t          var depth = parentView ? parentView.depth + 1 : 0;\n\t          activate(this, transition, depth);\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        if (this.parentView) {\n\t          this.parentView.childView = null;\n\t        }\n\t        componentDef.unbind.call(this);\n\t      }\n\t    });\n\t\n\t    Vue.elementDirective('router-view', viewDef);\n\t  }\n\t\n\t  var trailingSlashRE = /\\/$/;\n\t  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\t  var queryStringRE = /\\?.*$/;\n\t\n\t  // install v-link, which provides navigation support for\n\t  // HTML5 history mode\n\t  function Link (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var _bind = _Vue$util.bind;\n\t    var isObject = _Vue$util.isObject;\n\t    var addClass = _Vue$util.addClass;\n\t    var removeClass = _Vue$util.removeClass;\n\t\n\t    var onPriority = Vue.directive('on').priority;\n\t    var LINK_UPDATE = '__vue-router-link-update__';\n\t\n\t    var activeId = 0;\n\t\n\t    Vue.directive('link-active', {\n\t      priority: 9999,\n\t      bind: function bind() {\n\t        var _this = this;\n\t\n\t        var id = String(activeId++);\n\t        // collect v-links contained within this element.\n\t        // we need do this here before the parent-child relationship\n\t        // gets messed up by terminal directives (if, for, components)\n\t        var childLinks = this.el.querySelectorAll('[v-link]');\n\t        for (var i = 0, l = childLinks.length; i < l; i++) {\n\t          var link = childLinks[i];\n\t          var existingId = link.getAttribute(LINK_UPDATE);\n\t          var value = existingId ? existingId + ',' + id : id;\n\t          // leave a mark on the link element which can be persisted\n\t          // through fragment clones.\n\t          link.setAttribute(LINK_UPDATE, value);\n\t        }\n\t        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n\t          if (link.activeIds.indexOf(id) > -1) {\n\t            link.updateClasses(path, _this.el);\n\t          }\n\t        });\n\t      },\n\t      unbind: function unbind() {\n\t        this.vm.$off(LINK_UPDATE, this.cb);\n\t      }\n\t    });\n\t\n\t    Vue.directive('link', {\n\t      priority: onPriority - 2,\n\t\n\t      bind: function bind() {\n\t        var vm = this.vm;\n\t        /* istanbul ignore if */\n\t        if (!vm.$route) {\n\t          warn$1('v-link can only be used inside a router-enabled app.');\n\t          return;\n\t        }\n\t        this.router = vm.$route.router;\n\t        // update things when the route changes\n\t        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n\t        // check v-link-active ids\n\t        var activeIds = this.el.getAttribute(LINK_UPDATE);\n\t        if (activeIds) {\n\t          this.el.removeAttribute(LINK_UPDATE);\n\t          this.activeIds = activeIds.split(',');\n\t        }\n\t        // no need to handle click if link expects to be opened\n\t        // in a new window/tab.\n\t        /* istanbul ignore if */\n\t        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n\t          return;\n\t        }\n\t        // handle click\n\t        this.handler = _bind(this.onClick, this);\n\t        this.el.addEventListener('click', this.handler);\n\t      },\n\t\n\t      update: function update(target) {\n\t        this.target = target;\n\t        if (isObject(target)) {\n\t          this.append = target.append;\n\t          this.exact = target.exact;\n\t          this.prevActiveClass = this.activeClass;\n\t          this.activeClass = target.activeClass;\n\t        }\n\t        this.onRouteUpdate(this.vm.$route);\n\t      },\n\t\n\t      onClick: function onClick(e) {\n\t        // don't redirect with control keys\n\t        /* istanbul ignore if */\n\t        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n\t        // don't redirect when preventDefault called\n\t        /* istanbul ignore if */\n\t        if (e.defaultPrevented) return;\n\t        // don't redirect on right click\n\t        /* istanbul ignore if */\n\t        if (e.button !== 0) return;\n\t\n\t        var target = this.target;\n\t        if (target) {\n\t          // v-link with expression, just go\n\t          e.preventDefault();\n\t          this.router.go(target);\n\t        } else {\n\t          // no expression, delegate for an <a> inside\n\t          var el = e.target;\n\t          while (el.tagName !== 'A' && el !== this.el) {\n\t            el = el.parentNode;\n\t          }\n\t          if (el.tagName === 'A' && sameOrigin(el)) {\n\t            e.preventDefault();\n\t            var path = el.pathname;\n\t            if (this.router.history.root) {\n\t              path = path.replace(this.router.history.rootRE, '');\n\t            }\n\t            this.router.go({\n\t              path: path,\n\t              replace: target && target.replace,\n\t              append: target && target.append\n\t            });\n\t          }\n\t        }\n\t      },\n\t\n\t      onRouteUpdate: function onRouteUpdate(route) {\n\t        // router.stringifyPath is dependent on current route\n\t        // and needs to be called again whenver route changes.\n\t        var newPath = this.router.stringifyPath(this.target);\n\t        if (this.path !== newPath) {\n\t          this.path = newPath;\n\t          this.updateActiveMatch();\n\t          this.updateHref();\n\t        }\n\t        if (this.activeIds) {\n\t          this.vm.$emit(LINK_UPDATE, this, route.path);\n\t        } else {\n\t          this.updateClasses(route.path, this.el);\n\t        }\n\t      },\n\t\n\t      updateActiveMatch: function updateActiveMatch() {\n\t        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n\t      },\n\t\n\t      updateHref: function updateHref() {\n\t        if (this.el.tagName !== 'A') {\n\t          return;\n\t        }\n\t        var path = this.path;\n\t        var router = this.router;\n\t        var isAbsolute = path.charAt(0) === '/';\n\t        // do not format non-hash relative paths\n\t        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n\t        if (href) {\n\t          this.el.href = href;\n\t        } else {\n\t          this.el.removeAttribute('href');\n\t        }\n\t      },\n\t\n\t      updateClasses: function updateClasses(path, el) {\n\t        var activeClass = this.activeClass || this.router._linkActiveClass;\n\t        // clear old class\n\t        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n\t          toggleClasses(el, this.prevActiveClass, removeClass);\n\t        }\n\t        // remove query string before matching\n\t        var dest = this.path.replace(queryStringRE, '');\n\t        path = path.replace(queryStringRE, '');\n\t        // add new class\n\t        if (this.exact) {\n\t          if (dest === path ||\n\t          // also allow additional trailing slash\n\t          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        } else {\n\t          if (this.activeRE && this.activeRE.test(path)) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        this.el.removeEventListener('click', this.handler);\n\t        this.unwatch && this.unwatch();\n\t      }\n\t    });\n\t\n\t    function sameOrigin(link) {\n\t      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n\t    }\n\t\n\t    // this function is copied from v-bind:class implementation until\n\t    // we properly expose it...\n\t    function toggleClasses(el, key, fn) {\n\t      key = key.trim();\n\t      if (key.indexOf(' ') === -1) {\n\t        fn(el, key);\n\t        return;\n\t      }\n\t      var keys = key.split(/\\s+/);\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        fn(el, keys[i]);\n\t      }\n\t    }\n\t  }\n\t\n\t  var historyBackends = {\n\t    abstract: AbstractHistory,\n\t    hash: HashHistory,\n\t    html5: HTML5History\n\t  };\n\t\n\t  // late bind during install\n\t  var Vue = undefined;\n\t\n\t  /**\n\t   * Router constructor\n\t   *\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  var Router = (function () {\n\t    function Router() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$hashbang = _ref.hashbang;\n\t      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n\t      var _ref$abstract = _ref.abstract;\n\t      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n\t      var _ref$history = _ref.history;\n\t      var history = _ref$history === undefined ? false : _ref$history;\n\t      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n\t      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n\t      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n\t      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n\t      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n\t      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n\t      var _ref$root = _ref.root;\n\t      var root = _ref$root === undefined ? null : _ref$root;\n\t      var _ref$linkActiveClass = _ref.linkActiveClass;\n\t      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n\t      babelHelpers.classCallCheck(this, Router);\n\t\n\t      /* istanbul ignore if */\n\t      if (!Router.installed) {\n\t        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n\t      }\n\t\n\t      // Vue instances\n\t      this.app = null;\n\t      this._children = [];\n\t\n\t      // route recognizer\n\t      this._recognizer = new RouteRecognizer();\n\t      this._guardRecognizer = new RouteRecognizer();\n\t\n\t      // state\n\t      this._started = false;\n\t      this._startCb = null;\n\t      this._currentRoute = {};\n\t      this._currentTransition = null;\n\t      this._previousTransition = null;\n\t      this._notFoundHandler = null;\n\t      this._notFoundRedirect = null;\n\t      this._beforeEachHooks = [];\n\t      this._afterEachHooks = [];\n\t\n\t      // trigger transition on initial render?\n\t      this._rendered = false;\n\t      this._transitionOnLoad = transitionOnLoad;\n\t\n\t      // history mode\n\t      this._root = root;\n\t      this._abstract = abstract;\n\t      this._hashbang = hashbang;\n\t\n\t      // check if HTML5 history is available\n\t      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n\t      this._history = history && hasPushState;\n\t      this._historyFallback = history && !hasPushState;\n\t\n\t      // create history object\n\t      var inBrowser = Vue.util.inBrowser;\n\t      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\t\n\t      var History = historyBackends[this.mode];\n\t      this.history = new History({\n\t        root: root,\n\t        hashbang: this._hashbang,\n\t        onChange: function onChange(path, state, anchor) {\n\t          _this._match(path, state, anchor);\n\t        }\n\t      });\n\t\n\t      // other options\n\t      this._saveScrollPosition = saveScrollPosition;\n\t      this._linkActiveClass = linkActiveClass;\n\t      this._suppress = suppressTransitionError;\n\t    }\n\t\n\t    /**\n\t     * Allow directly passing components to a route\n\t     * definition.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} handler\n\t     */\n\t\n\t    // API ===================================================\n\t\n\t    /**\n\t    * Register a map of top-level paths.\n\t    *\n\t    * @param {Object} map\n\t    */\n\t\n\t    Router.prototype.map = function map(_map) {\n\t      for (var route in _map) {\n\t        this.on(route, _map[route]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Register a single root-level path\n\t     *\n\t     * @param {String} rootPath\n\t     * @param {Object} handler\n\t     *                 - {String} component\n\t     *                 - {Object} [subRoutes]\n\t     *                 - {Boolean} [forceRefresh]\n\t     *                 - {Function} [before]\n\t     *                 - {Function} [after]\n\t     */\n\t\n\t    Router.prototype.on = function on(rootPath, handler) {\n\t      if (rootPath === '*') {\n\t        this._notFound(handler);\n\t      } else {\n\t        this._addRoute(rootPath, handler, []);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set redirects.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.redirect = function redirect(map) {\n\t      for (var path in map) {\n\t        this._addRedirect(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set aliases.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.alias = function alias(map) {\n\t      for (var path in map) {\n\t        this._addAlias(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global before hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.beforeEach = function beforeEach(fn) {\n\t      this._beforeEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global after hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.afterEach = function afterEach(fn) {\n\t      this._afterEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Navigate to a given path.\n\t     * The path can be an object describing a named path in\n\t     * the format of { name: '...', params: {}, query: {}}\n\t     * The path is assumed to be already decoded, and will\n\t     * be resolved against root (if provided)\n\t     *\n\t     * @param {String|Object} path\n\t     * @param {Boolean} [replace]\n\t     */\n\t\n\t    Router.prototype.go = function go(path) {\n\t      var replace = false;\n\t      var append = false;\n\t      if (Vue.util.isObject(path)) {\n\t        replace = path.replace;\n\t        append = path.append;\n\t      }\n\t      path = this.stringifyPath(path);\n\t      if (path) {\n\t        this.history.go(path, replace, append);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Short hand for replacing current path\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    Router.prototype.replace = function replace(path) {\n\t      if (typeof path === 'string') {\n\t        path = { path: path };\n\t      }\n\t      path.replace = true;\n\t      this.go(path);\n\t    };\n\t\n\t    /**\n\t     * Start the router.\n\t     *\n\t     * @param {VueConstructor} App\n\t     * @param {String|Element} container\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    Router.prototype.start = function start(App, container, cb) {\n\t      /* istanbul ignore if */\n\t      if (this._started) {\n\t        warn$1('already started.');\n\t        return;\n\t      }\n\t      this._started = true;\n\t      this._startCb = cb;\n\t      if (!this.app) {\n\t        /* istanbul ignore if */\n\t        if (!App || !container) {\n\t          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n\t        }\n\t        /* istanbul ignore if */\n\t        if (App instanceof Vue) {\n\t          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n\t        }\n\t        this._appContainer = container;\n\t        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n\t        // give it a name for better debugging\n\t        Ctor.options.name = Ctor.options.name || 'RouterApp';\n\t      }\n\t\n\t      // handle history fallback in browsers that do not\n\t      // support HTML5 history API\n\t      if (this._historyFallback) {\n\t        var _location = window.location;\n\t        var _history = new HTML5History({ root: this._root });\n\t        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n\t        if (path && path !== '/') {\n\t          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n\t          return;\n\t        }\n\t      }\n\t\n\t      this.history.start();\n\t    };\n\t\n\t    /**\n\t     * Stop listening to route changes.\n\t     */\n\t\n\t    Router.prototype.stop = function stop() {\n\t      this.history.stop();\n\t      this._started = false;\n\t    };\n\t\n\t    /**\n\t     * Normalize named route object / string paths into\n\t     * a string.\n\t     *\n\t     * @param {Object|String|Number} path\n\t     * @return {String}\n\t     */\n\t\n\t    Router.prototype.stringifyPath = function stringifyPath(path) {\n\t      var generatedPath = '';\n\t      if (path && typeof path === 'object') {\n\t        if (path.name) {\n\t          var extend = Vue.util.extend;\n\t          var currentParams = this._currentTransition && this._currentTransition.to.params;\n\t          var targetParams = path.params || {};\n\t          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n\t          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n\t        } else if (path.path) {\n\t          generatedPath = encodeURI(path.path);\n\t        }\n\t        if (path.query) {\n\t          // note: the generated query string is pre-URL-encoded by the recognizer\n\t          var query = this._recognizer.generateQueryString(path.query);\n\t          if (generatedPath.indexOf('?') > -1) {\n\t            generatedPath += '&' + query.slice(1);\n\t          } else {\n\t            generatedPath += query;\n\t          }\n\t        }\n\t      } else {\n\t        generatedPath = encodeURI(path ? path + '' : '');\n\t      }\n\t      return generatedPath;\n\t    };\n\t\n\t    // Internal methods ======================================\n\t\n\t    /**\n\t    * Add a route containing a list of segments to the internal\n\t    * route recognizer. Will be called recursively to add all\n\t    * possible sub-routes.\n\t    *\n\t    * @param {String} path\n\t    * @param {Object} handler\n\t    * @param {Array} segments\n\t    */\n\t\n\t    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n\t      guardComponent(path, handler);\n\t      handler.path = path;\n\t      handler.fullPath = (segments.reduce(function (path, segment) {\n\t        return path + segment.path;\n\t      }, '') + path).replace('//', '/');\n\t      segments.push({\n\t        path: path,\n\t        handler: handler\n\t      });\n\t      this._recognizer.add(segments, {\n\t        as: handler.name\n\t      });\n\t      // add sub routes\n\t      if (handler.subRoutes) {\n\t        for (var subPath in handler.subRoutes) {\n\t          // recursively walk all sub routes\n\t          this._addRoute(subPath, handler.subRoutes[subPath],\n\t          // pass a copy in recursion to avoid mutating\n\t          // across branches\n\t          segments.slice());\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Set the notFound route handler.\n\t     *\n\t     * @param {Object} handler\n\t     */\n\t\n\t    Router.prototype._notFound = function _notFound(handler) {\n\t      guardComponent('*', handler);\n\t      this._notFoundHandler = [{ handler: handler }];\n\t    };\n\t\n\t    /**\n\t     * Add a redirect record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} redirectPath\n\t     */\n\t\n\t    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n\t      if (path === '*') {\n\t        this._notFoundRedirect = redirectPath;\n\t      } else {\n\t        this._addGuard(path, redirectPath, this.replace);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Add an alias record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} aliasPath\n\t     */\n\t\n\t    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n\t      this._addGuard(path, aliasPath, this._match);\n\t    };\n\t\n\t    /**\n\t     * Add a path guard.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} mappedPath\n\t     * @param {Function} handler\n\t     */\n\t\n\t    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n\t      var _this2 = this;\n\t\n\t      this._guardRecognizer.add([{\n\t        path: path,\n\t        handler: function handler(match, query) {\n\t          var realPath = mapParams(mappedPath, match.params, query);\n\t          _handler.call(_this2, realPath);\n\t        }\n\t      }]);\n\t    };\n\t\n\t    /**\n\t     * Check if a path matches any redirect records.\n\t     *\n\t     * @param {String} path\n\t     * @return {Boolean} - if true, will skip normal match.\n\t     */\n\t\n\t    Router.prototype._checkGuard = function _checkGuard(path) {\n\t      var matched = this._guardRecognizer.recognize(path, true);\n\t      if (matched) {\n\t        matched[0].handler(matched[0], matched.queryParams);\n\t        return true;\n\t      } else if (this._notFoundRedirect) {\n\t        matched = this._recognizer.recognize(path);\n\t        if (!matched) {\n\t          this.replace(this._notFoundRedirect);\n\t          return true;\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Match a URL path and set the route context on vm,\n\t     * triggering view updates.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._match = function _match(path, state, anchor) {\n\t      var _this3 = this;\n\t\n\t      if (this._checkGuard(path)) {\n\t        return;\n\t      }\n\t\n\t      var currentRoute = this._currentRoute;\n\t      var currentTransition = this._currentTransition;\n\t\n\t      if (currentTransition) {\n\t        if (currentTransition.to.path === path) {\n\t          // do nothing if we have an active transition going to the same path\n\t          return;\n\t        } else if (currentRoute.path === path) {\n\t          // We are going to the same path, but we also have an ongoing but\n\t          // not-yet-validated transition. Abort that transition and reset to\n\t          // prev transition.\n\t          currentTransition.aborted = true;\n\t          this._currentTransition = this._prevTransition;\n\t          return;\n\t        } else {\n\t          // going to a totally different path. abort ongoing transition.\n\t          currentTransition.aborted = true;\n\t        }\n\t      }\n\t\n\t      // construct new route and transition context\n\t      var route = new Route(path, this);\n\t      var transition = new RouteTransition(this, route, currentRoute);\n\t\n\t      // current transition is updated right now.\n\t      // however, current route will only be updated after the transition has\n\t      // been validated.\n\t      this._prevTransition = currentTransition;\n\t      this._currentTransition = transition;\n\t\n\t      if (!this.app) {\n\t        (function () {\n\t          // initial render\n\t          var router = _this3;\n\t          _this3.app = new _this3._appConstructor({\n\t            el: _this3._appContainer,\n\t            created: function created() {\n\t              this.$router = router;\n\t            },\n\t            _meta: {\n\t              $route: route\n\t            }\n\t          });\n\t        })();\n\t      }\n\t\n\t      // check global before hook\n\t      var beforeHooks = this._beforeEachHooks;\n\t      var startTransition = function startTransition() {\n\t        transition.start(function () {\n\t          _this3._postTransition(route, state, anchor);\n\t        });\n\t      };\n\t\n\t      if (beforeHooks.length) {\n\t        transition.runQueue(beforeHooks, function (hook, _, next) {\n\t          if (transition === _this3._currentTransition) {\n\t            transition.callHook(hook, null, next, {\n\t              expectBoolean: true\n\t            });\n\t          }\n\t        }, startTransition);\n\t      } else {\n\t        startTransition();\n\t      }\n\t\n\t      if (!this._rendered && this._startCb) {\n\t        this._startCb.call(null);\n\t      }\n\t\n\t      // HACK:\n\t      // set rendered to true after the transition start, so\n\t      // that components that are acitvated synchronously know\n\t      // whether it is the initial render.\n\t      this._rendered = true;\n\t    };\n\t\n\t    /**\n\t     * Set current to the new transition.\n\t     * This is called by the transition object when the\n\t     * validation of a route has succeeded.\n\t     *\n\t     * @param {Transition} transition\n\t     */\n\t\n\t    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n\t      // set current route\n\t      var route = this._currentRoute = transition.to;\n\t      // update route context for all children\n\t      if (this.app.$route !== route) {\n\t        this.app.$route = route;\n\t        this._children.forEach(function (child) {\n\t          child.$route = route;\n\t        });\n\t      }\n\t      // call global after hook\n\t      if (this._afterEachHooks.length) {\n\t        this._afterEachHooks.forEach(function (hook) {\n\t          return hook.call(null, {\n\t            to: transition.to,\n\t            from: transition.from\n\t          });\n\t        });\n\t      }\n\t      this._currentTransition.done = true;\n\t    };\n\t\n\t    /**\n\t     * Handle stuff after the transition.\n\t     *\n\t     * @param {Route} route\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n\t      // handle scroll positions\n\t      // saved scroll positions take priority\n\t      // then we check if the path has an anchor\n\t      var pos = state && state.pos;\n\t      if (pos && this._saveScrollPosition) {\n\t        Vue.nextTick(function () {\n\t          window.scrollTo(pos.x, pos.y);\n\t        });\n\t      } else if (anchor) {\n\t        Vue.nextTick(function () {\n\t          var el = document.getElementById(anchor.slice(1));\n\t          if (el) {\n\t            window.scrollTo(window.scrollX, el.offsetTop);\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    return Router;\n\t  })();\n\t\n\t  function guardComponent(path, handler) {\n\t    var comp = handler.component;\n\t    if (Vue.util.isPlainObject(comp)) {\n\t      comp = handler.component = Vue.extend(comp);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (typeof comp !== 'function') {\n\t      handler.component = null;\n\t      warn$1('invalid component for route \"' + path + '\".');\n\t    }\n\t  }\n\t\n\t  /* Installation */\n\t\n\t  Router.installed = false;\n\t\n\t  /**\n\t   * Installation interface.\n\t   * Install the necessary directives.\n\t   */\n\t\n\t  Router.install = function (externalVue) {\n\t    /* istanbul ignore if */\n\t    if (Router.installed) {\n\t      warn$1('already installed.');\n\t      return;\n\t    }\n\t    Vue = externalVue;\n\t    applyOverride(Vue);\n\t    View(Vue);\n\t    Link(Vue);\n\t    exports$1.Vue = Vue;\n\t    Router.installed = true;\n\t  };\n\t\n\t  // auto install\n\t  /* istanbul ignore if */\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(Router);\n\t  }\n\t\n\t  return Router;\n\t\n\t}));\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getId = getId;\n\tfunction getId(state) {\n\t  return state.picId;\n\t}\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Dashboard = __webpack_require__(3);\n\t\n\tvar _Dashboard2 = _interopRequireDefault(_Dashboard);\n\t\n\tvar _Home = __webpack_require__(4);\n\t\n\tvar _Home2 = _interopRequireDefault(_Home);\n\t\n\tvar _store = __webpack_require__(2);\n\t\n\tvar _store2 = _interopRequireDefault(_store);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  components: {\n\t    Dashboard: _Dashboard2.default,\n\t    Home: _Home2.default\n\t  },\n\t  store: _store2.default };\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _getters = __webpack_require__(6);\n\t\n\tvar _vue = __webpack_require__(1);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _vueRouter = __webpack_require__(5);\n\t\n\tvar _vueRouter2 = _interopRequireDefault(_vueRouter);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.use(_vueRouter2.default);\n\tvar router = new _vueRouter2.default();\n\texports.default = {\n\t  ready: function ready() {\n\t    this.$http.get('/api/v1/pics/' + this.imageId).then(function (response) {\n\t      this.$set('pic', response.data.uploaded_image);\n\t    }, function (response) {\n\t      router.go('/');\n\t    });\n\t  },\n\t  vuex: {\n\t    getters: {\n\t      imageId: _getters.getId\n\t    }\n\t  },\n\t  methods: {\n\t    reset: function reset() {\n\t      this.$http.get('/api/v1/pics/' + this.imageId).then(function (response) {\n\t        this.$set('pic', response.data.uploaded_image);\n\t      }, function (response) {});\n\t    },\n\t    effect: function effect(id) {\n\t      window.debugger;\n\t      this.$http.get('/api/v1/pics/' + this.imageId + '?filter=' + id).then(function (response) {\n\t        this.$set('pic', response.data.edited_image);\n\t      }, function (response) {\n\t        this.$http.get('/api/v1/pics/' + this.imageId + '?filter=' + id).then(function (response) {\n\t          this.$set('pic', response.data.edited_image);\n\t        }, function (response) {});\n\t      });\n\t    },\n\t    share: function share(pic) {\n\t      window.FB.ui({\n\t        method: 'share',\n\t        mobile_iframe: true,\n\t        href: pic\n\t      }, function (response) {\n\t        if (response && !response.error_message) {\n\t          window.alert('Posting completed.');\n\t        } else {\n\t          window.alert('Error while posting.');\n\t        }\n\t      });\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _store = __webpack_require__(2);\n\t\n\tvar _store2 = _interopRequireDefault(_store);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  ready: function ready() {\n\t    this.checkPictures();\n\t    this.checkCategories();\n\t  },\n\t  methods: {\n\t    checkCategories: function checkCategories() {\n\t      this.$http.get('/api/v1/categories/').then(function (response) {\n\t        console.log(response.data);\n\t        if (response.data.length === 0) {\n\t          this.$set('no_category', true);\n\t        } else {\n\t          this.$set('category', response.data[0]);\n\t          this.$set('no_category', false);\n\t        }\n\t      }, function (response) {});\n\t    },\n\t    checkPictures: function checkPictures() {\n\t      this.$http.get('/api/v1/pics/').then(function (response) {\n\t        if (response.data.length === 0) {\n\t          this.$set('pics', response.data);\n\t          this.$set('no_pics', true);\n\t          this.$set('no_data', false);\n\t        } else {\n\t          this.$set('pics', response.data);\n\t          this.$set('no_pics', false);\n\t          this.$set('no_data', false);\n\t        }\n\t      }, function (response) {\n\t        this.$set('no_data', true);\n\t        this.$set('no_pics', false);\n\t      });\n\t    },\n\t    deletePic: function deletePic(id, picId) {\n\t      this.$http.delete('/api/v1/pics/' + picId).then(function (response) {\n\t        this.pics.$remove(id);\n\t        this.$set('status', 'Picture deleted');\n\t        this.checkPictures();\n\t      }, function (response) {});\n\t    },\n\t    onSubmitForm: function onSubmitForm(e) {\n\t      e.preventDefault();\n\t      var fileUploadFormData = new window.FormData();\n\t      fileUploadFormData.append('uploaded_image', this.$els.fileinput.files[0]);\n\t\n\t      this.$http.post('/api/v1/pics/', fileUploadFormData).then(function (response) {\n\t        this.checkPictures();\n\t        this.$set('newInput', '');\n\t      }, function (response) {});\n\t    }\n\t  },\n\t  vuex: {\n\t    actions: {\n\t      splash: function splash(e, picId) {\n\t        _store2.default.dispatch('SELECTED', picId);\n\t      }\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"ui two top attached steps\\\"> <div class=\\\"active step\\\"> <a v-link=\\\"'/home'\\\"> <div class=content> <div class=title><i class=\\\"upload icon\\\"></i>Upload</div> <div class=description>Upload the picture</div> </div> </a> </div> <div class=\\\"disabled step\\\"> <a v-link=\\\"'/effects'\\\"> <div class=content> <div class=title><i class=\\\"magic icon\\\"></i>Spice it up</div> <div class=description>Select effects to the photos</div> </div> </a> </div> </div>  <router-view></router-view>\";\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=wrapper> <div class=\\\"ui large two top attached steps\\\"> <div class=\\\"active step\\\"> <a v-link=\\\"'/'\\\"> <div class=content> <div class=title><i class=\\\"upload icon\\\"></i>Upload</div> <div class=description>Upload the picture</div> </div> </a> </div> <div class=\\\"disabled step\\\"> <a v-link=\\\"'/dashboard'\\\"> <div class=content> <div class=title><i class=\\\"magic icon\\\"></i>Spice it up</div> <div class=description>Select effects to the photos</div> </div> </a> </div> </div> </div> <div id=upload align=center> <div> <h2>Select an image</h2> <form> <input type=file v-el:fileinput v-model=newInput class=form-control> <button class=\\\"ui button\\\" v-on:click=onSubmitForm> <i class=\\\"upload icon\\\"></i> Upload </button> </form> </div> </div> <h4 class=\\\"ui horizontal divider header\\\"> <i class=\\\"camera icon\\\"></i> Your Pictures </h4> <div v-if=no_pics align=center> <i class=\\\"ui huge frown icon\\\"></i> <h4>You have no photos on sJourney <br>Why not upload one or more ...</h4> </div> <div v-if=pics> <div class=\\\"ui six link cards\\\"> <div class=card v-for=\\\"pic in pics\\\"> <div class=image v-on:click=splash(pic.id) v-link=\\\"'/dashboard'\\\"> <img src=\\\"[[ pic.uploaded_image ]]\\\"> </div> <div class=content> <div class=header>[[ pic.name ]]</div> <div class=\\\"extra content\\\"> <a v-on:click=\\\"deletePic($index, pic.id)\\\"> <span class=\\\"right floated\\\"> <i class=\\\"ui delete icon\\\"></i> </span> </a> </div> </div> </div> </div> </div> <div v-if=no_data align=center> <h4>Please try reloading</h4> </div>\";\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=dashboard _v-2612bd2f=\\\"\\\"> <div class=\\\"ui large two top attached steps\\\" _v-2612bd2f=\\\"\\\"> <div class=step _v-2612bd2f=\\\"\\\"> <a v-link=\\\"'/'\\\" _v-2612bd2f=\\\"\\\"> <div class=content _v-2612bd2f=\\\"\\\"> <div class=title _v-2612bd2f=\\\"\\\"><i class=\\\"upload icon\\\" _v-2612bd2f=\\\"\\\"></i>Upload</div> <div class=description _v-2612bd2f=\\\"\\\">Upload the picture</div> </div> </a> </div> <div class=\\\"active step\\\" _v-2612bd2f=\\\"\\\"> <a v-link=\\\"'/dashboard'\\\" _v-2612bd2f=\\\"\\\"> <div class=content _v-2612bd2f=\\\"\\\"> <div class=title _v-2612bd2f=\\\"\\\"><i class=\\\"magic icon\\\" _v-2612bd2f=\\\"\\\"></i>Spice it up</div> <div class=description _v-2612bd2f=\\\"\\\">Select effects to the photos</div> </div> </a> </div> </div> <div align=center _v-2612bd2f=\\\"\\\"> <img class=\\\"ui centered huge spaced image\\\" src=\\\"[[ pic ]]\\\" _v-2612bd2f=\\\"\\\"> <div class=\\\"ui buttons\\\" _v-2612bd2f=\\\"\\\"> <button class=\\\"ui button\\\" v-on:click=reset _v-2612bd2f=\\\"\\\">RESET</button> <div class=or _v-2612bd2f=\\\"\\\"></div> <a href=\\\"[[ pic ]]\\\" download=sjourney_effect _v-2612bd2f=\\\"\\\"> <button class=\\\"ui positive button\\\" _v-2612bd2f=\\\"\\\"><i class=\\\"save icon\\\" _v-2612bd2f=\\\"\\\"></i>Save</button> </a> <div class=or _v-2612bd2f=\\\"\\\"></div> <button class=\\\"ui secondary button\\\" v-on:click=share(pic) _v-2612bd2f=\\\"\\\"><i class=\\\"share icon\\\" _v-2612bd2f=\\\"\\\"></i>Share</button> </div> </div> <div class=\\\"ui segment\\\" _v-2612bd2f=\\\"\\\"> <h2 class=\\\"ui right floated header\\\" _v-2612bd2f=\\\"\\\">Effects</h2> <div class=\\\"ui clearing divider\\\" _v-2612bd2f=\\\"\\\"> </div> <div class=\\\"fx_images ui small circular images\\\" _v-2612bd2f=\\\"\\\"> <span v-on:click=effect(1) _v-2612bd2f=\\\"\\\"> <img src=/media/previews/b_w.thumbnail _v-2612bd2f=\\\"\\\"> </span> <span v-on:click=effect(2) _v-2612bd2f=\\\"\\\"> <img src=/media/previews/detail.thumbnail _v-2612bd2f=\\\"\\\"> </span> <span v-on:click=effect(3) _v-2612bd2f=\\\"\\\"> <img src=/media/previews/blur.thumbnail _v-2612bd2f=\\\"\\\"> </span> <span v-on:click=effect(4) _v-2612bd2f=\\\"\\\"> <img src=/media/previews/emboss.thumbnail _v-2612bd2f=\\\"\\\"> </span> <span v-on:click=effect(5) _v-2612bd2f=\\\"\\\"> <img src=/media/previews/upside_down.thumbnail _v-2612bd2f=\\\"\\\"> </span> <span v-on:click=effect(6) _v-2612bd2f=\\\"\\\"> <img src=/media/previews/find_edges.thumbnail _v-2612bd2f=\\\"\\\"> </span> <span v-on:click=effect(7) _v-2612bd2f=\\\"\\\"> <img src=/media/previews/contour.thumbnail _v-2612bd2f=\\\"\\\"> </span> <span v-on:click=effect(8) _v-2612bd2f=\\\"\\\"> <img src=/media/previews/contrast.thumbnail _v-2612bd2f=\\\"\\\"> </span> <span v-on:click=effect(9) _v-2612bd2f=\\\"\\\"> <img src=/media/previews/bright.thumbnail _v-2612bd2f=\\\"\\\"> </span> <span v-on:click=effect(10) _v-2612bd2f=\\\"\\\"> <img src=/media/previews/pixelate.thumbnail _v-2612bd2f=\\\"\\\"> </span> </div> </div> </div>\";\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(7)\n\t__vue_template__ = __webpack_require__(11)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * vue-resource v0.7.4\n\t * https://github.com/vuejs/vue-resource\n\t * Released under the MIT License.\n\t */\n\t\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n\t  return typeof obj;\n\t} : function (obj) {\n\t  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n\t};\n\t\n\t/**\n\t * Utility functions.\n\t */\n\t\n\tvar util = {};\n\tvar config = {};\n\tvar array = [];\n\tvar console = window.console;\n\tfunction Util (Vue) {\n\t    util = Vue.util;\n\t    config = Vue.config;\n\t}\n\t\n\tvar isArray = Array.isArray;\n\t\n\tfunction warn(msg) {\n\t    if (console && util.warn && (!config.silent || config.debug)) {\n\t        console.warn('[VueResource warn]: ' + msg);\n\t    }\n\t}\n\t\n\tfunction error(msg) {\n\t    if (console) {\n\t        console.error(msg);\n\t    }\n\t}\n\t\n\tfunction nextTick(cb, ctx) {\n\t    return util.nextTick(cb, ctx);\n\t}\n\t\n\tfunction trim(str) {\n\t    return str.replace(/^\\s*|\\s*$/g, '');\n\t}\n\t\n\tfunction toLower(str) {\n\t    return str ? str.toLowerCase() : '';\n\t}\n\t\n\tfunction isString(val) {\n\t    return typeof val === 'string';\n\t}\n\t\n\tfunction isFunction(val) {\n\t    return typeof val === 'function';\n\t}\n\t\n\tfunction isObject(obj) {\n\t    return obj !== null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n\t}\n\t\n\tfunction isPlainObject(obj) {\n\t    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n\t}\n\t\n\tfunction options(fn, obj, opts) {\n\t\n\t    opts = opts || {};\n\t\n\t    if (isFunction(opts)) {\n\t        opts = opts.call(obj);\n\t    }\n\t\n\t    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });\n\t}\n\t\n\tfunction each(obj, iterator) {\n\t\n\t    var i, key;\n\t\n\t    if (typeof obj.length == 'number') {\n\t        for (i = 0; i < obj.length; i++) {\n\t            iterator.call(obj[i], obj[i], i);\n\t        }\n\t    } else if (isObject(obj)) {\n\t        for (key in obj) {\n\t            if (obj.hasOwnProperty(key)) {\n\t                iterator.call(obj[key], obj[key], key);\n\t            }\n\t        }\n\t    }\n\t\n\t    return obj;\n\t}\n\t\n\tfunction extend(target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (arg) {\n\t        _merge(target, arg);\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction merge(target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (arg) {\n\t        _merge(target, arg, true);\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction _merge(target, source, deep) {\n\t    for (var key in source) {\n\t        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n\t            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n\t                target[key] = {};\n\t            }\n\t            if (isArray(source[key]) && !isArray(target[key])) {\n\t                target[key] = [];\n\t            }\n\t            _merge(target[key], source[key], deep);\n\t        } else if (source[key] !== undefined) {\n\t            target[key] = source[key];\n\t        }\n\t    }\n\t}\n\t\n\tfunction root (options, next) {\n\t\n\t    var url = next(options);\n\t\n\t    if (isString(options.root) && !url.match(/^(https?:)?\\//)) {\n\t        url = options.root + '/' + url;\n\t    }\n\t\n\t    return url;\n\t}\n\t\n\tfunction query (options, next) {\n\t\n\t    var urlParams = Object.keys(Url.options.params),\n\t        query = {},\n\t        url = next(options);\n\t\n\t    each(options.params, function (value, key) {\n\t        if (urlParams.indexOf(key) === -1) {\n\t            query[key] = value;\n\t        }\n\t    });\n\t\n\t    query = Url.params(query);\n\t\n\t    if (query) {\n\t        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n\t    }\n\t\n\t    return url;\n\t}\n\t\n\tfunction legacy (options, next) {\n\t\n\t    var variables = [],\n\t        url = next(options);\n\t\n\t    url = url.replace(/(\\/?):([a-z]\\w*)/gi, function (match, slash, name) {\n\t\n\t        warn('The `:' + name + '` parameter syntax has been deprecated. Use the `{' + name + '}` syntax instead.');\n\t\n\t        if (options.params[name]) {\n\t            variables.push(name);\n\t            return slash + encodeUriSegment(options.params[name]);\n\t        }\n\t\n\t        return '';\n\t    });\n\t\n\t    variables.forEach(function (key) {\n\t        delete options.params[key];\n\t    });\n\t\n\t    return url;\n\t}\n\t\n\tfunction encodeUriSegment(value) {\n\t\n\t    return encodeUriQuery(value, true).replace(/%26/gi, '&').replace(/%3D/gi, '=').replace(/%2B/gi, '+');\n\t}\n\t\n\tfunction encodeUriQuery(value, spaces) {\n\t\n\t    return encodeURIComponent(value).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, spaces ? '%20' : '+');\n\t}\n\t\n\t/**\n\t * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n\t */\n\t\n\tfunction expand(url, params, variables) {\n\t\n\t    var tmpl = parse(url),\n\t        expanded = tmpl.expand(params);\n\t\n\t    if (variables) {\n\t        variables.push.apply(variables, tmpl.vars);\n\t    }\n\t\n\t    return expanded;\n\t}\n\t\n\tfunction parse(template) {\n\t\n\t    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n\t        variables = [];\n\t\n\t    return {\n\t        vars: variables,\n\t        expand: function expand(context) {\n\t            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n\t                if (expression) {\n\t\n\t                    var operator = null,\n\t                        values = [];\n\t\n\t                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n\t                        operator = expression.charAt(0);\n\t                        expression = expression.substr(1);\n\t                    }\n\t\n\t                    expression.split(/,/g).forEach(function (variable) {\n\t                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n\t                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n\t                        variables.push(tmp[1]);\n\t                    });\n\t\n\t                    if (operator && operator !== '+') {\n\t\n\t                        var separator = ',';\n\t\n\t                        if (operator === '?') {\n\t                            separator = '&';\n\t                        } else if (operator !== '#') {\n\t                            separator = operator;\n\t                        }\n\t\n\t                        return (values.length !== 0 ? operator : '') + values.join(separator);\n\t                    } else {\n\t                        return values.join(',');\n\t                    }\n\t                } else {\n\t                    return encodeReserved(literal);\n\t                }\n\t            });\n\t        }\n\t    };\n\t}\n\t\n\tfunction getValues(context, operator, key, modifier) {\n\t\n\t    var value = context[key],\n\t        result = [];\n\t\n\t    if (isDefined(value) && value !== '') {\n\t        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n\t            value = value.toString();\n\t\n\t            if (modifier && modifier !== '*') {\n\t                value = value.substring(0, parseInt(modifier, 10));\n\t            }\n\t\n\t            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n\t        } else {\n\t            if (modifier === '*') {\n\t                if (Array.isArray(value)) {\n\t                    value.filter(isDefined).forEach(function (value) {\n\t                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n\t                    });\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (isDefined(value[k])) {\n\t                            result.push(encodeValue(operator, value[k], k));\n\t                        }\n\t                    });\n\t                }\n\t            } else {\n\t                var tmp = [];\n\t\n\t                if (Array.isArray(value)) {\n\t                    value.filter(isDefined).forEach(function (value) {\n\t                        tmp.push(encodeValue(operator, value));\n\t                    });\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (isDefined(value[k])) {\n\t                            tmp.push(encodeURIComponent(k));\n\t                            tmp.push(encodeValue(operator, value[k].toString()));\n\t                        }\n\t                    });\n\t                }\n\t\n\t                if (isKeyOperator(operator)) {\n\t                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n\t                } else if (tmp.length !== 0) {\n\t                    result.push(tmp.join(','));\n\t                }\n\t            }\n\t        }\n\t    } else {\n\t        if (operator === ';') {\n\t            result.push(encodeURIComponent(key));\n\t        } else if (value === '' && (operator === '&' || operator === '?')) {\n\t            result.push(encodeURIComponent(key) + '=');\n\t        } else if (value === '') {\n\t            result.push('');\n\t        }\n\t    }\n\t\n\t    return result;\n\t}\n\t\n\tfunction isDefined(value) {\n\t    return value !== undefined && value !== null;\n\t}\n\t\n\tfunction isKeyOperator(operator) {\n\t    return operator === ';' || operator === '&' || operator === '?';\n\t}\n\t\n\tfunction encodeValue(operator, value, key) {\n\t\n\t    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);\n\t\n\t    if (key) {\n\t        return encodeURIComponent(key) + '=' + value;\n\t    } else {\n\t        return value;\n\t    }\n\t}\n\t\n\tfunction encodeReserved(str) {\n\t    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n\t        if (!/%[0-9A-Fa-f]/.test(part)) {\n\t            part = encodeURI(part);\n\t        }\n\t        return part;\n\t    }).join('');\n\t}\n\t\n\tfunction template (options) {\n\t\n\t    var variables = [],\n\t        url = expand(options.url, options.params, variables);\n\t\n\t    variables.forEach(function (key) {\n\t        delete options.params[key];\n\t    });\n\t\n\t    return url;\n\t}\n\t\n\t/**\n\t * Service for URL templating.\n\t */\n\t\n\tvar ie = document.documentMode;\n\tvar el = document.createElement('a');\n\t\n\tfunction Url(url, params) {\n\t\n\t    var self = this || {},\n\t        options = url,\n\t        transform;\n\t\n\t    if (isString(url)) {\n\t        options = { url: url, params: params };\n\t    }\n\t\n\t    options = merge({}, Url.options, self.$options, options);\n\t\n\t    Url.transforms.forEach(function (handler) {\n\t        transform = factory(handler, transform, self.$vm);\n\t    });\n\t\n\t    return transform(options);\n\t}\n\t\n\t/**\n\t * Url options.\n\t */\n\t\n\tUrl.options = {\n\t    url: '',\n\t    root: null,\n\t    params: {}\n\t};\n\t\n\t/**\n\t * Url transforms.\n\t */\n\t\n\tUrl.transforms = [template, legacy, query, root];\n\t\n\t/**\n\t * Encodes a Url parameter string.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tUrl.params = function (obj) {\n\t\n\t    var params = [],\n\t        escape = encodeURIComponent;\n\t\n\t    params.add = function (key, value) {\n\t\n\t        if (isFunction(value)) {\n\t            value = value();\n\t        }\n\t\n\t        if (value === null) {\n\t            value = '';\n\t        }\n\t\n\t        this.push(escape(key) + '=' + escape(value));\n\t    };\n\t\n\t    serialize(params, obj);\n\t\n\t    return params.join('&').replace(/%20/g, '+');\n\t};\n\t\n\t/**\n\t * Parse a URL and return its components.\n\t *\n\t * @param {String} url\n\t */\n\t\n\tUrl.parse = function (url) {\n\t\n\t    if (ie) {\n\t        el.href = url;\n\t        url = el.href;\n\t    }\n\t\n\t    el.href = url;\n\t\n\t    return {\n\t        href: el.href,\n\t        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n\t        port: el.port,\n\t        host: el.host,\n\t        hostname: el.hostname,\n\t        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n\t        search: el.search ? el.search.replace(/^\\?/, '') : '',\n\t        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n\t    };\n\t};\n\t\n\tfunction factory(handler, next, vm) {\n\t    return function (options) {\n\t        return handler.call(vm, options, next);\n\t    };\n\t}\n\t\n\tfunction serialize(params, obj, scope) {\n\t\n\t    var array = isArray(obj),\n\t        plain = isPlainObject(obj),\n\t        hash;\n\t\n\t    each(obj, function (value, key) {\n\t\n\t        hash = isObject(value) || isArray(value);\n\t\n\t        if (scope) {\n\t            key = scope + '[' + (plain || hash ? key : '') + ']';\n\t        }\n\t\n\t        if (!scope && array) {\n\t            params.add(value.name, value.value);\n\t        } else if (hash) {\n\t            serialize(params, value, key);\n\t        } else {\n\t            params.add(key, value);\n\t        }\n\t    });\n\t}\n\t\n\t/**\n\t * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n\t */\n\t\n\tvar RESOLVED = 0;\n\tvar REJECTED = 1;\n\tvar PENDING = 2;\n\t\n\tfunction Promise$2(executor) {\n\t\n\t    this.state = PENDING;\n\t    this.value = undefined;\n\t    this.deferred = [];\n\t\n\t    var promise = this;\n\t\n\t    try {\n\t        executor(function (x) {\n\t            promise.resolve(x);\n\t        }, function (r) {\n\t            promise.reject(r);\n\t        });\n\t    } catch (e) {\n\t        promise.reject(e);\n\t    }\n\t}\n\t\n\tPromise$2.reject = function (r) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        reject(r);\n\t    });\n\t};\n\t\n\tPromise$2.resolve = function (x) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        resolve(x);\n\t    });\n\t};\n\t\n\tPromise$2.all = function all(iterable) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        var count = 0,\n\t            result = [];\n\t\n\t        if (iterable.length === 0) {\n\t            resolve(result);\n\t        }\n\t\n\t        function resolver(i) {\n\t            return function (x) {\n\t                result[i] = x;\n\t                count += 1;\n\t\n\t                if (count === iterable.length) {\n\t                    resolve(result);\n\t                }\n\t            };\n\t        }\n\t\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise$2.resolve(iterable[i]).then(resolver(i), reject);\n\t        }\n\t    });\n\t};\n\t\n\tPromise$2.race = function race(iterable) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise$2.resolve(iterable[i]).then(resolve, reject);\n\t        }\n\t    });\n\t};\n\t\n\tvar p$1 = Promise$2.prototype;\n\t\n\tp$1.resolve = function resolve(x) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (x === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        var called = false;\n\t\n\t        try {\n\t            var then = x && x['then'];\n\t\n\t            if (x !== null && (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && typeof then === 'function') {\n\t                then.call(x, function (x) {\n\t                    if (!called) {\n\t                        promise.resolve(x);\n\t                    }\n\t                    called = true;\n\t                }, function (r) {\n\t                    if (!called) {\n\t                        promise.reject(r);\n\t                    }\n\t                    called = true;\n\t                });\n\t                return;\n\t            }\n\t        } catch (e) {\n\t            if (!called) {\n\t                promise.reject(e);\n\t            }\n\t            return;\n\t        }\n\t\n\t        promise.state = RESOLVED;\n\t        promise.value = x;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp$1.reject = function reject(reason) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (reason === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        promise.state = REJECTED;\n\t        promise.value = reason;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp$1.notify = function notify() {\n\t    var promise = this;\n\t\n\t    nextTick(function () {\n\t        if (promise.state !== PENDING) {\n\t            while (promise.deferred.length) {\n\t                var deferred = promise.deferred.shift(),\n\t                    onResolved = deferred[0],\n\t                    onRejected = deferred[1],\n\t                    resolve = deferred[2],\n\t                    reject = deferred[3];\n\t\n\t                try {\n\t                    if (promise.state === RESOLVED) {\n\t                        if (typeof onResolved === 'function') {\n\t                            resolve(onResolved.call(undefined, promise.value));\n\t                        } else {\n\t                            resolve(promise.value);\n\t                        }\n\t                    } else if (promise.state === REJECTED) {\n\t                        if (typeof onRejected === 'function') {\n\t                            resolve(onRejected.call(undefined, promise.value));\n\t                        } else {\n\t                            reject(promise.value);\n\t                        }\n\t                    }\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            }\n\t        }\n\t    });\n\t};\n\t\n\tp$1.then = function then(onResolved, onRejected) {\n\t    var promise = this;\n\t\n\t    return new Promise$2(function (resolve, reject) {\n\t        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n\t        promise.notify();\n\t    });\n\t};\n\t\n\tp$1.catch = function (onRejected) {\n\t    return this.then(undefined, onRejected);\n\t};\n\t\n\tvar PromiseObj = window.Promise || Promise$2;\n\t\n\tfunction Promise$1(executor, context) {\n\t\n\t    if (executor instanceof PromiseObj) {\n\t        this.promise = executor;\n\t    } else {\n\t        this.promise = new PromiseObj(executor.bind(context));\n\t    }\n\t\n\t    this.context = context;\n\t}\n\t\n\tPromise$1.all = function (iterable, context) {\n\t    return new Promise$1(PromiseObj.all(iterable), context);\n\t};\n\t\n\tPromise$1.resolve = function (value, context) {\n\t    return new Promise$1(PromiseObj.resolve(value), context);\n\t};\n\t\n\tPromise$1.reject = function (reason, context) {\n\t    return new Promise$1(PromiseObj.reject(reason), context);\n\t};\n\t\n\tPromise$1.race = function (iterable, context) {\n\t    return new Promise$1(PromiseObj.race(iterable), context);\n\t};\n\t\n\tvar p = Promise$1.prototype;\n\t\n\tp.bind = function (context) {\n\t    this.context = context;\n\t    return this;\n\t};\n\t\n\tp.then = function (fulfilled, rejected) {\n\t\n\t    if (fulfilled && fulfilled.bind && this.context) {\n\t        fulfilled = fulfilled.bind(this.context);\n\t    }\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    this.promise = this.promise.then(fulfilled, rejected);\n\t\n\t    return this;\n\t};\n\t\n\tp.catch = function (rejected) {\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    this.promise = this.promise.catch(rejected);\n\t\n\t    return this;\n\t};\n\t\n\tp.finally = function (callback) {\n\t\n\t    return this.then(function (value) {\n\t        callback.call(this);\n\t        return value;\n\t    }, function (reason) {\n\t        callback.call(this);\n\t        return PromiseObj.reject(reason);\n\t    });\n\t};\n\t\n\tp.success = function (callback) {\n\t\n\t    warn('The `success` method has been deprecated. Use the `then` method instead.');\n\t\n\t    return this.then(function (response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    });\n\t};\n\t\n\tp.error = function (callback) {\n\t\n\t    warn('The `error` method has been deprecated. Use the `catch` method instead.');\n\t\n\t    return this.catch(function (response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    });\n\t};\n\t\n\tp.always = function (callback) {\n\t\n\t    warn('The `always` method has been deprecated. Use the `finally` method instead.');\n\t\n\t    var cb = function cb(response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    };\n\t\n\t    return this.then(cb, cb);\n\t};\n\t\n\tfunction xdrClient (request) {\n\t    return new Promise$1(function (resolve) {\n\t\n\t        var xdr = new XDomainRequest(),\n\t            response = { request: request },\n\t            handler;\n\t\n\t        request.cancel = function () {\n\t            xdr.abort();\n\t        };\n\t\n\t        xdr.open(request.method, Url(request), true);\n\t\n\t        handler = function handler(event) {\n\t\n\t            response.data = xdr.responseText;\n\t            response.status = xdr.status;\n\t            response.statusText = xdr.statusText || '';\n\t\n\t            resolve(response);\n\t        };\n\t\n\t        xdr.timeout = 0;\n\t        xdr.onload = handler;\n\t        xdr.onabort = handler;\n\t        xdr.onerror = handler;\n\t        xdr.ontimeout = function () {};\n\t        xdr.onprogress = function () {};\n\t\n\t        xdr.send(request.data);\n\t    });\n\t}\n\t\n\tvar originUrl = Url.parse(location.href);\n\tvar supportCors = 'withCredentials' in new XMLHttpRequest();\n\t\n\tvar exports$1 = {\n\t    request: function request(_request) {\n\t\n\t        if (_request.crossOrigin === null) {\n\t            _request.crossOrigin = crossOrigin(_request);\n\t        }\n\t\n\t        if (_request.crossOrigin) {\n\t\n\t            if (!supportCors) {\n\t                _request.client = xdrClient;\n\t            }\n\t\n\t            _request.emulateHTTP = false;\n\t        }\n\t\n\t        return _request;\n\t    }\n\t};\n\t\n\tfunction crossOrigin(request) {\n\t\n\t    var requestUrl = Url.parse(Url(request));\n\t\n\t    return requestUrl.protocol !== originUrl.protocol || requestUrl.host !== originUrl.host;\n\t}\n\t\n\tvar exports$2 = {\n\t    request: function request(_request) {\n\t\n\t        if (_request.emulateJSON && isPlainObject(_request.data)) {\n\t            _request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n\t            _request.data = Url.params(_request.data);\n\t        }\n\t\n\t        if (isObject(_request.data) && /FormData/i.test(_request.data.toString())) {\n\t            delete _request.headers['Content-Type'];\n\t        }\n\t\n\t        if (isPlainObject(_request.data)) {\n\t            _request.data = JSON.stringify(_request.data);\n\t        }\n\t\n\t        return _request;\n\t    },\n\t    response: function response(_response) {\n\t\n\t        try {\n\t            _response.data = JSON.parse(_response.data);\n\t        } catch (e) {}\n\t\n\t        return _response;\n\t    }\n\t};\n\t\n\tfunction jsonpClient (request) {\n\t    return new Promise$1(function (resolve) {\n\t\n\t        var callback = '_jsonp' + Math.random().toString(36).substr(2),\n\t            response = { request: request, data: null },\n\t            handler,\n\t            script;\n\t\n\t        request.params[request.jsonp] = callback;\n\t        request.cancel = function () {\n\t            handler({ type: 'cancel' });\n\t        };\n\t\n\t        script = document.createElement('script');\n\t        script.src = Url(request);\n\t        script.type = 'text/javascript';\n\t        script.async = true;\n\t\n\t        window[callback] = function (data) {\n\t            response.data = data;\n\t        };\n\t\n\t        handler = function handler(event) {\n\t\n\t            if (event.type === 'load' && response.data !== null) {\n\t                response.status = 200;\n\t            } else if (event.type === 'error') {\n\t                response.status = 404;\n\t            } else {\n\t                response.status = 0;\n\t            }\n\t\n\t            resolve(response);\n\t\n\t            delete window[callback];\n\t            document.body.removeChild(script);\n\t        };\n\t\n\t        script.onload = handler;\n\t        script.onerror = handler;\n\t\n\t        document.body.appendChild(script);\n\t    });\n\t}\n\t\n\tvar exports$3 = {\n\t    request: function request(_request) {\n\t\n\t        if (_request.method == 'JSONP') {\n\t            _request.client = jsonpClient;\n\t        }\n\t\n\t        return _request;\n\t    }\n\t};\n\t\n\tvar exports$4 = {\n\t    request: function request(_request) {\n\t\n\t        if (isFunction(_request.beforeSend)) {\n\t            _request.beforeSend.call(this, _request);\n\t        }\n\t\n\t        return _request;\n\t    }\n\t};\n\t\n\t/**\n\t * HTTP method override Interceptor.\n\t */\n\t\n\tvar exports$5 = {\n\t    request: function request(_request) {\n\t\n\t        if (_request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(_request.method)) {\n\t            _request.headers['X-HTTP-Method-Override'] = _request.method;\n\t            _request.method = 'POST';\n\t        }\n\t\n\t        return _request;\n\t    }\n\t};\n\t\n\tvar exports$6 = {\n\t    request: function request(_request) {\n\t\n\t        _request.method = _request.method.toUpperCase();\n\t        _request.headers = extend({}, Http.headers.common, !_request.crossOrigin ? Http.headers.custom : {}, Http.headers[_request.method.toLowerCase()], _request.headers);\n\t\n\t        if (isPlainObject(_request.data) && /^(GET|JSONP)$/i.test(_request.method)) {\n\t            extend(_request.params, _request.data);\n\t            delete _request.data;\n\t        }\n\t\n\t        return _request;\n\t    }\n\t};\n\t\n\t/**\n\t * Timeout Interceptor.\n\t */\n\t\n\tvar exports$7 = function exports() {\n\t\n\t    var timeout;\n\t\n\t    return {\n\t        request: function request(_request) {\n\t\n\t            if (_request.timeout) {\n\t                timeout = setTimeout(function () {\n\t                    _request.cancel();\n\t                }, _request.timeout);\n\t            }\n\t\n\t            return _request;\n\t        },\n\t        response: function response(_response) {\n\t\n\t            clearTimeout(timeout);\n\t\n\t            return _response;\n\t        }\n\t    };\n\t};\n\t\n\tfunction interceptor (handler, vm) {\n\t\n\t    return function (client) {\n\t\n\t        if (isFunction(handler)) {\n\t            handler = handler.call(vm, Promise$1);\n\t        }\n\t\n\t        return function (request) {\n\t\n\t            if (isFunction(handler.request)) {\n\t                request = handler.request.call(vm, request);\n\t            }\n\t\n\t            return when(request, function (request) {\n\t                return when(client(request), function (response) {\n\t\n\t                    if (isFunction(handler.response)) {\n\t                        response = handler.response.call(vm, response);\n\t                    }\n\t\n\t                    return response;\n\t                });\n\t            });\n\t        };\n\t    };\n\t}\n\t\n\tfunction when(value, fulfilled, rejected) {\n\t\n\t    var promise = Promise$1.resolve(value);\n\t\n\t    if (arguments.length < 2) {\n\t        return promise;\n\t    }\n\t\n\t    return promise.then(fulfilled, rejected);\n\t}\n\t\n\tfunction xhrClient (request) {\n\t    return new Promise$1(function (resolve) {\n\t\n\t        var xhr = new XMLHttpRequest(),\n\t            response = { request: request },\n\t            handler;\n\t\n\t        request.cancel = function () {\n\t            xhr.abort();\n\t        };\n\t\n\t        xhr.open(request.method, Url(request), true);\n\t\n\t        handler = function handler(event) {\n\t\n\t            response.data = 'response' in xhr ? xhr.response : xhr.responseText;\n\t            response.status = xhr.status === 1223 ? 204 : xhr.status; // IE9 status bug\n\t            response.statusText = trim(xhr.statusText || '');\n\t            response.headers = xhr.getAllResponseHeaders();\n\t\n\t            resolve(response);\n\t        };\n\t\n\t        xhr.timeout = 0;\n\t        xhr.onload = handler;\n\t        xhr.onabort = handler;\n\t        xhr.onerror = handler;\n\t        xhr.ontimeout = function () {};\n\t        xhr.onprogress = function () {};\n\t\n\t        if (isPlainObject(request.xhr)) {\n\t            extend(xhr, request.xhr);\n\t        }\n\t\n\t        if (isPlainObject(request.upload)) {\n\t            extend(xhr.upload, request.upload);\n\t        }\n\t\n\t        each(request.headers || {}, function (value, header) {\n\t            xhr.setRequestHeader(header, value);\n\t        });\n\t\n\t        xhr.send(request.data);\n\t    });\n\t}\n\t\n\tfunction Client (request) {\n\t\n\t    var response = (request.client || xhrClient)(request);\n\t\n\t    return Promise$1.resolve(response).then(function (response) {\n\t\n\t        if (response.headers) {\n\t\n\t            var headers = parseHeaders(response.headers);\n\t\n\t            response.headers = function (name) {\n\t\n\t                if (name) {\n\t                    return headers[toLower(name)];\n\t                }\n\t\n\t                return headers;\n\t            };\n\t        }\n\t\n\t        response.ok = response.status >= 200 && response.status < 300;\n\t\n\t        return response;\n\t    });\n\t}\n\t\n\tfunction parseHeaders(str) {\n\t\n\t    var headers = {},\n\t        value,\n\t        name,\n\t        i;\n\t\n\t    if (isString(str)) {\n\t        each(str.split('\\n'), function (row) {\n\t\n\t            i = row.indexOf(':');\n\t            name = trim(toLower(row.slice(0, i)));\n\t            value = trim(row.slice(i + 1));\n\t\n\t            if (headers[name]) {\n\t\n\t                if (isArray(headers[name])) {\n\t                    headers[name].push(value);\n\t                } else {\n\t                    headers[name] = [headers[name], value];\n\t                }\n\t            } else {\n\t\n\t                headers[name] = value;\n\t            }\n\t        });\n\t    }\n\t\n\t    return headers;\n\t}\n\t\n\t/**\n\t * Service for sending network requests.\n\t */\n\t\n\tvar jsonType = { 'Content-Type': 'application/json' };\n\t\n\tfunction Http(url, options) {\n\t\n\t    var self = this || {},\n\t        client = Client,\n\t        request,\n\t        promise;\n\t\n\t    Http.interceptors.forEach(function (handler) {\n\t        client = interceptor(handler, self.$vm)(client);\n\t    });\n\t\n\t    options = isObject(url) ? url : extend({ url: url }, options);\n\t    request = merge({}, Http.options, self.$options, options);\n\t    promise = client(request).bind(self.$vm).then(function (response) {\n\t\n\t        return response.ok ? response : Promise$1.reject(response);\n\t    }, function (response) {\n\t\n\t        if (response instanceof Error) {\n\t            error(response);\n\t        }\n\t\n\t        return Promise$1.reject(response);\n\t    });\n\t\n\t    if (request.success) {\n\t        promise.success(request.success);\n\t    }\n\t\n\t    if (request.error) {\n\t        promise.error(request.error);\n\t    }\n\t\n\t    return promise;\n\t}\n\t\n\tHttp.options = {\n\t    method: 'get',\n\t    data: '',\n\t    params: {},\n\t    headers: {},\n\t    xhr: null,\n\t    upload: null,\n\t    jsonp: 'callback',\n\t    beforeSend: null,\n\t    crossOrigin: null,\n\t    emulateHTTP: false,\n\t    emulateJSON: false,\n\t    timeout: 0\n\t};\n\t\n\tHttp.headers = {\n\t    put: jsonType,\n\t    post: jsonType,\n\t    patch: jsonType,\n\t    delete: jsonType,\n\t    common: { 'Accept': 'application/json, text/plain, */*' },\n\t    custom: { 'X-Requested-With': 'XMLHttpRequest' }\n\t};\n\t\n\tHttp.interceptors = [exports$4, exports$7, exports$3, exports$5, exports$2, exports$6, exports$1];\n\t\n\t['get', 'put', 'post', 'patch', 'delete', 'jsonp'].forEach(function (method) {\n\t\n\t    Http[method] = function (url, data, success, options) {\n\t\n\t        if (isFunction(data)) {\n\t            options = success;\n\t            success = data;\n\t            data = undefined;\n\t        }\n\t\n\t        if (isObject(success)) {\n\t            options = success;\n\t            success = undefined;\n\t        }\n\t\n\t        return this(url, extend({ method: method, data: data, success: success }, options));\n\t    };\n\t});\n\t\n\tfunction Resource(url, params, actions, options) {\n\t\n\t    var self = this || {},\n\t        resource = {};\n\t\n\t    actions = extend({}, Resource.actions, actions);\n\t\n\t    each(actions, function (action, name) {\n\t\n\t        action = merge({ url: url, params: params || {} }, options, action);\n\t\n\t        resource[name] = function () {\n\t            return (self.$http || Http)(opts(action, arguments));\n\t        };\n\t    });\n\t\n\t    return resource;\n\t}\n\t\n\tfunction opts(action, args) {\n\t\n\t    var options = extend({}, action),\n\t        params = {},\n\t        data,\n\t        success,\n\t        error;\n\t\n\t    switch (args.length) {\n\t\n\t        case 4:\n\t\n\t            error = args[3];\n\t            success = args[2];\n\t\n\t        case 3:\n\t        case 2:\n\t\n\t            if (isFunction(args[1])) {\n\t\n\t                if (isFunction(args[0])) {\n\t\n\t                    success = args[0];\n\t                    error = args[1];\n\t\n\t                    break;\n\t                }\n\t\n\t                success = args[1];\n\t                error = args[2];\n\t            } else {\n\t\n\t                params = args[0];\n\t                data = args[1];\n\t                success = args[2];\n\t\n\t                break;\n\t            }\n\t\n\t        case 1:\n\t\n\t            if (isFunction(args[0])) {\n\t                success = args[0];\n\t            } else if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n\t                data = args[0];\n\t            } else {\n\t                params = args[0];\n\t            }\n\t\n\t            break;\n\t\n\t        case 0:\n\t\n\t            break;\n\t\n\t        default:\n\t\n\t            throw 'Expected up to 4 arguments [params, data, success, error], got ' + args.length + ' arguments';\n\t    }\n\t\n\t    options.data = data;\n\t    options.params = extend({}, options.params, params);\n\t\n\t    if (success) {\n\t        options.success = success;\n\t    }\n\t\n\t    if (error) {\n\t        options.error = error;\n\t    }\n\t\n\t    return options;\n\t}\n\t\n\tResource.actions = {\n\t\n\t    get: { method: 'GET' },\n\t    save: { method: 'POST' },\n\t    query: { method: 'GET' },\n\t    update: { method: 'PUT' },\n\t    remove: { method: 'DELETE' },\n\t    delete: { method: 'DELETE' }\n\t\n\t};\n\t\n\tfunction plugin(Vue) {\n\t\n\t    if (plugin.installed) {\n\t        return;\n\t    }\n\t\n\t    Util(Vue);\n\t\n\t    Vue.url = Url;\n\t    Vue.http = Http;\n\t    Vue.resource = Resource;\n\t    Vue.Promise = Promise$1;\n\t\n\t    Object.defineProperties(Vue.prototype, {\n\t\n\t        $url: {\n\t            get: function get() {\n\t                return options(Vue.url, this, this.$options.url);\n\t            }\n\t        },\n\t\n\t        $http: {\n\t            get: function get() {\n\t                return options(Vue.http, this, this.$options.http);\n\t            }\n\t        },\n\t\n\t        $resource: {\n\t            get: function get() {\n\t                return Vue.resource.bind(this);\n\t            }\n\t        },\n\t\n\t        $promise: {\n\t            get: function get() {\n\t                var _this = this;\n\t\n\t                return function (executor) {\n\t                    return new Vue.Promise(executor, _this);\n\t                };\n\t            }\n\t        }\n\t\n\t    });\n\t}\n\t\n\tif (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(plugin);\n\t}\n\t\n\tmodule.exports = plugin;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * Vuex v0.6.3\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  (global.Vuex = factory());\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t  babelHelpers.typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n\t    return typeof obj;\n\t  } : function (obj) {\n\t    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n\t  };\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t\n\t  babelHelpers.createClass = function () {\n\t    function defineProperties(target, props) {\n\t      for (var i = 0; i < props.length; i++) {\n\t        var descriptor = props[i];\n\t        descriptor.enumerable = descriptor.enumerable || false;\n\t        descriptor.configurable = true;\n\t        if (\"value\" in descriptor) descriptor.writable = true;\n\t        Object.defineProperty(target, descriptor.key, descriptor);\n\t      }\n\t    }\n\t\n\t    return function (Constructor, protoProps, staticProps) {\n\t      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n\t      if (staticProps) defineProperties(Constructor, staticProps);\n\t      return Constructor;\n\t    };\n\t  }();\n\t\n\t  babelHelpers.toConsumableArray = function (arr) {\n\t    if (Array.isArray(arr)) {\n\t      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\t\n\t      return arr2;\n\t    } else {\n\t      return Array.from(arr);\n\t    }\n\t  };\n\t\n\t  babelHelpers;\n\t\n\t  /**\n\t   * Merge an array of objects into one.\n\t   *\n\t   * @param {Array<Object>} arr\n\t   * @return {Object}\n\t   */\n\t\n\t  function mergeObjects(arr) {\n\t    return arr.reduce(function (prev, obj) {\n\t      Object.keys(obj).forEach(function (key) {\n\t        var existing = prev[key];\n\t        if (existing) {\n\t          // allow multiple mutation objects to contain duplicate\n\t          // handlers for the same mutation type\n\t          if (Array.isArray(existing)) {\n\t            existing.push(obj[key]);\n\t          } else {\n\t            prev[key] = [prev[key], obj[key]];\n\t          }\n\t        } else {\n\t          prev[key] = obj[key];\n\t        }\n\t      });\n\t      return prev;\n\t    }, {});\n\t  }\n\t\n\t  /**\n\t   * Deep clone an object. Faster than JSON.parse(JSON.stringify()).\n\t   *\n\t   * @param {*} obj\n\t   * @return {*}\n\t   */\n\t\n\t  function deepClone(obj) {\n\t    if (Array.isArray(obj)) {\n\t      return obj.map(deepClone);\n\t    } else if (obj && (typeof obj === 'undefined' ? 'undefined' : babelHelpers.typeof(obj)) === 'object') {\n\t      var cloned = {};\n\t      var keys = Object.keys(obj);\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        var key = keys[i];\n\t        cloned[key] = deepClone(obj[key]);\n\t      }\n\t      return cloned;\n\t    } else {\n\t      return obj;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Hacks to get access to Vue internals.\n\t   * Maybe we should expose these...\n\t   */\n\t\n\t  var Watcher = void 0;\n\t  function getWatcher(vm) {\n\t    if (!Watcher) {\n\t      var unwatch = vm.$watch('__vuex__', function (a) {\n\t        return a;\n\t      });\n\t      Watcher = vm._watchers[0].constructor;\n\t      unwatch();\n\t    }\n\t    return Watcher;\n\t  }\n\t\n\t  var Dep = void 0;\n\t  function getDep(vm) {\n\t    if (!Dep) {\n\t      Dep = vm._data.__ob__.dep.constructor;\n\t    }\n\t    return Dep;\n\t  }\n\t\n\t  var hook = typeof window !== 'undefined' && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t  var devtoolMiddleware = {\n\t    onInit: function onInit(state, store) {\n\t      if (!hook) return;\n\t      hook.emit('vuex:init', store);\n\t      hook.on('vuex:travel-to-state', function (targetState) {\n\t        var currentState = store._vm._data;\n\t        store._dispatching = true;\n\t        Object.keys(targetState).forEach(function (key) {\n\t          currentState[key] = targetState[key];\n\t        });\n\t        store._dispatching = false;\n\t      });\n\t    },\n\t    onMutation: function onMutation(mutation, state) {\n\t      if (!hook) return;\n\t      hook.emit('vuex:mutation', mutation, state);\n\t    }\n\t  };\n\t\n\t  function override (Vue) {\n\t    // override init and inject vuex init procedure\n\t    var _init = Vue.prototype._init;\n\t    Vue.prototype._init = function () {\n\t      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      options.init = options.init ? [vuexInit].concat(options.init) : vuexInit;\n\t      _init.call(this, options);\n\t    };\n\t\n\t    /**\n\t     * Vuex init hook, injected into each instances init hooks list.\n\t     */\n\t\n\t    function vuexInit() {\n\t      var options = this.$options;\n\t      var store = options.store;\n\t      var vuex = options.vuex;\n\t      // store injection\n\t\n\t      if (store) {\n\t        this.$store = store;\n\t      } else if (options.parent && options.parent.$store) {\n\t        this.$store = options.parent.$store;\n\t      }\n\t      // vuex option handling\n\t      if (vuex) {\n\t        if (!this.$store) {\n\t          console.warn('[vuex] store not injected. make sure to ' + 'provide the store option in your root component.');\n\t        }\n\t        var state = vuex.state;\n\t        var getters = vuex.getters;\n\t        var actions = vuex.actions;\n\t        // handle deprecated state option\n\t\n\t        if (state && !getters) {\n\t          console.warn('[vuex] vuex.state option will been deprecated in 1.0. ' + 'Use vuex.getters instead.');\n\t          getters = state;\n\t        }\n\t        // getters\n\t        if (getters) {\n\t          options.computed = options.computed || {};\n\t          for (var key in getters) {\n\t            defineVuexGetter(this, key, getters[key]);\n\t          }\n\t        }\n\t        // actions\n\t        if (actions) {\n\t          options.methods = options.methods || {};\n\t          for (var _key in actions) {\n\t            options.methods[_key] = makeBoundAction(this.$store, actions[_key], _key);\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Setter for all getter properties.\n\t     */\n\t\n\t    function setter() {\n\t      throw new Error('vuex getter properties are read-only.');\n\t    }\n\t\n\t    /**\n\t     * Define a Vuex getter on an instance.\n\t     *\n\t     * @param {Vue} vm\n\t     * @param {String} key\n\t     * @param {Function} getter\n\t     */\n\t\n\t    function defineVuexGetter(vm, key, getter) {\n\t      if (typeof getter !== 'function') {\n\t        console.warn('[vuex] Getter bound to key \\'vuex.getters.' + key + '\\' is not a function.');\n\t      } else {\n\t        Object.defineProperty(vm, key, {\n\t          enumerable: true,\n\t          configurable: true,\n\t          get: makeComputedGetter(vm.$store, getter),\n\t          set: setter\n\t        });\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Make a computed getter, using the same caching mechanism of computed\n\t     * properties. In addition, it is cached on the raw getter function using\n\t     * the store's unique cache id. This makes the same getter shared\n\t     * across all components use the same underlying watcher, and makes\n\t     * the getter evaluated only once during every flush.\n\t     *\n\t     * @param {Store} store\n\t     * @param {Function} getter\n\t     */\n\t\n\t    function makeComputedGetter(store, getter) {\n\t      var id = store._getterCacheId;\n\t\n\t      // cached\n\t      if (getter[id]) {\n\t        return getter[id];\n\t      }\n\t      var vm = store._vm;\n\t      var Watcher = getWatcher(vm);\n\t      var Dep = getDep(vm);\n\t      var watcher = new Watcher(vm, function (state) {\n\t        return getter(state);\n\t      }, null, { lazy: true });\n\t      var computedGetter = function computedGetter() {\n\t        if (watcher.dirty) {\n\t          watcher.evaluate();\n\t        }\n\t        if (Dep.target) {\n\t          watcher.depend();\n\t        }\n\t        return watcher.value;\n\t      };\n\t      getter[id] = computedGetter;\n\t      return computedGetter;\n\t    }\n\t\n\t    /**\n\t     * Make a bound-to-store version of a raw action function.\n\t     *\n\t     * @param {Store} store\n\t     * @param {Function} action\n\t     * @param {String} key\n\t     */\n\t\n\t    function makeBoundAction(store, action, key) {\n\t      if (typeof action !== 'function') {\n\t        console.warn('[vuex] Action bound to key \\'vuex.actions.' + key + '\\' is not a function.');\n\t      }\n\t      return function vuexBoundAction() {\n\t        for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n\t          args[_key2] = arguments[_key2];\n\t        }\n\t\n\t        return action.call.apply(action, [this, store].concat(args));\n\t      };\n\t    }\n\t\n\t    // option merging\n\t    var merge = Vue.config.optionMergeStrategies.computed;\n\t    Vue.config.optionMergeStrategies.vuex = function (toVal, fromVal) {\n\t      if (!toVal) return fromVal;\n\t      if (!fromVal) return toVal;\n\t      return {\n\t        getters: merge(toVal.getters, fromVal.getters),\n\t        state: merge(toVal.state, fromVal.state),\n\t        actions: merge(toVal.actions, fromVal.actions)\n\t      };\n\t    };\n\t  }\n\t\n\t  var Vue = void 0;\n\t  var uid = 0;\n\t\n\t  var Store = function () {\n\t\n\t    /**\n\t     * @param {Object} options\n\t     *        - {Object} state\n\t     *        - {Object} actions\n\t     *        - {Object} mutations\n\t     *        - {Array} middlewares\n\t     *        - {Boolean} strict\n\t     */\n\t\n\t    function Store() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$state = _ref.state;\n\t      var state = _ref$state === undefined ? {} : _ref$state;\n\t      var _ref$mutations = _ref.mutations;\n\t      var mutations = _ref$mutations === undefined ? {} : _ref$mutations;\n\t      var _ref$modules = _ref.modules;\n\t      var modules = _ref$modules === undefined ? {} : _ref$modules;\n\t      var _ref$middlewares = _ref.middlewares;\n\t      var middlewares = _ref$middlewares === undefined ? [] : _ref$middlewares;\n\t      var _ref$strict = _ref.strict;\n\t      var strict = _ref$strict === undefined ? false : _ref$strict;\n\t      babelHelpers.classCallCheck(this, Store);\n\t\n\t      this._getterCacheId = 'vuex_store_' + uid++;\n\t      this._dispatching = false;\n\t      this._rootMutations = this._mutations = mutations;\n\t      this._modules = modules;\n\t      // bind dispatch to self\n\t      var dispatch = this.dispatch;\n\t      this.dispatch = function () {\n\t        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t          args[_key] = arguments[_key];\n\t        }\n\t\n\t        dispatch.apply(_this, args);\n\t      };\n\t      // use a Vue instance to store the state tree\n\t      // suppress warnings just in case the user has added\n\t      // some funky global mixins\n\t      if (!Vue) {\n\t        throw new Error('[vuex] must call Vue.use(Vuex) before creating a store instance.');\n\t      }\n\t      var silent = Vue.config.silent;\n\t      Vue.config.silent = true;\n\t      this._vm = new Vue({\n\t        data: state\n\t      });\n\t      Vue.config.silent = silent;\n\t      this._setupModuleState(state, modules);\n\t      this._setupModuleMutations(modules);\n\t      this._setupMiddlewares(middlewares, state);\n\t      // add extra warnings in strict mode\n\t      if (strict) {\n\t        this._setupMutationCheck();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Getter for the entire state tree.\n\t     * Read only.\n\t     *\n\t     * @return {Object}\n\t     */\n\t\n\t    babelHelpers.createClass(Store, [{\n\t      key: 'dispatch',\n\t\n\t\n\t      /**\n\t       * Dispatch an action.\n\t       *\n\t       * @param {String} type\n\t       */\n\t\n\t      value: function dispatch(type) {\n\t        for (var _len2 = arguments.length, payload = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n\t          payload[_key2 - 1] = arguments[_key2];\n\t        }\n\t\n\t        var silent = false;\n\t        // compatibility for object actions, e.g. FSA\n\t        if ((typeof type === 'undefined' ? 'undefined' : babelHelpers.typeof(type)) === 'object' && type.type && arguments.length === 1) {\n\t          payload = [type.payload];\n\t          if (type.silent) silent = true;\n\t          type = type.type;\n\t        }\n\t        var mutation = this._mutations[type];\n\t        var state = this.state;\n\t        if (mutation) {\n\t          this._dispatching = true;\n\t          // apply the mutation\n\t          if (Array.isArray(mutation)) {\n\t            mutation.forEach(function (m) {\n\t              return m.apply(undefined, [state].concat(babelHelpers.toConsumableArray(payload)));\n\t            });\n\t          } else {\n\t            mutation.apply(undefined, [state].concat(babelHelpers.toConsumableArray(payload)));\n\t          }\n\t          this._dispatching = false;\n\t          if (!silent) this._applyMiddlewares(type, payload);\n\t        } else {\n\t          console.warn('[vuex] Unknown mutation: ' + type);\n\t        }\n\t      }\n\t\n\t      /**\n\t       * Watch state changes on the store.\n\t       * Same API as Vue's $watch, except when watching a function,\n\t       * the function gets the state as the first argument.\n\t       *\n\t       * @param {String|Function} expOrFn\n\t       * @param {Function} cb\n\t       * @param {Object} [options]\n\t       */\n\t\n\t    }, {\n\t      key: 'watch',\n\t      value: function watch(expOrFn, cb, options) {\n\t        var _this2 = this;\n\t\n\t        return this._vm.$watch(function () {\n\t          return typeof expOrFn === 'function' ? expOrFn(_this2.state) : _this2._vm.$get(expOrFn);\n\t        }, cb, options);\n\t      }\n\t\n\t      /**\n\t       * Hot update mutations & modules.\n\t       *\n\t       * @param {Object} options\n\t       *        - {Object} [mutations]\n\t       *        - {Object} [modules]\n\t       */\n\t\n\t    }, {\n\t      key: 'hotUpdate',\n\t      value: function hotUpdate() {\n\t        var _ref2 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t        var mutations = _ref2.mutations;\n\t        var modules = _ref2.modules;\n\t\n\t        this._rootMutations = this._mutations = mutations || this._rootMutations;\n\t        this._setupModuleMutations(modules || this._modules);\n\t      }\n\t\n\t      /**\n\t       * Attach sub state tree of each module to the root tree.\n\t       *\n\t       * @param {Object} state\n\t       * @param {Object} modules\n\t       */\n\t\n\t    }, {\n\t      key: '_setupModuleState',\n\t      value: function _setupModuleState(state, modules) {\n\t        Object.keys(modules).forEach(function (key) {\n\t          Vue.set(state, key, modules[key].state || {});\n\t        });\n\t      }\n\t\n\t      /**\n\t       * Bind mutations for each module to its sub tree and\n\t       * merge them all into one final mutations map.\n\t       *\n\t       * @param {Object} updatedModules\n\t       */\n\t\n\t    }, {\n\t      key: '_setupModuleMutations',\n\t      value: function _setupModuleMutations(updatedModules) {\n\t        var modules = this._modules;\n\t        var allMutations = [this._rootMutations];\n\t        Object.keys(updatedModules).forEach(function (key) {\n\t          modules[key] = updatedModules[key];\n\t        });\n\t        Object.keys(modules).forEach(function (key) {\n\t          var module = modules[key];\n\t          if (!module || !module.mutations) return;\n\t          // bind mutations to sub state tree\n\t          var mutations = {};\n\t          Object.keys(module.mutations).forEach(function (name) {\n\t            var original = module.mutations[name];\n\t            mutations[name] = function (state) {\n\t              for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n\t                args[_key3 - 1] = arguments[_key3];\n\t              }\n\t\n\t              original.apply(undefined, [state[key]].concat(args));\n\t            };\n\t          });\n\t          allMutations.push(mutations);\n\t        });\n\t        this._mutations = mergeObjects(allMutations);\n\t      }\n\t\n\t      /**\n\t       * Setup mutation check: if the vuex instance's state is mutated\n\t       * outside of a mutation handler, we throw en error. This effectively\n\t       * enforces all mutations to the state to be trackable and hot-reloadble.\n\t       * However, this comes at a run time cost since we are doing a deep\n\t       * watch on the entire state tree, so it is only enalbed with the\n\t       * strict option is set to true.\n\t       */\n\t\n\t    }, {\n\t      key: '_setupMutationCheck',\n\t      value: function _setupMutationCheck() {\n\t        var _this3 = this;\n\t\n\t        var Watcher = getWatcher(this._vm);\n\t        /* eslint-disable no-new */\n\t        new Watcher(this._vm, '$data', function () {\n\t          if (!_this3._dispatching) {\n\t            throw new Error('[vuex] Do not mutate vuex store state outside mutation handlers.');\n\t          }\n\t        }, { deep: true, sync: true });\n\t        /* eslint-enable no-new */\n\t      }\n\t\n\t      /**\n\t       * Setup the middlewares. The devtools middleware is always\n\t       * included, since it does nothing if no devtool is detected.\n\t       *\n\t       * A middleware can demand the state it receives to be\n\t       * \"snapshots\", i.e. deep clones of the actual state tree.\n\t       *\n\t       * @param {Array} middlewares\n\t       * @param {Object} state\n\t       */\n\t\n\t    }, {\n\t      key: '_setupMiddlewares',\n\t      value: function _setupMiddlewares(middlewares, state) {\n\t        var _this4 = this;\n\t\n\t        this._middlewares = [devtoolMiddleware].concat(middlewares);\n\t        this._needSnapshots = middlewares.some(function (m) {\n\t          return m.snapshot;\n\t        });\n\t        if (this._needSnapshots) {\n\t          console.log('[vuex] One or more of your middlewares are taking state snapshots ' + 'for each mutation. Make sure to use them only during development.');\n\t        }\n\t        var initialSnapshot = this._prevSnapshot = this._needSnapshots ? deepClone(state) : null;\n\t        // call init hooks\n\t        this._middlewares.forEach(function (m) {\n\t          if (m.onInit) {\n\t            m.onInit(m.snapshot ? initialSnapshot : state, _this4);\n\t          }\n\t        });\n\t      }\n\t\n\t      /**\n\t       * Apply the middlewares on a given mutation.\n\t       *\n\t       * @param {String} type\n\t       * @param {Array} payload\n\t       */\n\t\n\t    }, {\n\t      key: '_applyMiddlewares',\n\t      value: function _applyMiddlewares(type, payload) {\n\t        var _this5 = this;\n\t\n\t        var state = this.state;\n\t        var prevSnapshot = this._prevSnapshot;\n\t        var snapshot = void 0,\n\t            clonedPayload = void 0;\n\t        if (this._needSnapshots) {\n\t          snapshot = this._prevSnapshot = deepClone(state);\n\t          clonedPayload = deepClone(payload);\n\t        }\n\t        this._middlewares.forEach(function (m) {\n\t          if (m.onMutation) {\n\t            if (m.snapshot) {\n\t              m.onMutation({ type: type, payload: clonedPayload }, snapshot, prevSnapshot, _this5);\n\t            } else {\n\t              m.onMutation({ type: type, payload: payload }, state, _this5);\n\t            }\n\t          }\n\t        });\n\t      }\n\t    }, {\n\t      key: 'state',\n\t      get: function get() {\n\t        return this._vm._data;\n\t      },\n\t      set: function set(v) {\n\t        throw new Error('[vuex] Vuex root state is read only.');\n\t      }\n\t    }]);\n\t    return Store;\n\t  }();\n\t\n\t  function install(_Vue) {\n\t    if (Vue) {\n\t      console.warn('[vuex] already installed. Vue.use(Vuex) should be called only once.');\n\t      return;\n\t    }\n\t    Vue = _Vue;\n\t    override(Vue);\n\t  }\n\t\n\t  // auto install in dist mode\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    install(window.Vue);\n\t  }\n\t\n\t  function createLogger() {\n\t    console.warn('[vuex] Vuex.createLogger has been deprecated.' + 'Use `import createLogger from \\'vuex/logger\\' instead.');\n\t  }\n\t\n\t  var index = {\n\t    Store: Store,\n\t    install: install,\n\t    createLogger: createLogger\n\t  };\n\t\n\t  return index;\n\t\n\t}));\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** /app.3503a391ca608548dbf7.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 5138dc34a451cfa56a5d\n **/","import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport VueResource from 'vue-resource'\n\nimport App from './App'\nimport Home from './components/Home'\nimport Dashboard from './components/Dashboard'\n\nVue.config.delimiters = ['[[', ']]']\nVue.config.debug = true\nVue.config.devtools = true\n\n// Apply VueResource, VueAsyncData and VueRouter to our Vue instance\nVue.use(VueResource)\nVue.use(VueRouter)\n\nconst router = new VueRouter()\n\n// Point routes to the components we'll use\nrouter.map({\n  '/': {\n    component: Home\n  },\n  '/dashboard': {\n    component: Dashboard\n  }\n})\n\n// Any invalid route will redirect to home\nrouter.redirect({\n  '*': '/'\n})\n\nrouter.afterEach(function (transition) {\n  console.log('Successfully navigated to: ' + transition.to.path)\n})\n\nrouter.start(App, '#app')\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","/*!\n * Vue.js v1.0.24\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar isWechat = UA && UA.indexOf('micromessenger') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !(isWechat && isIos)) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tisWechat: isWechat,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if (isA || isO) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.24';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 1\n ** module chunks = 0\n **/","import Vue from 'vue'\nimport Vuex from 'vuex'\n\n// Make vue aware of Vuex\nVue.use(Vuex)\n\n// Create an object to hold the initial state when\n// the app starts up\nconst state = {\n  picId: 0\n}\n\n// Create an object storing various mutations. We will write the mutation\nconst mutations = {\n  SELECTED (state, id) {\n    state.picId = id\n  }\n}\n\n// Combine the initial state and the mutations to create a Vuex store.\n// This store can be linked to our app.\nexport default new Vuex.Store({\n  state,\n  mutations\n})\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/store.js\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-2612bd2f&scoped=true!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Dashboard.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Dashboard.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/template-rewriter.js?id=_v-2612bd2f!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Dashboard.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Dashboard.vue\n ** module id = 3\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Home.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Home.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Home.vue\n ** module id = 4\n ** module chunks = 0\n **/","/*!\n * vue-router v0.7.13\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.VueRouter = factory();\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  function Target(path, matcher, delegate) {\n    this.path = path;\n    this.matcher = matcher;\n    this.delegate = delegate;\n  }\n\n  Target.prototype = {\n    to: function to(target, callback) {\n      var delegate = this.delegate;\n\n      if (delegate && delegate.willAddRoute) {\n        target = delegate.willAddRoute(this.matcher.target, target);\n      }\n\n      this.matcher.add(this.path, target);\n\n      if (callback) {\n        if (callback.length === 0) {\n          throw new Error(\"You must have an argument in the function passed to `to`\");\n        }\n        this.matcher.addChild(this.path, target, callback, this.delegate);\n      }\n      return this;\n    }\n  };\n\n  function Matcher(target) {\n    this.routes = {};\n    this.children = {};\n    this.target = target;\n  }\n\n  Matcher.prototype = {\n    add: function add(path, handler) {\n      this.routes[path] = handler;\n    },\n\n    addChild: function addChild(path, target, callback, delegate) {\n      var matcher = new Matcher(target);\n      this.children[path] = matcher;\n\n      var match = generateMatch(path, matcher, delegate);\n\n      if (delegate && delegate.contextEntered) {\n        delegate.contextEntered(target, match);\n      }\n\n      callback(match);\n    }\n  };\n\n  function generateMatch(startingPath, matcher, delegate) {\n    return function (path, nestedCallback) {\n      var fullPath = startingPath + path;\n\n      if (nestedCallback) {\n        nestedCallback(generateMatch(fullPath, matcher, delegate));\n      } else {\n        return new Target(startingPath + path, matcher, delegate);\n      }\n    };\n  }\n\n  function addRoute(routeArray, path, handler) {\n    var len = 0;\n    for (var i = 0, l = routeArray.length; i < l; i++) {\n      len += routeArray[i].path.length;\n    }\n\n    path = path.substr(len);\n    var route = { path: path, handler: handler };\n    routeArray.push(route);\n  }\n\n  function eachRoute(baseRoute, matcher, callback, binding) {\n    var routes = matcher.routes;\n\n    for (var path in routes) {\n      if (routes.hasOwnProperty(path)) {\n        var routeArray = baseRoute.slice();\n        addRoute(routeArray, path, routes[path]);\n\n        if (matcher.children[path]) {\n          eachRoute(routeArray, matcher.children[path], callback, binding);\n        } else {\n          callback.call(binding, routeArray);\n        }\n      }\n    }\n  }\n\n  function map (callback, addRouteCallback) {\n    var matcher = new Matcher();\n\n    callback(generateMatch(\"\", matcher, this.delegate));\n\n    eachRoute([], matcher, function (route) {\n      if (addRouteCallback) {\n        addRouteCallback(this, route);\n      } else {\n        this.add(route);\n      }\n    }, this);\n  }\n\n  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\n  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\n  var noWarning = false;\n  function warn(msg) {\n    if (!noWarning && typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  function tryDecode(uri, asComponent) {\n    try {\n      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n    } catch (e) {\n      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n    }\n  }\n\n  function isArray(test) {\n    return Object.prototype.toString.call(test) === \"[object Array]\";\n  }\n\n  // A Segment represents a segment in the original route description.\n  // Each Segment type provides an `eachChar` and `regex` method.\n  //\n  // The `eachChar` method invokes the callback with one or more character\n  // specifications. A character specification consumes one or more input\n  // characters.\n  //\n  // The `regex` method returns a regex fragment for the segment. If the\n  // segment is a dynamic of star segment, the regex fragment also includes\n  // a capture.\n  //\n  // A character specification contains:\n  //\n  // * `validChars`: a String with a list of all valid characters, or\n  // * `invalidChars`: a String with a list of all invalid characters\n  // * `repeat`: true if the character specification can repeat\n\n  function StaticSegment(string) {\n    this.string = string;\n  }\n  StaticSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      var string = this.string,\n          ch;\n\n      for (var i = 0, l = string.length; i < l; i++) {\n        ch = string.charAt(i);\n        callback({ validChars: ch });\n      }\n    },\n\n    regex: function regex() {\n      return this.string.replace(escapeRegex, '\\\\$1');\n    },\n\n    generate: function generate() {\n      return this.string;\n    }\n  };\n\n  function DynamicSegment(name) {\n    this.name = name;\n  }\n  DynamicSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"/\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"([^/]+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function StarSegment(name) {\n    this.name = name;\n  }\n  StarSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"(.+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function EpsilonSegment() {}\n  EpsilonSegment.prototype = {\n    eachChar: function eachChar() {},\n    regex: function regex() {\n      return \"\";\n    },\n    generate: function generate() {\n      return \"\";\n    }\n  };\n\n  function parse(route, names, specificity) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (route.charAt(0) === \"/\") {\n      route = route.substr(1);\n    }\n\n    var segments = route.split(\"/\"),\n        results = [];\n\n    // A routes has specificity determined by the order that its different segments\n    // appear in. This system mirrors how the magnitude of numbers written as strings\n    // works.\n    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n    // leading symbol, \"1\".\n    // The rule is that symbols to the left carry more weight than symbols to the right\n    // when a number is written out as a string. In the above strings, the leading digit\n    // represents how many 100's are in the number, and it carries more weight than the middle\n    // number which represents how many 10's are in the number.\n    // This system of number magnitude works well for route specificity, too. A route written as\n    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n    // `x`, irrespective of the other parts.\n    // Because of this similarity, we assign each type of segment a number value written as a\n    // string. We can find the specificity of compound routes by concatenating these strings\n    // together, from left to right. After we have looped through all of the segments,\n    // we convert the string to a number.\n    specificity.val = '';\n\n    for (var i = 0, l = segments.length; i < l; i++) {\n      var segment = segments[i],\n          match;\n\n      if (match = segment.match(/^:([^\\/]+)$/)) {\n        results.push(new DynamicSegment(match[1]));\n        names.push(match[1]);\n        specificity.val += '3';\n      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n        results.push(new StarSegment(match[1]));\n        specificity.val += '2';\n        names.push(match[1]);\n      } else if (segment === \"\") {\n        results.push(new EpsilonSegment());\n        specificity.val += '1';\n      } else {\n        results.push(new StaticSegment(segment));\n        specificity.val += '4';\n      }\n    }\n\n    specificity.val = +specificity.val;\n\n    return results;\n  }\n\n  // A State has a character specification and (`charSpec`) and a list of possible\n  // subsequent states (`nextStates`).\n  //\n  // If a State is an accepting state, it will also have several additional\n  // properties:\n  //\n  // * `regex`: A regular expression that is used to extract parameters from paths\n  //   that reached this accepting state.\n  // * `handlers`: Information on how to convert the list of captures into calls\n  //   to registered handlers with the specified parameters\n  // * `types`: How many static, dynamic or star segments in this route. Used to\n  //   decide which route to use if multiple registered routes match a path.\n  //\n  // Currently, State is implemented naively by looping over `nextStates` and\n  // comparing a character specification against a character. A more efficient\n  // implementation would use a hash of keys pointing at one or more next states.\n\n  function State(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  State.prototype = {\n    get: function get(charSpec) {\n      var nextStates = this.nextStates;\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        var child = nextStates[i];\n\n        var isEqual = child.charSpec.validChars === charSpec.validChars;\n        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\n        if (isEqual) {\n          return child;\n        }\n      }\n    },\n\n    put: function put(charSpec) {\n      var state;\n\n      // If the character specification already exists in a child of the current\n      // state, just return that state.\n      if (state = this.get(charSpec)) {\n        return state;\n      }\n\n      // Make a new state for the character spec\n      state = new State(charSpec);\n\n      // Insert the new state as a child of the current state\n      this.nextStates.push(state);\n\n      // If this character specification repeats, insert the new state as a child\n      // of itself. Note that this will not trigger an infinite loop because each\n      // transition during recognition consumes a character.\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n\n      // Return the new state\n      return state;\n    },\n\n    // Find a list of child states matching the next character\n    match: function match(ch) {\n      // DEBUG \"Processing `\" + ch + \"`:\"\n      var nextStates = this.nextStates,\n          child,\n          charSpec,\n          chars;\n\n      // DEBUG \"  \" + debugState(this)\n      var returned = [];\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        child = nextStates[i];\n\n        charSpec = child.charSpec;\n\n        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n          if (chars.indexOf(ch) !== -1) {\n            returned.push(child);\n          }\n        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n          if (chars.indexOf(ch) === -1) {\n            returned.push(child);\n          }\n        }\n      }\n\n      return returned;\n    }\n\n    /** IF DEBUG\n    , debug: function() {\n      var charSpec = this.charSpec,\n          debug = \"[\",\n          chars = charSpec.validChars || charSpec.invalidChars;\n       if (charSpec.invalidChars) { debug += \"^\"; }\n      debug += chars;\n      debug += \"]\";\n       if (charSpec.repeat) { debug += \"+\"; }\n       return debug;\n    }\n    END IF **/\n  };\n\n  /** IF DEBUG\n  function debug(log) {\n    console.log(log);\n  }\n\n  function debugState(state) {\n    return state.nextStates.map(function(n) {\n      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n    }).join(\", \")\n  }\n  END IF **/\n\n  // Sort the routes by specificity\n  function sortSolutions(states) {\n    return states.sort(function (a, b) {\n      return b.specificity.val - a.specificity.val;\n    });\n  }\n\n  function recognizeChar(states, ch) {\n    var nextStates = [];\n\n    for (var i = 0, l = states.length; i < l; i++) {\n      var state = states[i];\n\n      nextStates = nextStates.concat(state.match(ch));\n    }\n\n    return nextStates;\n  }\n\n  var oCreate = Object.create || function (proto) {\n    function F() {}\n    F.prototype = proto;\n    return new F();\n  };\n\n  function RecognizeResults(queryParams) {\n    this.queryParams = queryParams || {};\n  }\n  RecognizeResults.prototype = oCreate({\n    splice: Array.prototype.splice,\n    slice: Array.prototype.slice,\n    push: Array.prototype.push,\n    length: 0,\n    queryParams: null\n  });\n\n  function findHandler(state, path, queryParams) {\n    var handlers = state.handlers,\n        regex = state.regex;\n    var captures = path.match(regex),\n        currentCapture = 1;\n    var result = new RecognizeResults(queryParams);\n\n    for (var i = 0, l = handlers.length; i < l; i++) {\n      var handler = handlers[i],\n          names = handler.names,\n          params = {};\n\n      for (var j = 0, m = names.length; j < m; j++) {\n        params[names[j]] = captures[currentCapture++];\n      }\n\n      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n    }\n\n    return result;\n  }\n\n  function addSegment(currentState, segment) {\n    segment.eachChar(function (ch) {\n      var state;\n\n      currentState = currentState.put(ch);\n    });\n\n    return currentState;\n  }\n\n  function decodeQueryParamPart(part) {\n    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n    part = part.replace(/\\+/gm, '%20');\n    return tryDecode(part, true);\n  }\n\n  // The main interface\n\n  var RouteRecognizer = function RouteRecognizer() {\n    this.rootState = new State();\n    this.names = {};\n  };\n\n  RouteRecognizer.prototype = {\n    add: function add(routes, options) {\n      var currentState = this.rootState,\n          regex = \"^\",\n          specificity = {},\n          handlers = [],\n          allSegments = [],\n          name;\n\n      var isEmpty = true;\n\n      for (var i = 0, l = routes.length; i < l; i++) {\n        var route = routes[i],\n            names = [];\n\n        var segments = parse(route.path, names, specificity);\n\n        allSegments = allSegments.concat(segments);\n\n        for (var j = 0, m = segments.length; j < m; j++) {\n          var segment = segments[j];\n\n          if (segment instanceof EpsilonSegment) {\n            continue;\n          }\n\n          isEmpty = false;\n\n          // Add a \"/\" for the new segment\n          currentState = currentState.put({ validChars: \"/\" });\n          regex += \"/\";\n\n          // Add a representation of the segment to the NFA and regex\n          currentState = addSegment(currentState, segment);\n          regex += segment.regex();\n        }\n\n        var handler = { handler: route.handler, names: names };\n        handlers.push(handler);\n      }\n\n      if (isEmpty) {\n        currentState = currentState.put({ validChars: \"/\" });\n        regex += \"/\";\n      }\n\n      currentState.handlers = handlers;\n      currentState.regex = new RegExp(regex + \"$\");\n      currentState.specificity = specificity;\n\n      if (name = options && options.as) {\n        this.names[name] = {\n          segments: allSegments,\n          handlers: handlers\n        };\n      }\n    },\n\n    handlersFor: function handlersFor(name) {\n      var route = this.names[name],\n          result = [];\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      for (var i = 0, l = route.handlers.length; i < l; i++) {\n        result.push(route.handlers[i]);\n      }\n\n      return result;\n    },\n\n    hasRoute: function hasRoute(name) {\n      return !!this.names[name];\n    },\n\n    generate: function generate(name, params) {\n      var route = this.names[name],\n          output = \"\";\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      var segments = route.segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i];\n\n        if (segment instanceof EpsilonSegment) {\n          continue;\n        }\n\n        output += \"/\";\n        output += segment.generate(params);\n      }\n\n      if (output.charAt(0) !== '/') {\n        output = '/' + output;\n      }\n\n      if (params && params.queryParams) {\n        output += this.generateQueryString(params.queryParams);\n      }\n\n      return output;\n    },\n\n    generateQueryString: function generateQueryString(params) {\n      var pairs = [];\n      var keys = [];\n      for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n          keys.push(key);\n        }\n      }\n      keys.sort();\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        var value = params[key];\n        if (value == null) {\n          continue;\n        }\n        var pair = encodeURIComponent(key);\n        if (isArray(value)) {\n          for (var j = 0, l = value.length; j < l; j++) {\n            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n            pairs.push(arrayPair);\n          }\n        } else {\n          pair += \"=\" + encodeURIComponent(value);\n          pairs.push(pair);\n        }\n      }\n\n      if (pairs.length === 0) {\n        return '';\n      }\n\n      return \"?\" + pairs.join(\"&\");\n    },\n\n    parseQueryString: function parseQueryString(queryString) {\n      var pairs = queryString.split(\"&\"),\n          queryParams = {};\n      for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('='),\n            key = decodeQueryParamPart(pair[0]),\n            keyLength = key.length,\n            isArray = false,\n            value;\n        if (pair.length === 1) {\n          value = 'true';\n        } else {\n          //Handle arrays\n          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n            isArray = true;\n            key = key.slice(0, keyLength - 2);\n            if (!queryParams[key]) {\n              queryParams[key] = [];\n            }\n          }\n          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n        }\n        if (isArray) {\n          queryParams[key].push(value);\n        } else {\n          queryParams[key] = value;\n        }\n      }\n      return queryParams;\n    },\n\n    recognize: function recognize(path, silent) {\n      noWarning = silent;\n      var states = [this.rootState],\n          pathLen,\n          i,\n          l,\n          queryStart,\n          queryParams = {},\n          isSlashDropped = false;\n\n      queryStart = path.indexOf('?');\n      if (queryStart !== -1) {\n        var queryString = path.substr(queryStart + 1, path.length);\n        path = path.substr(0, queryStart);\n        if (queryString) {\n          queryParams = this.parseQueryString(queryString);\n        }\n      }\n\n      path = tryDecode(path);\n      if (!path) return;\n\n      // DEBUG GROUP path\n\n      if (path.charAt(0) !== \"/\") {\n        path = \"/\" + path;\n      }\n\n      pathLen = path.length;\n      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n        path = path.substr(0, pathLen - 1);\n        isSlashDropped = true;\n      }\n\n      for (i = 0, l = path.length; i < l; i++) {\n        states = recognizeChar(states, path.charAt(i));\n        if (!states.length) {\n          break;\n        }\n      }\n\n      // END DEBUG GROUP\n\n      var solutions = [];\n      for (i = 0, l = states.length; i < l; i++) {\n        if (states[i].handlers) {\n          solutions.push(states[i]);\n        }\n      }\n\n      states = sortSolutions(solutions);\n\n      var state = solutions[0];\n\n      if (state && state.handlers) {\n        // if a trailing slash was dropped and a star segment is the last segment\n        // specified, put the trailing slash back\n        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n          path = path + \"/\";\n        }\n        return findHandler(state, path, queryParams);\n      }\n    }\n  };\n\n  RouteRecognizer.prototype.map = map;\n\n  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\n  // export default for holding the Vue reference\n  var exports$1 = {};\n  /**\n   * Warn stuff.\n   *\n   * @param {String} msg\n   */\n\n  function warn$1(msg) {\n    /* istanbul ignore next */\n    if (typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  /**\n   * Resolve a relative path.\n   *\n   * @param {String} base\n   * @param {String} relative\n   * @param {Boolean} append\n   * @return {String}\n   */\n\n  function resolvePath(base, relative, append) {\n    var query = base.match(/(\\?.*)$/);\n    if (query) {\n      query = query[1];\n      base = base.slice(0, -query.length);\n    }\n    // a query!\n    if (relative.charAt(0) === '?') {\n      return base + relative;\n    }\n    var stack = base.split('/');\n    // remove trailing segment if:\n    // - not appending\n    // - appending to trailing slash (last segment is empty)\n    if (!append || !stack[stack.length - 1]) {\n      stack.pop();\n    }\n    // resolve relative path\n    var segments = relative.replace(/^\\//, '').split('/');\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      if (segment === '.') {\n        continue;\n      } else if (segment === '..') {\n        stack.pop();\n      } else {\n        stack.push(segment);\n      }\n    }\n    // ensure leading slash\n    if (stack[0] !== '') {\n      stack.unshift('');\n    }\n    return stack.join('/');\n  }\n\n  /**\n   * Forgiving check for a promise\n   *\n   * @param {Object} p\n   * @return {Boolean}\n   */\n\n  function isPromise(p) {\n    return p && typeof p.then === 'function';\n  }\n\n  /**\n   * Retrive a route config field from a component instance\n   * OR a component contructor.\n   *\n   * @param {Function|Vue} component\n   * @param {String} name\n   * @return {*}\n   */\n\n  function getRouteConfig(component, name) {\n    var options = component && (component.$options || component.options);\n    return options && options.route && options.route[name];\n  }\n\n  /**\n   * Resolve an async component factory. Have to do a dirty\n   * mock here because of Vue core's internal API depends on\n   * an ID check.\n   *\n   * @param {Object} handler\n   * @param {Function} cb\n   */\n\n  var resolver = undefined;\n\n  function resolveAsyncComponent(handler, cb) {\n    if (!resolver) {\n      resolver = {\n        resolve: exports$1.Vue.prototype._resolveComponent,\n        $options: {\n          components: {\n            _: handler.component\n          }\n        }\n      };\n    } else {\n      resolver.$options.components._ = handler.component;\n    }\n    resolver.resolve('_', function (Component) {\n      handler.component = Component;\n      cb(Component);\n    });\n  }\n\n  /**\n   * Map the dynamic segments in a path to params.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @param {Object} query\n   */\n\n  function mapParams(path, params, query) {\n    if (params === undefined) params = {};\n\n    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n      var val = params[key];\n      /* istanbul ignore if */\n      if (!val) {\n        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n      }\n      return val || '';\n    });\n    if (query) {\n      path += genQuery(query);\n    }\n    return path;\n  }\n\n  var hashRE = /#.*$/;\n\n  var HTML5History = (function () {\n    function HTML5History(_ref) {\n      var root = _ref.root;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HTML5History);\n\n      if (root && root !== '/') {\n        // make sure there's the starting slash\n        if (root.charAt(0) !== '/') {\n          root = '/' + root;\n        }\n        // remove trailing slash\n        this.root = root.replace(/\\/$/, '');\n        this.rootRE = new RegExp('^\\\\' + this.root);\n      } else {\n        this.root = null;\n      }\n      this.onChange = onChange;\n      // check base tag\n      var baseEl = document.querySelector('base');\n      this.base = baseEl && baseEl.getAttribute('href');\n    }\n\n    HTML5History.prototype.start = function start() {\n      var _this = this;\n\n      this.listener = function (e) {\n        var url = location.pathname + location.search;\n        if (_this.root) {\n          url = url.replace(_this.rootRE, '');\n        }\n        _this.onChange(url, e && e.state, location.hash);\n      };\n      window.addEventListener('popstate', this.listener);\n      this.listener();\n    };\n\n    HTML5History.prototype.stop = function stop() {\n      window.removeEventListener('popstate', this.listener);\n    };\n\n    HTML5History.prototype.go = function go(path, replace, append) {\n      var url = this.formatPath(path, append);\n      if (replace) {\n        history.replaceState({}, '', url);\n      } else {\n        // record scroll position by replacing current state\n        history.replaceState({\n          pos: {\n            x: window.pageXOffset,\n            y: window.pageYOffset\n          }\n        }, '', location.href);\n        // then push new state\n        history.pushState({}, '', url);\n      }\n      var hashMatch = path.match(hashRE);\n      var hash = hashMatch && hashMatch[0];\n      path = url\n      // strip hash so it doesn't mess up params\n      .replace(hashRE, '')\n      // remove root before matching\n      .replace(this.rootRE, '');\n      this.onChange(path, null, hash);\n    };\n\n    HTML5History.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/'\n      // absolute path\n      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n    };\n\n    return HTML5History;\n  })();\n\n  var HashHistory = (function () {\n    function HashHistory(_ref) {\n      var hashbang = _ref.hashbang;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HashHistory);\n\n      this.hashbang = hashbang;\n      this.onChange = onChange;\n    }\n\n    HashHistory.prototype.start = function start() {\n      var self = this;\n      this.listener = function () {\n        var path = location.hash;\n        var raw = path.replace(/^#!?/, '');\n        // always\n        if (raw.charAt(0) !== '/') {\n          raw = '/' + raw;\n        }\n        var formattedPath = self.formatPath(raw);\n        if (formattedPath !== path) {\n          location.replace(formattedPath);\n          return;\n        }\n        // determine query\n        // note it's possible to have queries in both the actual URL\n        // and the hash fragment itself.\n        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n        self.onChange(path.replace(/^#!?/, '') + query);\n      };\n      window.addEventListener('hashchange', this.listener);\n      this.listener();\n    };\n\n    HashHistory.prototype.stop = function stop() {\n      window.removeEventListener('hashchange', this.listener);\n    };\n\n    HashHistory.prototype.go = function go(path, replace, append) {\n      path = this.formatPath(path, append);\n      if (replace) {\n        location.replace(path);\n      } else {\n        location.hash = path;\n      }\n    };\n\n    HashHistory.prototype.formatPath = function formatPath(path, append) {\n      var isAbsoloute = path.charAt(0) === '/';\n      var prefix = '#' + (this.hashbang ? '!' : '');\n      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n    };\n\n    return HashHistory;\n  })();\n\n  var AbstractHistory = (function () {\n    function AbstractHistory(_ref) {\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, AbstractHistory);\n\n      this.onChange = onChange;\n      this.currentPath = '/';\n    }\n\n    AbstractHistory.prototype.start = function start() {\n      this.onChange('/');\n    };\n\n    AbstractHistory.prototype.stop = function stop() {\n      // noop\n    };\n\n    AbstractHistory.prototype.go = function go(path, replace, append) {\n      path = this.currentPath = this.formatPath(path, append);\n      this.onChange(path);\n    };\n\n    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n    };\n\n    return AbstractHistory;\n  })();\n\n  /**\n   * Determine the reusability of an existing router view.\n   *\n   * @param {Directive} view\n   * @param {Object} handler\n   * @param {Transition} transition\n   */\n\n  function canReuse(view, handler, transition) {\n    var component = view.childVM;\n    if (!component || !handler) {\n      return false;\n    }\n    // important: check view.Component here because it may\n    // have been changed in activate hook\n    if (view.Component !== handler.component) {\n      return false;\n    }\n    var canReuseFn = getRouteConfig(component, 'canReuse');\n    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n      to: transition.to,\n      from: transition.from\n    }) : true; // defaults to true\n  }\n\n  /**\n   * Check if a component can deactivate.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canDeactivate(view, transition, next) {\n    var fromComponent = view.childVM;\n    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHook(hook, fromComponent, next, {\n        expectBoolean: true\n      });\n    }\n  }\n\n  /**\n   * Check if a component can activate.\n   *\n   * @param {Object} handler\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canActivate(handler, transition, next) {\n    resolveAsyncComponent(handler, function (Component) {\n      // have to check due to async-ness\n      if (transition.aborted) {\n        return;\n      }\n      // determine if this component can be activated\n      var hook = getRouteConfig(Component, 'canActivate');\n      if (!hook) {\n        next();\n      } else {\n        transition.callHook(hook, null, next, {\n          expectBoolean: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Call deactivate hooks for existing router-views.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function deactivate(view, transition, next) {\n    var component = view.childVM;\n    var hook = getRouteConfig(component, 'deactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHooks(hook, component, next);\n    }\n  }\n\n  /**\n   * Activate / switch component for a router-view.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Number} depth\n   * @param {Function} [cb]\n   */\n\n  function activate(view, transition, depth, cb, reuse) {\n    var handler = transition.activateQueue[depth];\n    if (!handler) {\n      saveChildView(view);\n      if (view._bound) {\n        view.setComponent(null);\n      }\n      cb && cb();\n      return;\n    }\n\n    var Component = view.Component = handler.component;\n    var activateHook = getRouteConfig(Component, 'activate');\n    var dataHook = getRouteConfig(Component, 'data');\n    var waitForData = getRouteConfig(Component, 'waitForData');\n\n    view.depth = depth;\n    view.activated = false;\n\n    var component = undefined;\n    var loading = !!(dataHook && !waitForData);\n\n    // \"reuse\" is a flag passed down when the parent view is\n    // either reused via keep-alive or as a child of a kept-alive view.\n    // of course we can only reuse if the current kept-alive instance\n    // is of the correct type.\n    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\n    if (reuse) {\n      // just reuse\n      component = view.childVM;\n      component.$loadingRouteData = loading;\n    } else {\n      saveChildView(view);\n\n      // unbuild current component. this step also destroys\n      // and removes all nested child views.\n      view.unbuild(true);\n\n      // build the new component. this will also create the\n      // direct child view of the current one. it will register\n      // itself as view.childView.\n      component = view.build({\n        _meta: {\n          $loadingRouteData: loading\n        },\n        created: function created() {\n          this._routerView = view;\n        }\n      });\n\n      // handle keep-alive.\n      // when a kept-alive child vm is restored, we need to\n      // add its cached child views into the router's view list,\n      // and also properly update current view's child view.\n      if (view.keepAlive) {\n        component.$loadingRouteData = loading;\n        var cachedChildView = component._keepAliveRouterView;\n        if (cachedChildView) {\n          view.childView = cachedChildView;\n          component._keepAliveRouterView = null;\n        }\n      }\n    }\n\n    // cleanup the component in case the transition is aborted\n    // before the component is ever inserted.\n    var cleanup = function cleanup() {\n      component.$destroy();\n    };\n\n    // actually insert the component and trigger transition\n    var insert = function insert() {\n      if (reuse) {\n        cb && cb();\n        return;\n      }\n      var router = transition.router;\n      if (router._rendered || router._transitionOnLoad) {\n        view.transition(component);\n      } else {\n        // no transition on first render, manual transition\n        /* istanbul ignore if */\n        if (view.setCurrent) {\n          // 0.12 compat\n          view.setCurrent(component);\n        } else {\n          // 1.0\n          view.childVM = component;\n        }\n        component.$before(view.anchor, null, false);\n      }\n      cb && cb();\n    };\n\n    var afterData = function afterData() {\n      // activate the child view\n      if (view.childView) {\n        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n      }\n      insert();\n    };\n\n    // called after activation hook is resolved\n    var afterActivate = function afterActivate() {\n      view.activated = true;\n      if (dataHook && waitForData) {\n        // wait until data loaded to insert\n        loadData(component, transition, dataHook, afterData, cleanup);\n      } else {\n        // load data and insert at the same time\n        if (dataHook) {\n          loadData(component, transition, dataHook);\n        }\n        afterData();\n      }\n    };\n\n    if (activateHook) {\n      transition.callHooks(activateHook, component, afterActivate, {\n        cleanup: cleanup,\n        postActivate: true\n      });\n    } else {\n      afterActivate();\n    }\n  }\n\n  /**\n   * Reuse a view, just reload data if necessary.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   */\n\n  function reuse(view, transition) {\n    var component = view.childVM;\n    var dataHook = getRouteConfig(component, 'data');\n    if (dataHook) {\n      loadData(component, transition, dataHook);\n    }\n  }\n\n  /**\n   * Asynchronously load and apply data to component.\n   *\n   * @param {Vue} component\n   * @param {Transition} transition\n   * @param {Function} hook\n   * @param {Function} cb\n   * @param {Function} cleanup\n   */\n\n  function loadData(component, transition, hook, cb, cleanup) {\n    component.$loadingRouteData = true;\n    transition.callHooks(hook, component, function () {\n      component.$loadingRouteData = false;\n      component.$emit('route-data-loaded', component);\n      cb && cb();\n    }, {\n      cleanup: cleanup,\n      postActivate: true,\n      processData: function processData(data) {\n        // handle promise sugar syntax\n        var promises = [];\n        if (isPlainObject(data)) {\n          Object.keys(data).forEach(function (key) {\n            var val = data[key];\n            if (isPromise(val)) {\n              promises.push(val.then(function (resolvedVal) {\n                component.$set(key, resolvedVal);\n              }));\n            } else {\n              component.$set(key, val);\n            }\n          });\n        }\n        if (promises.length) {\n          return promises[0].constructor.all(promises);\n        }\n      }\n    });\n  }\n\n  /**\n   * Save the child view for a kept-alive view so that\n   * we can restore it when it is switched back to.\n   *\n   * @param {Directive} view\n   */\n\n  function saveChildView(view) {\n    if (view.keepAlive && view.childVM && view.childView) {\n      view.childVM._keepAliveRouterView = view.childView;\n    }\n    view.childView = null;\n  }\n\n  /**\n   * Check plain object.\n   *\n   * @param {*} val\n   */\n\n  function isPlainObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  /**\n   * A RouteTransition object manages the pipeline of a\n   * router-view switching process. This is also the object\n   * passed into user route hooks.\n   *\n   * @param {Router} router\n   * @param {Route} to\n   * @param {Route} from\n   */\n\n  var RouteTransition = (function () {\n    function RouteTransition(router, to, from) {\n      babelHelpers.classCallCheck(this, RouteTransition);\n\n      this.router = router;\n      this.to = to;\n      this.from = from;\n      this.next = null;\n      this.aborted = false;\n      this.done = false;\n    }\n\n    /**\n     * Abort current transition and return to previous location.\n     */\n\n    RouteTransition.prototype.abort = function abort() {\n      if (!this.aborted) {\n        this.aborted = true;\n        // if the root path throws an error during validation\n        // on initial load, it gets caught in an infinite loop.\n        var abortingOnLoad = !this.from.path && this.to.path === '/';\n        if (!abortingOnLoad) {\n          this.router.replace(this.from.path || '/');\n        }\n      }\n    };\n\n    /**\n     * Abort current transition and redirect to a new location.\n     *\n     * @param {String} path\n     */\n\n    RouteTransition.prototype.redirect = function redirect(path) {\n      if (!this.aborted) {\n        this.aborted = true;\n        if (typeof path === 'string') {\n          path = mapParams(path, this.to.params, this.to.query);\n        } else {\n          path.params = path.params || this.to.params;\n          path.query = path.query || this.to.query;\n        }\n        this.router.replace(path);\n      }\n    };\n\n    /**\n     * A router view transition's pipeline can be described as\n     * follows, assuming we are transitioning from an existing\n     * <router-view> chain [Component A, Component B] to a new\n     * chain [Component A, Component C]:\n     *\n     *  A    A\n     *  | => |\n     *  B    C\n     *\n     * 1. Reusablity phase:\n     *   -> canReuse(A, A)\n     *   -> canReuse(B, C)\n     *   -> determine new queues:\n     *      - deactivation: [B]\n     *      - activation: [C]\n     *\n     * 2. Validation phase:\n     *   -> canDeactivate(B)\n     *   -> canActivate(C)\n     *\n     * 3. Activation phase:\n     *   -> deactivate(B)\n     *   -> activate(C)\n     *\n     * Each of these steps can be asynchronous, and any\n     * step can potentially abort the transition.\n     *\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.start = function start(cb) {\n      var transition = this;\n\n      // determine the queue of views to deactivate\n      var deactivateQueue = [];\n      var view = this.router._rootView;\n      while (view) {\n        deactivateQueue.unshift(view);\n        view = view.childView;\n      }\n      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\n      // determine the queue of route handlers to activate\n      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n        return match.handler;\n      });\n\n      // 1. Reusability phase\n      var i = undefined,\n          reuseQueue = undefined;\n      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n          break;\n        }\n      }\n      if (i > 0) {\n        reuseQueue = reverseDeactivateQueue.slice(0, i);\n        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n        activateQueue = activateQueue.slice(i);\n      }\n\n      // 2. Validation phase\n      transition.runQueue(deactivateQueue, canDeactivate, function () {\n        transition.runQueue(activateQueue, canActivate, function () {\n          transition.runQueue(deactivateQueue, deactivate, function () {\n            // 3. Activation phase\n\n            // Update router current route\n            transition.router._onTransitionValidated(transition);\n\n            // trigger reuse for all reused views\n            reuseQueue && reuseQueue.forEach(function (view) {\n              return reuse(view, transition);\n            });\n\n            // the root of the chain that needs to be replaced\n            // is the top-most non-reusable view.\n            if (deactivateQueue.length) {\n              var _view = deactivateQueue[deactivateQueue.length - 1];\n              var depth = reuseQueue ? reuseQueue.length : 0;\n              activate(_view, transition, depth, cb);\n            } else {\n              cb();\n            }\n          });\n        });\n      });\n    };\n\n    /**\n     * Asynchronously and sequentially apply a function to a\n     * queue.\n     *\n     * @param {Array} queue\n     * @param {Function} fn\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n      var transition = this;\n      step(0);\n      function step(index) {\n        if (index >= queue.length) {\n          cb();\n        } else {\n          fn(queue[index], transition, function () {\n            step(index + 1);\n          });\n        }\n      }\n    };\n\n    /**\n     * Call a user provided route transition hook and handle\n     * the response (e.g. if the user returns a promise).\n     *\n     * If the user neither expects an argument nor returns a\n     * promise, the hook is assumed to be synchronous.\n     *\n     * @param {Function} hook\n     * @param {*} [context]\n     * @param {Function} [cb]\n     * @param {Object} [options]\n     *                 - {Boolean} expectBoolean\n     *                 - {Boolean} postActive\n     *                 - {Function} processData\n     *                 - {Function} cleanup\n     */\n\n    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n      var _ref$expectBoolean = _ref.expectBoolean;\n      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n      var _ref$postActivate = _ref.postActivate;\n      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n      var processData = _ref.processData;\n      var cleanup = _ref.cleanup;\n\n      var transition = this;\n      var nextCalled = false;\n\n      // abort the transition\n      var abort = function abort() {\n        cleanup && cleanup();\n        transition.abort();\n      };\n\n      // handle errors\n      var onError = function onError(err) {\n        postActivate ? next() : abort();\n        if (err && !transition.router._suppress) {\n          warn$1('Uncaught error during transition: ');\n          throw err instanceof Error ? err : new Error(err);\n        }\n      };\n\n      // since promise swallows errors, we have to\n      // throw it in the next tick...\n      var onPromiseError = function onPromiseError(err) {\n        try {\n          onError(err);\n        } catch (e) {\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      };\n\n      // advance the transition to the next step\n      var next = function next() {\n        if (nextCalled) {\n          warn$1('transition.next() should be called only once.');\n          return;\n        }\n        nextCalled = true;\n        if (transition.aborted) {\n          cleanup && cleanup();\n          return;\n        }\n        cb && cb();\n      };\n\n      var nextWithBoolean = function nextWithBoolean(res) {\n        if (typeof res === 'boolean') {\n          res ? next() : abort();\n        } else if (isPromise(res)) {\n          res.then(function (ok) {\n            ok ? next() : abort();\n          }, onPromiseError);\n        } else if (!hook.length) {\n          next();\n        }\n      };\n\n      var nextWithData = function nextWithData(data) {\n        var res = undefined;\n        try {\n          res = processData(data);\n        } catch (err) {\n          return onError(err);\n        }\n        if (isPromise(res)) {\n          res.then(next, onPromiseError);\n        } else {\n          next();\n        }\n      };\n\n      // expose a clone of the transition object, so that each\n      // hook gets a clean copy and prevent the user from\n      // messing with the internals.\n      var exposed = {\n        to: transition.to,\n        from: transition.from,\n        abort: abort,\n        next: processData ? nextWithData : next,\n        redirect: function redirect() {\n          transition.redirect.apply(transition, arguments);\n        }\n      };\n\n      // actually call the hook\n      var res = undefined;\n      try {\n        res = hook.call(context, exposed);\n      } catch (err) {\n        return onError(err);\n      }\n\n      if (expectBoolean) {\n        // boolean hooks\n        nextWithBoolean(res);\n      } else if (isPromise(res)) {\n        // promise\n        if (processData) {\n          res.then(nextWithData, onPromiseError);\n        } else {\n          res.then(next, onPromiseError);\n        }\n      } else if (processData && isPlainOjbect(res)) {\n        // data promise sugar\n        nextWithData(res);\n      } else if (!hook.length) {\n        next();\n      }\n    };\n\n    /**\n     * Call a single hook or an array of async hooks in series.\n     *\n     * @param {Array} hooks\n     * @param {*} context\n     * @param {Function} cb\n     * @param {Object} [options]\n     */\n\n    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n      var _this = this;\n\n      if (Array.isArray(hooks)) {\n        this.runQueue(hooks, function (hook, _, next) {\n          if (!_this.aborted) {\n            _this.callHook(hook, context, next, options);\n          }\n        }, cb);\n      } else {\n        this.callHook(hooks, context, cb, options);\n      }\n    };\n\n    return RouteTransition;\n  })();\n\n  function isPlainOjbect(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function toArray(val) {\n    return val ? Array.prototype.slice.call(val) : [];\n  }\n\n  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\n  /**\n   * Route Context Object\n   *\n   * @param {String} path\n   * @param {Router} router\n   */\n\n  var Route = function Route(path, router) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, Route);\n\n    var matched = router._recognizer.recognize(path);\n    if (matched) {\n      // copy all custom fields from route configs\n      [].forEach.call(matched, function (match) {\n        for (var key in match.handler) {\n          if (!internalKeysRE.test(key)) {\n            _this[key] = match.handler[key];\n          }\n        }\n      });\n      // set query and params\n      this.query = matched.queryParams;\n      this.params = [].reduce.call(matched, function (prev, cur) {\n        if (cur.params) {\n          for (var key in cur.params) {\n            prev[key] = cur.params[key];\n          }\n        }\n        return prev;\n      }, {});\n    }\n    // expose path and router\n    this.path = path;\n    // for internal use\n    this.matched = matched || router._notFoundHandler;\n    // internal reference to router\n    Object.defineProperty(this, 'router', {\n      enumerable: false,\n      value: router\n    });\n    // Important: freeze self to prevent observation\n    Object.freeze(this);\n  };\n\n  function applyOverride (Vue) {\n    var _Vue$util = Vue.util;\n    var extend = _Vue$util.extend;\n    var isArray = _Vue$util.isArray;\n    var defineReactive = _Vue$util.defineReactive;\n\n    // override Vue's init and destroy process to keep track of router instances\n    var init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      options = options || {};\n      var root = options._parent || options.parent || this;\n      var router = root.$router;\n      var route = root.$route;\n      if (router) {\n        // expose router\n        this.$router = router;\n        router._children.push(this);\n        /* istanbul ignore if */\n        if (this._defineMeta) {\n          // 0.12\n          this._defineMeta('$route', route);\n        } else {\n          // 1.0\n          defineReactive(this, '$route', route);\n        }\n      }\n      init.call(this, options);\n    };\n\n    var destroy = Vue.prototype._destroy;\n    Vue.prototype._destroy = function () {\n      if (!this._isBeingDestroyed && this.$router) {\n        this.$router._children.$remove(this);\n      }\n      destroy.apply(this, arguments);\n    };\n\n    // 1.0 only: enable route mixins\n    var strats = Vue.config.optionMergeStrategies;\n    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\n    if (strats) {\n      strats.route = function (parentVal, childVal) {\n        if (!childVal) return parentVal;\n        if (!parentVal) return childVal;\n        var ret = {};\n        extend(ret, parentVal);\n        for (var key in childVal) {\n          var a = ret[key];\n          var b = childVal[key];\n          // for data, activate and deactivate, we need to merge them into\n          // arrays similar to lifecycle hooks.\n          if (a && hooksToMergeRE.test(key)) {\n            ret[key] = (isArray(a) ? a : [a]).concat(b);\n          } else {\n            ret[key] = b;\n          }\n        }\n        return ret;\n      };\n    }\n  }\n\n  function View (Vue) {\n\n    var _ = Vue.util;\n    var componentDef =\n    // 0.12\n    Vue.directive('_component') ||\n    // 1.0\n    Vue.internalDirectives.component;\n    // <router-view> extends the internal component directive\n    var viewDef = _.extend({}, componentDef);\n\n    // with some overrides\n    _.extend(viewDef, {\n\n      _isRouterView: true,\n\n      bind: function bind() {\n        var route = this.vm.$route;\n        /* istanbul ignore if */\n        if (!route) {\n          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n          return;\n        }\n        // force dynamic directive so v-component doesn't\n        // attempt to build right now\n        this._isDynamicLiteral = true;\n        // finally, init by delegating to v-component\n        componentDef.bind.call(this);\n\n        // locate the parent view\n        var parentView = undefined;\n        var parent = this.vm;\n        while (parent) {\n          if (parent._routerView) {\n            parentView = parent._routerView;\n            break;\n          }\n          parent = parent.$parent;\n        }\n        if (parentView) {\n          // register self as a child of the parent view,\n          // instead of activating now. This is so that the\n          // child's activate hook is called after the\n          // parent's has resolved.\n          this.parentView = parentView;\n          parentView.childView = this;\n        } else {\n          // this is the root view!\n          var router = route.router;\n          router._rootView = this;\n        }\n\n        // handle late-rendered view\n        // two possibilities:\n        // 1. root view rendered after transition has been\n        //    validated;\n        // 2. child view rendered after parent view has been\n        //    activated.\n        var transition = route.router._currentTransition;\n        if (!parentView && transition.done || parentView && parentView.activated) {\n          var depth = parentView ? parentView.depth + 1 : 0;\n          activate(this, transition, depth);\n        }\n      },\n\n      unbind: function unbind() {\n        if (this.parentView) {\n          this.parentView.childView = null;\n        }\n        componentDef.unbind.call(this);\n      }\n    });\n\n    Vue.elementDirective('router-view', viewDef);\n  }\n\n  var trailingSlashRE = /\\/$/;\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var queryStringRE = /\\?.*$/;\n\n  // install v-link, which provides navigation support for\n  // HTML5 history mode\n  function Link (Vue) {\n    var _Vue$util = Vue.util;\n    var _bind = _Vue$util.bind;\n    var isObject = _Vue$util.isObject;\n    var addClass = _Vue$util.addClass;\n    var removeClass = _Vue$util.removeClass;\n\n    var onPriority = Vue.directive('on').priority;\n    var LINK_UPDATE = '__vue-router-link-update__';\n\n    var activeId = 0;\n\n    Vue.directive('link-active', {\n      priority: 9999,\n      bind: function bind() {\n        var _this = this;\n\n        var id = String(activeId++);\n        // collect v-links contained within this element.\n        // we need do this here before the parent-child relationship\n        // gets messed up by terminal directives (if, for, components)\n        var childLinks = this.el.querySelectorAll('[v-link]');\n        for (var i = 0, l = childLinks.length; i < l; i++) {\n          var link = childLinks[i];\n          var existingId = link.getAttribute(LINK_UPDATE);\n          var value = existingId ? existingId + ',' + id : id;\n          // leave a mark on the link element which can be persisted\n          // through fragment clones.\n          link.setAttribute(LINK_UPDATE, value);\n        }\n        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n          if (link.activeIds.indexOf(id) > -1) {\n            link.updateClasses(path, _this.el);\n          }\n        });\n      },\n      unbind: function unbind() {\n        this.vm.$off(LINK_UPDATE, this.cb);\n      }\n    });\n\n    Vue.directive('link', {\n      priority: onPriority - 2,\n\n      bind: function bind() {\n        var vm = this.vm;\n        /* istanbul ignore if */\n        if (!vm.$route) {\n          warn$1('v-link can only be used inside a router-enabled app.');\n          return;\n        }\n        this.router = vm.$route.router;\n        // update things when the route changes\n        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n        // check v-link-active ids\n        var activeIds = this.el.getAttribute(LINK_UPDATE);\n        if (activeIds) {\n          this.el.removeAttribute(LINK_UPDATE);\n          this.activeIds = activeIds.split(',');\n        }\n        // no need to handle click if link expects to be opened\n        // in a new window/tab.\n        /* istanbul ignore if */\n        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n          return;\n        }\n        // handle click\n        this.handler = _bind(this.onClick, this);\n        this.el.addEventListener('click', this.handler);\n      },\n\n      update: function update(target) {\n        this.target = target;\n        if (isObject(target)) {\n          this.append = target.append;\n          this.exact = target.exact;\n          this.prevActiveClass = this.activeClass;\n          this.activeClass = target.activeClass;\n        }\n        this.onRouteUpdate(this.vm.$route);\n      },\n\n      onClick: function onClick(e) {\n        // don't redirect with control keys\n        /* istanbul ignore if */\n        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n        // don't redirect when preventDefault called\n        /* istanbul ignore if */\n        if (e.defaultPrevented) return;\n        // don't redirect on right click\n        /* istanbul ignore if */\n        if (e.button !== 0) return;\n\n        var target = this.target;\n        if (target) {\n          // v-link with expression, just go\n          e.preventDefault();\n          this.router.go(target);\n        } else {\n          // no expression, delegate for an <a> inside\n          var el = e.target;\n          while (el.tagName !== 'A' && el !== this.el) {\n            el = el.parentNode;\n          }\n          if (el.tagName === 'A' && sameOrigin(el)) {\n            e.preventDefault();\n            var path = el.pathname;\n            if (this.router.history.root) {\n              path = path.replace(this.router.history.rootRE, '');\n            }\n            this.router.go({\n              path: path,\n              replace: target && target.replace,\n              append: target && target.append\n            });\n          }\n        }\n      },\n\n      onRouteUpdate: function onRouteUpdate(route) {\n        // router.stringifyPath is dependent on current route\n        // and needs to be called again whenver route changes.\n        var newPath = this.router.stringifyPath(this.target);\n        if (this.path !== newPath) {\n          this.path = newPath;\n          this.updateActiveMatch();\n          this.updateHref();\n        }\n        if (this.activeIds) {\n          this.vm.$emit(LINK_UPDATE, this, route.path);\n        } else {\n          this.updateClasses(route.path, this.el);\n        }\n      },\n\n      updateActiveMatch: function updateActiveMatch() {\n        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n      },\n\n      updateHref: function updateHref() {\n        if (this.el.tagName !== 'A') {\n          return;\n        }\n        var path = this.path;\n        var router = this.router;\n        var isAbsolute = path.charAt(0) === '/';\n        // do not format non-hash relative paths\n        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n        if (href) {\n          this.el.href = href;\n        } else {\n          this.el.removeAttribute('href');\n        }\n      },\n\n      updateClasses: function updateClasses(path, el) {\n        var activeClass = this.activeClass || this.router._linkActiveClass;\n        // clear old class\n        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n          toggleClasses(el, this.prevActiveClass, removeClass);\n        }\n        // remove query string before matching\n        var dest = this.path.replace(queryStringRE, '');\n        path = path.replace(queryStringRE, '');\n        // add new class\n        if (this.exact) {\n          if (dest === path ||\n          // also allow additional trailing slash\n          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        } else {\n          if (this.activeRE && this.activeRE.test(path)) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        }\n      },\n\n      unbind: function unbind() {\n        this.el.removeEventListener('click', this.handler);\n        this.unwatch && this.unwatch();\n      }\n    });\n\n    function sameOrigin(link) {\n      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n    }\n\n    // this function is copied from v-bind:class implementation until\n    // we properly expose it...\n    function toggleClasses(el, key, fn) {\n      key = key.trim();\n      if (key.indexOf(' ') === -1) {\n        fn(el, key);\n        return;\n      }\n      var keys = key.split(/\\s+/);\n      for (var i = 0, l = keys.length; i < l; i++) {\n        fn(el, keys[i]);\n      }\n    }\n  }\n\n  var historyBackends = {\n    abstract: AbstractHistory,\n    hash: HashHistory,\n    html5: HTML5History\n  };\n\n  // late bind during install\n  var Vue = undefined;\n\n  /**\n   * Router constructor\n   *\n   * @param {Object} [options]\n   */\n\n  var Router = (function () {\n    function Router() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$hashbang = _ref.hashbang;\n      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n      var _ref$abstract = _ref.abstract;\n      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n      var _ref$history = _ref.history;\n      var history = _ref$history === undefined ? false : _ref$history;\n      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n      var _ref$root = _ref.root;\n      var root = _ref$root === undefined ? null : _ref$root;\n      var _ref$linkActiveClass = _ref.linkActiveClass;\n      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n      babelHelpers.classCallCheck(this, Router);\n\n      /* istanbul ignore if */\n      if (!Router.installed) {\n        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n      }\n\n      // Vue instances\n      this.app = null;\n      this._children = [];\n\n      // route recognizer\n      this._recognizer = new RouteRecognizer();\n      this._guardRecognizer = new RouteRecognizer();\n\n      // state\n      this._started = false;\n      this._startCb = null;\n      this._currentRoute = {};\n      this._currentTransition = null;\n      this._previousTransition = null;\n      this._notFoundHandler = null;\n      this._notFoundRedirect = null;\n      this._beforeEachHooks = [];\n      this._afterEachHooks = [];\n\n      // trigger transition on initial render?\n      this._rendered = false;\n      this._transitionOnLoad = transitionOnLoad;\n\n      // history mode\n      this._root = root;\n      this._abstract = abstract;\n      this._hashbang = hashbang;\n\n      // check if HTML5 history is available\n      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n      this._history = history && hasPushState;\n      this._historyFallback = history && !hasPushState;\n\n      // create history object\n      var inBrowser = Vue.util.inBrowser;\n      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\n      var History = historyBackends[this.mode];\n      this.history = new History({\n        root: root,\n        hashbang: this._hashbang,\n        onChange: function onChange(path, state, anchor) {\n          _this._match(path, state, anchor);\n        }\n      });\n\n      // other options\n      this._saveScrollPosition = saveScrollPosition;\n      this._linkActiveClass = linkActiveClass;\n      this._suppress = suppressTransitionError;\n    }\n\n    /**\n     * Allow directly passing components to a route\n     * definition.\n     *\n     * @param {String} path\n     * @param {Object} handler\n     */\n\n    // API ===================================================\n\n    /**\n    * Register a map of top-level paths.\n    *\n    * @param {Object} map\n    */\n\n    Router.prototype.map = function map(_map) {\n      for (var route in _map) {\n        this.on(route, _map[route]);\n      }\n      return this;\n    };\n\n    /**\n     * Register a single root-level path\n     *\n     * @param {String} rootPath\n     * @param {Object} handler\n     *                 - {String} component\n     *                 - {Object} [subRoutes]\n     *                 - {Boolean} [forceRefresh]\n     *                 - {Function} [before]\n     *                 - {Function} [after]\n     */\n\n    Router.prototype.on = function on(rootPath, handler) {\n      if (rootPath === '*') {\n        this._notFound(handler);\n      } else {\n        this._addRoute(rootPath, handler, []);\n      }\n      return this;\n    };\n\n    /**\n     * Set redirects.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.redirect = function redirect(map) {\n      for (var path in map) {\n        this._addRedirect(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set aliases.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.alias = function alias(map) {\n      for (var path in map) {\n        this._addAlias(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set global before hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.beforeEach = function beforeEach(fn) {\n      this._beforeEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Set global after hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.afterEach = function afterEach(fn) {\n      this._afterEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Navigate to a given path.\n     * The path can be an object describing a named path in\n     * the format of { name: '...', params: {}, query: {}}\n     * The path is assumed to be already decoded, and will\n     * be resolved against root (if provided)\n     *\n     * @param {String|Object} path\n     * @param {Boolean} [replace]\n     */\n\n    Router.prototype.go = function go(path) {\n      var replace = false;\n      var append = false;\n      if (Vue.util.isObject(path)) {\n        replace = path.replace;\n        append = path.append;\n      }\n      path = this.stringifyPath(path);\n      if (path) {\n        this.history.go(path, replace, append);\n      }\n    };\n\n    /**\n     * Short hand for replacing current path\n     *\n     * @param {String} path\n     */\n\n    Router.prototype.replace = function replace(path) {\n      if (typeof path === 'string') {\n        path = { path: path };\n      }\n      path.replace = true;\n      this.go(path);\n    };\n\n    /**\n     * Start the router.\n     *\n     * @param {VueConstructor} App\n     * @param {String|Element} container\n     * @param {Function} [cb]\n     */\n\n    Router.prototype.start = function start(App, container, cb) {\n      /* istanbul ignore if */\n      if (this._started) {\n        warn$1('already started.');\n        return;\n      }\n      this._started = true;\n      this._startCb = cb;\n      if (!this.app) {\n        /* istanbul ignore if */\n        if (!App || !container) {\n          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n        }\n        /* istanbul ignore if */\n        if (App instanceof Vue) {\n          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n        }\n        this._appContainer = container;\n        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n        // give it a name for better debugging\n        Ctor.options.name = Ctor.options.name || 'RouterApp';\n      }\n\n      // handle history fallback in browsers that do not\n      // support HTML5 history API\n      if (this._historyFallback) {\n        var _location = window.location;\n        var _history = new HTML5History({ root: this._root });\n        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n        if (path && path !== '/') {\n          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n          return;\n        }\n      }\n\n      this.history.start();\n    };\n\n    /**\n     * Stop listening to route changes.\n     */\n\n    Router.prototype.stop = function stop() {\n      this.history.stop();\n      this._started = false;\n    };\n\n    /**\n     * Normalize named route object / string paths into\n     * a string.\n     *\n     * @param {Object|String|Number} path\n     * @return {String}\n     */\n\n    Router.prototype.stringifyPath = function stringifyPath(path) {\n      var generatedPath = '';\n      if (path && typeof path === 'object') {\n        if (path.name) {\n          var extend = Vue.util.extend;\n          var currentParams = this._currentTransition && this._currentTransition.to.params;\n          var targetParams = path.params || {};\n          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n        } else if (path.path) {\n          generatedPath = encodeURI(path.path);\n        }\n        if (path.query) {\n          // note: the generated query string is pre-URL-encoded by the recognizer\n          var query = this._recognizer.generateQueryString(path.query);\n          if (generatedPath.indexOf('?') > -1) {\n            generatedPath += '&' + query.slice(1);\n          } else {\n            generatedPath += query;\n          }\n        }\n      } else {\n        generatedPath = encodeURI(path ? path + '' : '');\n      }\n      return generatedPath;\n    };\n\n    // Internal methods ======================================\n\n    /**\n    * Add a route containing a list of segments to the internal\n    * route recognizer. Will be called recursively to add all\n    * possible sub-routes.\n    *\n    * @param {String} path\n    * @param {Object} handler\n    * @param {Array} segments\n    */\n\n    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n      guardComponent(path, handler);\n      handler.path = path;\n      handler.fullPath = (segments.reduce(function (path, segment) {\n        return path + segment.path;\n      }, '') + path).replace('//', '/');\n      segments.push({\n        path: path,\n        handler: handler\n      });\n      this._recognizer.add(segments, {\n        as: handler.name\n      });\n      // add sub routes\n      if (handler.subRoutes) {\n        for (var subPath in handler.subRoutes) {\n          // recursively walk all sub routes\n          this._addRoute(subPath, handler.subRoutes[subPath],\n          // pass a copy in recursion to avoid mutating\n          // across branches\n          segments.slice());\n        }\n      }\n    };\n\n    /**\n     * Set the notFound route handler.\n     *\n     * @param {Object} handler\n     */\n\n    Router.prototype._notFound = function _notFound(handler) {\n      guardComponent('*', handler);\n      this._notFoundHandler = [{ handler: handler }];\n    };\n\n    /**\n     * Add a redirect record.\n     *\n     * @param {String} path\n     * @param {String} redirectPath\n     */\n\n    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n      if (path === '*') {\n        this._notFoundRedirect = redirectPath;\n      } else {\n        this._addGuard(path, redirectPath, this.replace);\n      }\n    };\n\n    /**\n     * Add an alias record.\n     *\n     * @param {String} path\n     * @param {String} aliasPath\n     */\n\n    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n      this._addGuard(path, aliasPath, this._match);\n    };\n\n    /**\n     * Add a path guard.\n     *\n     * @param {String} path\n     * @param {String} mappedPath\n     * @param {Function} handler\n     */\n\n    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n      var _this2 = this;\n\n      this._guardRecognizer.add([{\n        path: path,\n        handler: function handler(match, query) {\n          var realPath = mapParams(mappedPath, match.params, query);\n          _handler.call(_this2, realPath);\n        }\n      }]);\n    };\n\n    /**\n     * Check if a path matches any redirect records.\n     *\n     * @param {String} path\n     * @return {Boolean} - if true, will skip normal match.\n     */\n\n    Router.prototype._checkGuard = function _checkGuard(path) {\n      var matched = this._guardRecognizer.recognize(path, true);\n      if (matched) {\n        matched[0].handler(matched[0], matched.queryParams);\n        return true;\n      } else if (this._notFoundRedirect) {\n        matched = this._recognizer.recognize(path);\n        if (!matched) {\n          this.replace(this._notFoundRedirect);\n          return true;\n        }\n      }\n    };\n\n    /**\n     * Match a URL path and set the route context on vm,\n     * triggering view updates.\n     *\n     * @param {String} path\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._match = function _match(path, state, anchor) {\n      var _this3 = this;\n\n      if (this._checkGuard(path)) {\n        return;\n      }\n\n      var currentRoute = this._currentRoute;\n      var currentTransition = this._currentTransition;\n\n      if (currentTransition) {\n        if (currentTransition.to.path === path) {\n          // do nothing if we have an active transition going to the same path\n          return;\n        } else if (currentRoute.path === path) {\n          // We are going to the same path, but we also have an ongoing but\n          // not-yet-validated transition. Abort that transition and reset to\n          // prev transition.\n          currentTransition.aborted = true;\n          this._currentTransition = this._prevTransition;\n          return;\n        } else {\n          // going to a totally different path. abort ongoing transition.\n          currentTransition.aborted = true;\n        }\n      }\n\n      // construct new route and transition context\n      var route = new Route(path, this);\n      var transition = new RouteTransition(this, route, currentRoute);\n\n      // current transition is updated right now.\n      // however, current route will only be updated after the transition has\n      // been validated.\n      this._prevTransition = currentTransition;\n      this._currentTransition = transition;\n\n      if (!this.app) {\n        (function () {\n          // initial render\n          var router = _this3;\n          _this3.app = new _this3._appConstructor({\n            el: _this3._appContainer,\n            created: function created() {\n              this.$router = router;\n            },\n            _meta: {\n              $route: route\n            }\n          });\n        })();\n      }\n\n      // check global before hook\n      var beforeHooks = this._beforeEachHooks;\n      var startTransition = function startTransition() {\n        transition.start(function () {\n          _this3._postTransition(route, state, anchor);\n        });\n      };\n\n      if (beforeHooks.length) {\n        transition.runQueue(beforeHooks, function (hook, _, next) {\n          if (transition === _this3._currentTransition) {\n            transition.callHook(hook, null, next, {\n              expectBoolean: true\n            });\n          }\n        }, startTransition);\n      } else {\n        startTransition();\n      }\n\n      if (!this._rendered && this._startCb) {\n        this._startCb.call(null);\n      }\n\n      // HACK:\n      // set rendered to true after the transition start, so\n      // that components that are acitvated synchronously know\n      // whether it is the initial render.\n      this._rendered = true;\n    };\n\n    /**\n     * Set current to the new transition.\n     * This is called by the transition object when the\n     * validation of a route has succeeded.\n     *\n     * @param {Transition} transition\n     */\n\n    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n      // set current route\n      var route = this._currentRoute = transition.to;\n      // update route context for all children\n      if (this.app.$route !== route) {\n        this.app.$route = route;\n        this._children.forEach(function (child) {\n          child.$route = route;\n        });\n      }\n      // call global after hook\n      if (this._afterEachHooks.length) {\n        this._afterEachHooks.forEach(function (hook) {\n          return hook.call(null, {\n            to: transition.to,\n            from: transition.from\n          });\n        });\n      }\n      this._currentTransition.done = true;\n    };\n\n    /**\n     * Handle stuff after the transition.\n     *\n     * @param {Route} route\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n      // handle scroll positions\n      // saved scroll positions take priority\n      // then we check if the path has an anchor\n      var pos = state && state.pos;\n      if (pos && this._saveScrollPosition) {\n        Vue.nextTick(function () {\n          window.scrollTo(pos.x, pos.y);\n        });\n      } else if (anchor) {\n        Vue.nextTick(function () {\n          var el = document.getElementById(anchor.slice(1));\n          if (el) {\n            window.scrollTo(window.scrollX, el.offsetTop);\n          }\n        });\n      }\n    };\n\n    return Router;\n  })();\n\n  function guardComponent(path, handler) {\n    var comp = handler.component;\n    if (Vue.util.isPlainObject(comp)) {\n      comp = handler.component = Vue.extend(comp);\n    }\n    /* istanbul ignore if */\n    if (typeof comp !== 'function') {\n      handler.component = null;\n      warn$1('invalid component for route \"' + path + '\".');\n    }\n  }\n\n  /* Installation */\n\n  Router.installed = false;\n\n  /**\n   * Installation interface.\n   * Install the necessary directives.\n   */\n\n  Router.install = function (externalVue) {\n    /* istanbul ignore if */\n    if (Router.installed) {\n      warn$1('already installed.');\n      return;\n    }\n    Vue = externalVue;\n    applyOverride(Vue);\n    View(Vue);\n    Link(Vue);\n    exports$1.Vue = Vue;\n    Router.installed = true;\n  };\n\n  // auto install\n  /* istanbul ignore if */\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(Router);\n  }\n\n  return Router;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-router/dist/vue-router.js\n ** module id = 5\n ** module chunks = 0\n **/","// This getter is a function which just returns the id of the image\n\nexport function getId (state) {\n  return state.picId\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/getters.js\n **/","<template>\n  <div class=\"ui two top attached steps\">\n      <div class=\"active step\">\n        <a v-link=\"'/home'\">\n        <div class=\"content\">\n          <div class=\"title\"><i class=\"upload icon\"></i>Upload</div>\n          <div class=\"description\">Upload the picture</div>\n        </div>\n        </a>\n      </div>\n      <div class=\"disabled step\">\n        <a v-link=\"'/effects'\">\n        <div class=\"content\">\n          <div class=\"title\"><i class=\"magic icon\"></i>Spice it up</div>\n          <div class=\"description\">Select effects to the photos</div>\n        </div>\n        </a>\n      </div>\n    </div>\n  </div>\n  <router-view></router-view>\n</template>\n\n<script>\n  import Dashboard from './components/Dashboard.vue'\n  import Home from './components/Home.vue'\n  import store from './store' // import the store we just created\n\n  export default {\n    components: {\n      Dashboard,\n      Home\n    },\n    store // make this and all child components aware of the new store\n  }\n\n</script>\n\n\n/** WEBPACK FOOTER **\n ** App.vue?0c14d460\n **/","<template>\n  <div class=\"dashboard\">\n    <div class=\"ui large two top attached steps\">\n      <div class=\"step\">\n        <a v-link=\"'/'\">\n        <div class=\"content\">\n          <div class=\"title\"><i class=\"upload icon\"></i>Upload</div>\n          <div class=\"description\">Upload the picture</div>\n        </div>\n        </a>\n      </div>\n      <div class=\"active step\">\n        <a v-link=\"'/dashboard'\">\n        <div class=\"content\">\n          <div class=\"title\"><i class=\"magic icon\"></i>Spice it up</div>\n          <div class=\"description\">Select effects to the photos</div>\n        </div>\n        </a>\n      </div>\n    </div>\n    <div align=\"center\">\n      <img class=\"ui centered huge spaced image\" src=\"[[ pic ]]\">\n      <div class=\"ui buttons\">\n        <button class=\"ui button\" v-on:click=\"reset\">RESET</button>\n        <div class=\"or\"></div>\n        <a href=\"[[ pic ]]\" download=\"sjourney_effect\">\n        <button class=\"ui positive button\"><i class=\"save icon\"></i>Save</button>\n        </a>\n        <div class=\"or\"></div>\n        <button class=\"ui secondary button\" v-on:click=\"share(pic)\"><i class=\"share icon\"></i>Share</button>\n      </div>\n    </div>\n    <div class=\"ui segment\">\n      <h2 class=\"ui right floated header\">Effects</h2>\n      <div class=\"ui clearing divider\">\n      </div>\n      <div class=\"fx_images ui small circular images\">\n        <span v-on:click=\"effect(1)\">\n        <img src=\"/media/previews/b_w.thumbnail\">\n        </span>\n        <span v-on:click=\"effect(2)\">\n        <img src=\"/media/previews/detail.thumbnail\">\n        </span>\n        <span v-on:click=\"effect(3)\">\n        <img src=\"/media/previews/blur.thumbnail\">\n        </span>\n        <span v-on:click=\"effect(4)\">\n        <img src=\"/media/previews/emboss.thumbnail\">\n        </span>\n        <span v-on:click=\"effect(5)\">\n        <img src=\"/media/previews/upside_down.thumbnail\">\n        </span>\n        <span v-on:click=\"effect(6)\">\n        <img src=\"/media/previews/find_edges.thumbnail\">\n        </span>\n        <span v-on:click=\"effect(7)\">\n        <img src=\"/media/previews/contour.thumbnail\">\n        </span>\n        <span v-on:click=\"effect(8)\">\n        <img src=\"/media/previews/contrast.thumbnail\">\n        </span>\n        <span v-on:click=\"effect(9)\">\n        <img src=\"/media/previews/bright.thumbnail\">\n        </span>\n        <span v-on:click=\"effect(10)\">\n        <img src=\"/media/previews/pixelate.thumbnail\">\n        </span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style type=\"text/css\" scoped>\n.fx_images {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n</style>\n\n<script>\nimport { getId } from '../getters'\nimport Vue from 'vue'\nimport VueRouter from 'vue-router'\nVue.use(VueRouter)\nconst router = new VueRouter()\nexport default {\n  ready: function () {\n    // GET request\n    this.$http.get('/api/v1/pics/' + this.imageId).then(function (response) {\n      this.$set('pic', response.data.uploaded_image)\n    }, function (response) {\n      router.go('/')\n    })\n  },\n  vuex: {\n    getters: {\n      // note that you're passing the function itself, and not the value 'getId()'\n      imageId: getId\n    }\n  },\n  methods: {\n    reset: function () {\n      this.$http.get('/api/v1/pics/' + this.imageId).then(function (response) {\n        this.$set('pic', response.data.uploaded_image)\n      }, function (response) {\n      })\n    },\n    effect: function (id) {\n      window.debugger\n      this.$http.get('/api/v1/pics/' + this.imageId + '?filter=' + id).then(function (response) {\n        this.$set('pic', response.data.edited_image)\n      }, function (response) {\n        this.$http.get('/api/v1/pics/' + this.imageId + '?filter=' + id).then(function (response) {\n          this.$set('pic', response.data.edited_image)\n        }, function (response) {\n        })\n      })\n    },\n    share: function (pic) {\n      window.FB.ui({\n        method: 'share',\n        mobile_iframe: true,\n        href: pic\n      }, function (response) {\n        if (response && !response.error_message) {\n          window.alert('Posting completed.')\n        } else {\n          window.alert('Error while posting.')\n        }\n      })\n    }\n  }\n}\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** Dashboard.vue?c0f1f50a\n **/","<template>\n  <div id=\"wrapper\">\n    <div class=\"ui large two top attached steps\">\n      <div class=\"active step\">\n        <a v-link=\"'/'\">\n        <div class=\"content\">\n          <div class=\"title\"><i class=\"upload icon\"></i>Upload</div>\n          <div class=\"description\">Upload the picture</div>\n        </div>\n        </a>\n      </div>\n      <div class=\"disabled step\">\n        <a v-link=\"'/dashboard'\">\n        <div class=\"content\">\n          <div class=\"title\"><i class=\"magic icon\"></i>Spice it up</div>\n          <div class=\"description\">Select effects to the photos</div>\n        </div>\n        </a>\n      </div>\n    </div>\n  </div>\n  <div id=\"upload\" align=\"center\">\n    <div>\n      <h2>Select an image</h2>\n      <form>\n        <input type=\"file\" v-el:fileInput v-model=\"newInput\" class=\"form-control\">\n        <button class=\"ui button\" v-on:click=\"onSubmitForm\">\n          <i class=\"upload icon\"></i>\n          Upload\n        </button>\n      </form>\n    </div>\n  </div>\n  <h4 class=\"ui horizontal divider header\">\n  <i class=\"camera icon\"></i>\n  Your Pictures\n  </h4>\n  <div v-if=\"no_pics\" align=\"center\">\n    <i class=\"ui huge frown icon\"></i>\n    <h4>You have no photos on sJourney\n    <br>Why not upload one or more ...</h4>\n  </div>\n  <div v-if=\"pics\">\n    <div class=\"ui six link cards\">\n      <div class=\"card\" v-for=\"pic in pics\">\n        <div class=\"image\" v-on:click=\"splash(pic.id)\" v-link=\"'/dashboard'\">\n          <img src=\"[[ pic.uploaded_image ]]\">\n        </div>\n        <div class=\"content\">\n          <div class=\"header\">[[ pic.name ]]</div>\n        <div class=\"extra content\">\n          <a v-on:click=\"deletePic($index, pic.id)\">\n          <span class=\"right floated\">\n            <i class=\"ui delete icon\"></i>\n          </span>\n          </a>\n        </div>\n      </div>\n      </div>\n    </div>\n  </div>\n  <div v-if=\"no_data\" align=\"center\">\n  <h4>Please try reloading</h4>\n  </div>\n</template>\n\n<script>\nimport store from '../store'\nexport default {\n  ready: function () {\n    // GET request\n    this.checkPictures()\n    this.checkCategories()\n  },\n  methods: {\n    checkCategories: function () {\n      this.$http.get('/api/v1/categories/').then(function (response) {\n        console.log(response.data)\n        if (response.data.length === 0) {\n          this.$set('no_category', true)\n        } else {\n          this.$set('category', response.data[0])\n          this.$set('no_category', false)\n        }\n      }, function (response) {\n      })\n    },\n    checkPictures: function () {\n      this.$http.get('/api/v1/pics/').then(function (response) {\n        if (response.data.length === 0) {\n          this.$set('pics', response.data)\n          this.$set('no_pics', true)\n          this.$set('no_data', false)\n        } else {\n          this.$set('pics', response.data)\n          this.$set('no_pics', false)\n          this.$set('no_data', false)\n        }\n      }, function (response) {\n        this.$set('no_data', true)\n        this.$set('no_pics', false)\n      })\n    },\n    deletePic: function (id, picId) {\n      this.$http.delete('/api/v1/pics/' + picId).then(function (response) {\n        this.pics.$remove(id)\n        this.$set('status', 'Picture deleted')\n        this.checkPictures()\n      }, function (response) {\n      })\n    },\n    onSubmitForm: function (e) {\n      e.preventDefault()\n      var fileUploadFormData = new window.FormData()\n      fileUploadFormData.append('uploaded_image', this.$els.fileinput.files[0])\n      // fileUploadFormData.append('category', this.category)\n      this.$http.post('/api/v1/pics/', fileUploadFormData).then(function (response) {\n        this.checkPictures()\n        this.$set('newInput', '')\n      }, function (response) {\n      })\n    }\n  },\n  vuex: {\n    actions: {\n      splash: function (e, picId) {\n        store.dispatch('SELECTED', picId)\n      }\n    }\n  }\n}\n</script>\n\n\n/** WEBPACK FOOTER **\n ** Home.vue?f27a0766\n **/","module.exports = \"<div class=\\\"ui two top attached steps\\\"> <div class=\\\"active step\\\"> <a v-link=\\\"'/home'\\\"> <div class=content> <div class=title><i class=\\\"upload icon\\\"></i>Upload</div> <div class=description>Upload the picture</div> </div> </a> </div> <div class=\\\"disabled step\\\"> <a v-link=\\\"'/effects'\\\"> <div class=content> <div class=title><i class=\\\"magic icon\\\"></i>Spice it up</div> <div class=description>Select effects to the photos</div> </div> </a> </div> </div>  <router-view></router-view>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n ** module id = 11\n ** module chunks = 0\n **/","module.exports = \"<div id=wrapper> <div class=\\\"ui large two top attached steps\\\"> <div class=\\\"active step\\\"> <a v-link=\\\"'/'\\\"> <div class=content> <div class=title><i class=\\\"upload icon\\\"></i>Upload</div> <div class=description>Upload the picture</div> </div> </a> </div> <div class=\\\"disabled step\\\"> <a v-link=\\\"'/dashboard'\\\"> <div class=content> <div class=title><i class=\\\"magic icon\\\"></i>Spice it up</div> <div class=description>Select effects to the photos</div> </div> </a> </div> </div> </div> <div id=upload align=center> <div> <h2>Select an image</h2> <form> <input type=file v-el:fileinput v-model=newInput class=form-control> <button class=\\\"ui button\\\" v-on:click=onSubmitForm> <i class=\\\"upload icon\\\"></i> Upload </button> </form> </div> </div> <h4 class=\\\"ui horizontal divider header\\\"> <i class=\\\"camera icon\\\"></i> Your Pictures </h4> <div v-if=no_pics align=center> <i class=\\\"ui huge frown icon\\\"></i> <h4>You have no photos on sJourney <br>Why not upload one or more ...</h4> </div> <div v-if=pics> <div class=\\\"ui six link cards\\\"> <div class=card v-for=\\\"pic in pics\\\"> <div class=image v-on:click=splash(pic.id) v-link=\\\"'/dashboard'\\\"> <img src=\\\"[[ pic.uploaded_image ]]\\\"> </div> <div class=content> <div class=header>[[ pic.name ]]</div> <div class=\\\"extra content\\\"> <a v-on:click=\\\"deletePic($index, pic.id)\\\"> <span class=\\\"right floated\\\"> <i class=\\\"ui delete icon\\\"></i> </span> </a> </div> </div> </div> </div> </div> <div v-if=no_data align=center> <h4>Please try reloading</h4> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Home.vue\n ** module id = 12\n ** module chunks = 0\n **/","module.exports = \"<div class=dashboard _v-2612bd2f=\\\"\\\"> <div class=\\\"ui large two top attached steps\\\" _v-2612bd2f=\\\"\\\"> <div class=step _v-2612bd2f=\\\"\\\"> <a v-link=\\\"'/'\\\" _v-2612bd2f=\\\"\\\"> <div class=content _v-2612bd2f=\\\"\\\"> <div class=title _v-2612bd2f=\\\"\\\"><i class=\\\"upload icon\\\" _v-2612bd2f=\\\"\\\"></i>Upload</div> <div class=description _v-2612bd2f=\\\"\\\">Upload the picture</div> </div> </a> </div> <div class=\\\"active step\\\" _v-2612bd2f=\\\"\\\"> <a v-link=\\\"'/dashboard'\\\" _v-2612bd2f=\\\"\\\"> <div class=content _v-2612bd2f=\\\"\\\"> <div class=title _v-2612bd2f=\\\"\\\"><i class=\\\"magic icon\\\" _v-2612bd2f=\\\"\\\"></i>Spice it up</div> <div class=description _v-2612bd2f=\\\"\\\">Select effects to the photos</div> </div> </a> </div> </div> <div align=center _v-2612bd2f=\\\"\\\"> <img class=\\\"ui centered huge spaced image\\\" src=\\\"[[ pic ]]\\\" _v-2612bd2f=\\\"\\\"> <div class=\\\"ui buttons\\\" _v-2612bd2f=\\\"\\\"> <button class=\\\"ui button\\\" v-on:click=reset _v-2612bd2f=\\\"\\\">RESET</button> <div class=or _v-2612bd2f=\\\"\\\"></div> <a href=\\\"[[ pic ]]\\\" download=sjourney_effect _v-2612bd2f=\\\"\\\"> <button class=\\\"ui positive button\\\" _v-2612bd2f=\\\"\\\"><i class=\\\"save icon\\\" _v-2612bd2f=\\\"\\\"></i>Save</button> </a> <div class=or _v-2612bd2f=\\\"\\\"></div> <button class=\\\"ui secondary button\\\" v-on:click=share(pic) _v-2612bd2f=\\\"\\\"><i class=\\\"share icon\\\" _v-2612bd2f=\\\"\\\"></i>Share</button> </div> </div> <div class=\\\"ui segment\\\" _v-2612bd2f=\\\"\\\"> <h2 class=\\\"ui right floated header\\\" _v-2612bd2f=\\\"\\\">Effects</h2> <div class=\\\"ui clearing divider\\\" _v-2612bd2f=\\\"\\\"> </div> <div class=\\\"fx_images ui small circular images\\\" _v-2612bd2f=\\\"\\\"> <span v-on:click=effect(1) _v-2612bd2f=\\\"\\\"> <img src=/media/previews/b_w.thumbnail _v-2612bd2f=\\\"\\\"> </span> <span v-on:click=effect(2) _v-2612bd2f=\\\"\\\"> <img src=/media/previews/detail.thumbnail _v-2612bd2f=\\\"\\\"> </span> <span v-on:click=effect(3) _v-2612bd2f=\\\"\\\"> <img src=/media/previews/blur.thumbnail _v-2612bd2f=\\\"\\\"> </span> <span v-on:click=effect(4) _v-2612bd2f=\\\"\\\"> <img src=/media/previews/emboss.thumbnail _v-2612bd2f=\\\"\\\"> </span> <span v-on:click=effect(5) _v-2612bd2f=\\\"\\\"> <img src=/media/previews/upside_down.thumbnail _v-2612bd2f=\\\"\\\"> </span> <span v-on:click=effect(6) _v-2612bd2f=\\\"\\\"> <img src=/media/previews/find_edges.thumbnail _v-2612bd2f=\\\"\\\"> </span> <span v-on:click=effect(7) _v-2612bd2f=\\\"\\\"> <img src=/media/previews/contour.thumbnail _v-2612bd2f=\\\"\\\"> </span> <span v-on:click=effect(8) _v-2612bd2f=\\\"\\\"> <img src=/media/previews/contrast.thumbnail _v-2612bd2f=\\\"\\\"> </span> <span v-on:click=effect(9) _v-2612bd2f=\\\"\\\"> <img src=/media/previews/bright.thumbnail _v-2612bd2f=\\\"\\\"> </span> <span v-on:click=effect(10) _v-2612bd2f=\\\"\\\"> <img src=/media/previews/pixelate.thumbnail _v-2612bd2f=\\\"\\\"> </span> </div> </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-2612bd2f!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Dashboard.vue\n ** module id = 13\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./App.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./App.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/App.vue\n ** module id = 14\n ** module chunks = 0\n **/","/*!\n * vue-resource v0.7.4\n * https://github.com/vuejs/vue-resource\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\n\n/**\n * Utility functions.\n */\n\nvar util = {};\nvar config = {};\nvar array = [];\nvar console = window.console;\nfunction Util (Vue) {\n    util = Vue.util;\n    config = Vue.config;\n}\n\nvar isArray = Array.isArray;\n\nfunction warn(msg) {\n    if (console && util.warn && (!config.silent || config.debug)) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n}\n\nfunction error(msg) {\n    if (console) {\n        console.error(msg);\n    }\n}\n\nfunction nextTick(cb, ctx) {\n    return util.nextTick(cb, ctx);\n}\n\nfunction trim(str) {\n    return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nfunction toLower(str) {\n    return str ? str.toLowerCase() : '';\n}\n\nfunction isString(val) {\n    return typeof val === 'string';\n}\n\nfunction isFunction(val) {\n    return typeof val === 'function';\n}\n\nfunction isObject(obj) {\n    return obj !== null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n}\n\nfunction isPlainObject(obj) {\n    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n}\n\nfunction options(fn, obj, opts) {\n\n    opts = opts || {};\n\n    if (isFunction(opts)) {\n        opts = opts.call(obj);\n    }\n\n    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });\n}\n\nfunction each(obj, iterator) {\n\n    var i, key;\n\n    if (typeof obj.length == 'number') {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (isObject(obj)) {\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n}\n\nfunction extend(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (arg) {\n        _merge(target, arg);\n    });\n\n    return target;\n}\n\nfunction merge(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (arg) {\n        _merge(target, arg, true);\n    });\n\n    return target;\n}\n\nfunction _merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (isArray(source[key]) && !isArray(target[key])) {\n                target[key] = [];\n            }\n            _merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\nfunction root (options, next) {\n\n    var url = next(options);\n\n    if (isString(options.root) && !url.match(/^(https?:)?\\//)) {\n        url = options.root + '/' + url;\n    }\n\n    return url;\n}\n\nfunction query (options, next) {\n\n    var urlParams = Object.keys(Url.options.params),\n        query = {},\n        url = next(options);\n\n    each(options.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = Url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n}\n\nfunction legacy (options, next) {\n\n    var variables = [],\n        url = next(options);\n\n    url = url.replace(/(\\/?):([a-z]\\w*)/gi, function (match, slash, name) {\n\n        warn('The `:' + name + '` parameter syntax has been deprecated. Use the `{' + name + '}` syntax instead.');\n\n        if (options.params[name]) {\n            variables.push(name);\n            return slash + encodeUriSegment(options.params[name]);\n        }\n\n        return '';\n    });\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n}\n\nfunction encodeUriSegment(value) {\n\n    return encodeUriQuery(value, true).replace(/%26/gi, '&').replace(/%3D/gi, '=').replace(/%2B/gi, '+');\n}\n\nfunction encodeUriQuery(value, spaces) {\n\n    return encodeURIComponent(value).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, spaces ? '%20' : '+');\n}\n\n/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nfunction expand(url, params, variables) {\n\n    var tmpl = parse(url),\n        expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n}\n\nfunction parse(template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n        variables = [];\n\n    return {\n        vars: variables,\n        expand: function expand(context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null,\n                        values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n                } else {\n                    return encodeReserved(literal);\n                }\n            });\n        }\n    };\n}\n\nfunction getValues(context, operator, key, modifier) {\n\n    var value = context[key],\n        result = [];\n\n    if (isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            result.push(encodeValue(operator, value[k], k));\n                        }\n                    });\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        tmp.push(encodeValue(operator, value));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(encodeValue(operator, value[k].toString()));\n                        }\n                    });\n                }\n\n                if (isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n}\n\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n}\n\nfunction encodeValue(operator, value, key) {\n\n    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n}\n\nfunction encodeReserved(str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n}\n\nfunction template (options) {\n\n    var variables = [],\n        url = expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n}\n\n/**\n * Service for URL templating.\n */\n\nvar ie = document.documentMode;\nvar el = document.createElement('a');\n\nfunction Url(url, params) {\n\n    var self = this || {},\n        options = url,\n        transform;\n\n    if (isString(url)) {\n        options = { url: url, params: params };\n    }\n\n    options = merge({}, Url.options, self.$options, options);\n\n    Url.transforms.forEach(function (handler) {\n        transform = factory(handler, transform, self.$vm);\n    });\n\n    return transform(options);\n}\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transforms = [template, legacy, query, root];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [],\n        escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    if (ie) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options) {\n        return handler.call(vm, options, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = isArray(obj),\n        plain = isPlainObject(obj),\n        hash;\n\n    each(obj, function (value, key) {\n\n        hash = isObject(value) || isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\n/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING = 2;\n\nfunction Promise$2(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise$2.reject = function (r) {\n    return new Promise$2(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise$2.resolve = function (x) {\n    return new Promise$2(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise$2.all = function all(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        var count = 0,\n            result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise$2.race = function race(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p$1 = Promise$2.prototype;\n\np$1.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np$1.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np$1.notify = function notify() {\n    var promise = this;\n\n    nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np$1.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise$2(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np$1.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\nvar PromiseObj = window.Promise || Promise$2;\n\nfunction Promise$1(executor, context) {\n\n    if (executor instanceof PromiseObj) {\n        this.promise = executor;\n    } else {\n        this.promise = new PromiseObj(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromise$1.all = function (iterable, context) {\n    return new Promise$1(PromiseObj.all(iterable), context);\n};\n\nPromise$1.resolve = function (value, context) {\n    return new Promise$1(PromiseObj.resolve(value), context);\n};\n\nPromise$1.reject = function (reason, context) {\n    return new Promise$1(PromiseObj.reject(reason), context);\n};\n\nPromise$1.race = function (iterable, context) {\n    return new Promise$1(PromiseObj.race(iterable), context);\n};\n\nvar p = Promise$1.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    this.promise = this.promise.then(fulfilled, rejected);\n\n    return this;\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    this.promise = this.promise.catch(rejected);\n\n    return this;\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n        callback.call(this);\n        return value;\n    }, function (reason) {\n        callback.call(this);\n        return PromiseObj.reject(reason);\n    });\n};\n\np.success = function (callback) {\n\n    warn('The `success` method has been deprecated. Use the `then` method instead.');\n\n    return this.then(function (response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    });\n};\n\np.error = function (callback) {\n\n    warn('The `error` method has been deprecated. Use the `catch` method instead.');\n\n    return this.catch(function (response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    });\n};\n\np.always = function (callback) {\n\n    warn('The `always` method has been deprecated. Use the `finally` method instead.');\n\n    var cb = function cb(response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    };\n\n    return this.then(cb, cb);\n};\n\nfunction xdrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xdr = new XDomainRequest(),\n            response = { request: request },\n            handler;\n\n        request.cancel = function () {\n            xdr.abort();\n        };\n\n        xdr.open(request.method, Url(request), true);\n\n        handler = function handler(event) {\n\n            response.data = xdr.responseText;\n            response.status = xdr.status;\n            response.statusText = xdr.statusText || '';\n\n            resolve(response);\n        };\n\n        xdr.timeout = 0;\n        xdr.onload = handler;\n        xdr.onabort = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = function () {};\n        xdr.onprogress = function () {};\n\n        xdr.send(request.data);\n    });\n}\n\nvar originUrl = Url.parse(location.href);\nvar supportCors = 'withCredentials' in new XMLHttpRequest();\n\nvar exports$1 = {\n    request: function request(_request) {\n\n        if (_request.crossOrigin === null) {\n            _request.crossOrigin = crossOrigin(_request);\n        }\n\n        if (_request.crossOrigin) {\n\n            if (!supportCors) {\n                _request.client = xdrClient;\n            }\n\n            _request.emulateHTTP = false;\n        }\n\n        return _request;\n    }\n};\n\nfunction crossOrigin(request) {\n\n    var requestUrl = Url.parse(Url(request));\n\n    return requestUrl.protocol !== originUrl.protocol || requestUrl.host !== originUrl.host;\n}\n\nvar exports$2 = {\n    request: function request(_request) {\n\n        if (_request.emulateJSON && isPlainObject(_request.data)) {\n            _request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n            _request.data = Url.params(_request.data);\n        }\n\n        if (isObject(_request.data) && /FormData/i.test(_request.data.toString())) {\n            delete _request.headers['Content-Type'];\n        }\n\n        if (isPlainObject(_request.data)) {\n            _request.data = JSON.stringify(_request.data);\n        }\n\n        return _request;\n    },\n    response: function response(_response) {\n\n        try {\n            _response.data = JSON.parse(_response.data);\n        } catch (e) {}\n\n        return _response;\n    }\n};\n\nfunction jsonpClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var callback = '_jsonp' + Math.random().toString(36).substr(2),\n            response = { request: request, data: null },\n            handler,\n            script;\n\n        request.params[request.jsonp] = callback;\n        request.cancel = function () {\n            handler({ type: 'cancel' });\n        };\n\n        script = document.createElement('script');\n        script.src = Url(request);\n        script.type = 'text/javascript';\n        script.async = true;\n\n        window[callback] = function (data) {\n            response.data = data;\n        };\n\n        handler = function handler(event) {\n\n            if (event.type === 'load' && response.data !== null) {\n                response.status = 200;\n            } else if (event.type === 'error') {\n                response.status = 404;\n            } else {\n                response.status = 0;\n            }\n\n            resolve(response);\n\n            delete window[callback];\n            document.body.removeChild(script);\n        };\n\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n}\n\nvar exports$3 = {\n    request: function request(_request) {\n\n        if (_request.method == 'JSONP') {\n            _request.client = jsonpClient;\n        }\n\n        return _request;\n    }\n};\n\nvar exports$4 = {\n    request: function request(_request) {\n\n        if (isFunction(_request.beforeSend)) {\n            _request.beforeSend.call(this, _request);\n        }\n\n        return _request;\n    }\n};\n\n/**\n * HTTP method override Interceptor.\n */\n\nvar exports$5 = {\n    request: function request(_request) {\n\n        if (_request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(_request.method)) {\n            _request.headers['X-HTTP-Method-Override'] = _request.method;\n            _request.method = 'POST';\n        }\n\n        return _request;\n    }\n};\n\nvar exports$6 = {\n    request: function request(_request) {\n\n        _request.method = _request.method.toUpperCase();\n        _request.headers = extend({}, Http.headers.common, !_request.crossOrigin ? Http.headers.custom : {}, Http.headers[_request.method.toLowerCase()], _request.headers);\n\n        if (isPlainObject(_request.data) && /^(GET|JSONP)$/i.test(_request.method)) {\n            extend(_request.params, _request.data);\n            delete _request.data;\n        }\n\n        return _request;\n    }\n};\n\n/**\n * Timeout Interceptor.\n */\n\nvar exports$7 = function exports() {\n\n    var timeout;\n\n    return {\n        request: function request(_request) {\n\n            if (_request.timeout) {\n                timeout = setTimeout(function () {\n                    _request.cancel();\n                }, _request.timeout);\n            }\n\n            return _request;\n        },\n        response: function response(_response) {\n\n            clearTimeout(timeout);\n\n            return _response;\n        }\n    };\n};\n\nfunction interceptor (handler, vm) {\n\n    return function (client) {\n\n        if (isFunction(handler)) {\n            handler = handler.call(vm, Promise$1);\n        }\n\n        return function (request) {\n\n            if (isFunction(handler.request)) {\n                request = handler.request.call(vm, request);\n            }\n\n            return when(request, function (request) {\n                return when(client(request), function (response) {\n\n                    if (isFunction(handler.response)) {\n                        response = handler.response.call(vm, response);\n                    }\n\n                    return response;\n                });\n            });\n        };\n    };\n}\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = Promise$1.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\nfunction xhrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xhr = new XMLHttpRequest(),\n            response = { request: request },\n            handler;\n\n        request.cancel = function () {\n            xhr.abort();\n        };\n\n        xhr.open(request.method, Url(request), true);\n\n        handler = function handler(event) {\n\n            response.data = 'response' in xhr ? xhr.response : xhr.responseText;\n            response.status = xhr.status === 1223 ? 204 : xhr.status; // IE9 status bug\n            response.statusText = trim(xhr.statusText || '');\n            response.headers = xhr.getAllResponseHeaders();\n\n            resolve(response);\n        };\n\n        xhr.timeout = 0;\n        xhr.onload = handler;\n        xhr.onabort = handler;\n        xhr.onerror = handler;\n        xhr.ontimeout = function () {};\n        xhr.onprogress = function () {};\n\n        if (isPlainObject(request.xhr)) {\n            extend(xhr, request.xhr);\n        }\n\n        if (isPlainObject(request.upload)) {\n            extend(xhr.upload, request.upload);\n        }\n\n        each(request.headers || {}, function (value, header) {\n            xhr.setRequestHeader(header, value);\n        });\n\n        xhr.send(request.data);\n    });\n}\n\nfunction Client (request) {\n\n    var response = (request.client || xhrClient)(request);\n\n    return Promise$1.resolve(response).then(function (response) {\n\n        if (response.headers) {\n\n            var headers = parseHeaders(response.headers);\n\n            response.headers = function (name) {\n\n                if (name) {\n                    return headers[toLower(name)];\n                }\n\n                return headers;\n            };\n        }\n\n        response.ok = response.status >= 200 && response.status < 300;\n\n        return response;\n    });\n}\n\nfunction parseHeaders(str) {\n\n    var headers = {},\n        value,\n        name,\n        i;\n\n    if (isString(str)) {\n        each(str.split('\\n'), function (row) {\n\n            i = row.indexOf(':');\n            name = trim(toLower(row.slice(0, i)));\n            value = trim(row.slice(i + 1));\n\n            if (headers[name]) {\n\n                if (isArray(headers[name])) {\n                    headers[name].push(value);\n                } else {\n                    headers[name] = [headers[name], value];\n                }\n            } else {\n\n                headers[name] = value;\n            }\n        });\n    }\n\n    return headers;\n}\n\n/**\n * Service for sending network requests.\n */\n\nvar jsonType = { 'Content-Type': 'application/json' };\n\nfunction Http(url, options) {\n\n    var self = this || {},\n        client = Client,\n        request,\n        promise;\n\n    Http.interceptors.forEach(function (handler) {\n        client = interceptor(handler, self.$vm)(client);\n    });\n\n    options = isObject(url) ? url : extend({ url: url }, options);\n    request = merge({}, Http.options, self.$options, options);\n    promise = client(request).bind(self.$vm).then(function (response) {\n\n        return response.ok ? response : Promise$1.reject(response);\n    }, function (response) {\n\n        if (response instanceof Error) {\n            error(response);\n        }\n\n        return Promise$1.reject(response);\n    });\n\n    if (request.success) {\n        promise.success(request.success);\n    }\n\n    if (request.error) {\n        promise.error(request.error);\n    }\n\n    return promise;\n}\n\nHttp.options = {\n    method: 'get',\n    data: '',\n    params: {},\n    headers: {},\n    xhr: null,\n    upload: null,\n    jsonp: 'callback',\n    beforeSend: null,\n    crossOrigin: null,\n    emulateHTTP: false,\n    emulateJSON: false,\n    timeout: 0\n};\n\nHttp.headers = {\n    put: jsonType,\n    post: jsonType,\n    patch: jsonType,\n    delete: jsonType,\n    common: { 'Accept': 'application/json, text/plain, */*' },\n    custom: { 'X-Requested-With': 'XMLHttpRequest' }\n};\n\nHttp.interceptors = [exports$4, exports$7, exports$3, exports$5, exports$2, exports$6, exports$1];\n\n['get', 'put', 'post', 'patch', 'delete', 'jsonp'].forEach(function (method) {\n\n    Http[method] = function (url, data, success, options) {\n\n        if (isFunction(data)) {\n            options = success;\n            success = data;\n            data = undefined;\n        }\n\n        if (isObject(success)) {\n            options = success;\n            success = undefined;\n        }\n\n        return this(url, extend({ method: method, data: data, success: success }, options));\n    };\n});\n\nfunction Resource(url, params, actions, options) {\n\n    var self = this || {},\n        resource = {};\n\n    actions = extend({}, Resource.actions, actions);\n\n    each(actions, function (action, name) {\n\n        action = merge({ url: url, params: params || {} }, options, action);\n\n        resource[name] = function () {\n            return (self.$http || Http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options = extend({}, action),\n        params = {},\n        data,\n        success,\n        error;\n\n    switch (args.length) {\n\n        case 4:\n\n            error = args[3];\n            success = args[2];\n\n        case 3:\n        case 2:\n\n            if (isFunction(args[1])) {\n\n                if (isFunction(args[0])) {\n\n                    success = args[0];\n                    error = args[1];\n\n                    break;\n                }\n\n                success = args[1];\n                error = args[2];\n            } else {\n\n                params = args[0];\n                data = args[1];\n                success = args[2];\n\n                break;\n            }\n\n        case 1:\n\n            if (isFunction(args[0])) {\n                success = args[0];\n            } else if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n                data = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 4 arguments [params, data, success, error], got ' + args.length + ' arguments';\n    }\n\n    options.data = data;\n    options.params = extend({}, options.params, params);\n\n    if (success) {\n        options.success = success;\n    }\n\n    if (error) {\n        options.error = error;\n    }\n\n    return options;\n}\n\nResource.actions = {\n\n    get: { method: 'GET' },\n    save: { method: 'POST' },\n    query: { method: 'GET' },\n    update: { method: 'PUT' },\n    remove: { method: 'DELETE' },\n    delete: { method: 'DELETE' }\n\n};\n\nfunction plugin(Vue) {\n\n    if (plugin.installed) {\n        return;\n    }\n\n    Util(Vue);\n\n    Vue.url = Url;\n    Vue.http = Http;\n    Vue.resource = Resource;\n    Vue.Promise = Promise$1;\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function get() {\n                return options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function get() {\n                return options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function get() {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function get() {\n                var _this = this;\n\n                return function (executor) {\n                    return new Vue.Promise(executor, _this);\n                };\n            }\n        }\n\n    });\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(plugin);\n}\n\nmodule.exports = plugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/dist/vue-resource.common.js\n ** module id = 15\n ** module chunks = 0\n **/","/*!\n * Vuex v0.6.3\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Vuex = factory());\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n  babelHelpers.typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n  };\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  babelHelpers.createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  babelHelpers.toConsumableArray = function (arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  };\n\n  babelHelpers;\n\n  /**\n   * Merge an array of objects into one.\n   *\n   * @param {Array<Object>} arr\n   * @return {Object}\n   */\n\n  function mergeObjects(arr) {\n    return arr.reduce(function (prev, obj) {\n      Object.keys(obj).forEach(function (key) {\n        var existing = prev[key];\n        if (existing) {\n          // allow multiple mutation objects to contain duplicate\n          // handlers for the same mutation type\n          if (Array.isArray(existing)) {\n            existing.push(obj[key]);\n          } else {\n            prev[key] = [prev[key], obj[key]];\n          }\n        } else {\n          prev[key] = obj[key];\n        }\n      });\n      return prev;\n    }, {});\n  }\n\n  /**\n   * Deep clone an object. Faster than JSON.parse(JSON.stringify()).\n   *\n   * @param {*} obj\n   * @return {*}\n   */\n\n  function deepClone(obj) {\n    if (Array.isArray(obj)) {\n      return obj.map(deepClone);\n    } else if (obj && (typeof obj === 'undefined' ? 'undefined' : babelHelpers.typeof(obj)) === 'object') {\n      var cloned = {};\n      var keys = Object.keys(obj);\n      for (var i = 0, l = keys.length; i < l; i++) {\n        var key = keys[i];\n        cloned[key] = deepClone(obj[key]);\n      }\n      return cloned;\n    } else {\n      return obj;\n    }\n  }\n\n  /**\n   * Hacks to get access to Vue internals.\n   * Maybe we should expose these...\n   */\n\n  var Watcher = void 0;\n  function getWatcher(vm) {\n    if (!Watcher) {\n      var unwatch = vm.$watch('__vuex__', function (a) {\n        return a;\n      });\n      Watcher = vm._watchers[0].constructor;\n      unwatch();\n    }\n    return Watcher;\n  }\n\n  var Dep = void 0;\n  function getDep(vm) {\n    if (!Dep) {\n      Dep = vm._data.__ob__.dep.constructor;\n    }\n    return Dep;\n  }\n\n  var hook = typeof window !== 'undefined' && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n  var devtoolMiddleware = {\n    onInit: function onInit(state, store) {\n      if (!hook) return;\n      hook.emit('vuex:init', store);\n      hook.on('vuex:travel-to-state', function (targetState) {\n        var currentState = store._vm._data;\n        store._dispatching = true;\n        Object.keys(targetState).forEach(function (key) {\n          currentState[key] = targetState[key];\n        });\n        store._dispatching = false;\n      });\n    },\n    onMutation: function onMutation(mutation, state) {\n      if (!hook) return;\n      hook.emit('vuex:mutation', mutation, state);\n    }\n  };\n\n  function override (Vue) {\n    // override init and inject vuex init procedure\n    var _init = Vue.prototype._init;\n    Vue.prototype._init = function () {\n      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      options.init = options.init ? [vuexInit].concat(options.init) : vuexInit;\n      _init.call(this, options);\n    };\n\n    /**\n     * Vuex init hook, injected into each instances init hooks list.\n     */\n\n    function vuexInit() {\n      var options = this.$options;\n      var store = options.store;\n      var vuex = options.vuex;\n      // store injection\n\n      if (store) {\n        this.$store = store;\n      } else if (options.parent && options.parent.$store) {\n        this.$store = options.parent.$store;\n      }\n      // vuex option handling\n      if (vuex) {\n        if (!this.$store) {\n          console.warn('[vuex] store not injected. make sure to ' + 'provide the store option in your root component.');\n        }\n        var state = vuex.state;\n        var getters = vuex.getters;\n        var actions = vuex.actions;\n        // handle deprecated state option\n\n        if (state && !getters) {\n          console.warn('[vuex] vuex.state option will been deprecated in 1.0. ' + 'Use vuex.getters instead.');\n          getters = state;\n        }\n        // getters\n        if (getters) {\n          options.computed = options.computed || {};\n          for (var key in getters) {\n            defineVuexGetter(this, key, getters[key]);\n          }\n        }\n        // actions\n        if (actions) {\n          options.methods = options.methods || {};\n          for (var _key in actions) {\n            options.methods[_key] = makeBoundAction(this.$store, actions[_key], _key);\n          }\n        }\n      }\n    }\n\n    /**\n     * Setter for all getter properties.\n     */\n\n    function setter() {\n      throw new Error('vuex getter properties are read-only.');\n    }\n\n    /**\n     * Define a Vuex getter on an instance.\n     *\n     * @param {Vue} vm\n     * @param {String} key\n     * @param {Function} getter\n     */\n\n    function defineVuexGetter(vm, key, getter) {\n      if (typeof getter !== 'function') {\n        console.warn('[vuex] Getter bound to key \\'vuex.getters.' + key + '\\' is not a function.');\n      } else {\n        Object.defineProperty(vm, key, {\n          enumerable: true,\n          configurable: true,\n          get: makeComputedGetter(vm.$store, getter),\n          set: setter\n        });\n      }\n    }\n\n    /**\n     * Make a computed getter, using the same caching mechanism of computed\n     * properties. In addition, it is cached on the raw getter function using\n     * the store's unique cache id. This makes the same getter shared\n     * across all components use the same underlying watcher, and makes\n     * the getter evaluated only once during every flush.\n     *\n     * @param {Store} store\n     * @param {Function} getter\n     */\n\n    function makeComputedGetter(store, getter) {\n      var id = store._getterCacheId;\n\n      // cached\n      if (getter[id]) {\n        return getter[id];\n      }\n      var vm = store._vm;\n      var Watcher = getWatcher(vm);\n      var Dep = getDep(vm);\n      var watcher = new Watcher(vm, function (state) {\n        return getter(state);\n      }, null, { lazy: true });\n      var computedGetter = function computedGetter() {\n        if (watcher.dirty) {\n          watcher.evaluate();\n        }\n        if (Dep.target) {\n          watcher.depend();\n        }\n        return watcher.value;\n      };\n      getter[id] = computedGetter;\n      return computedGetter;\n    }\n\n    /**\n     * Make a bound-to-store version of a raw action function.\n     *\n     * @param {Store} store\n     * @param {Function} action\n     * @param {String} key\n     */\n\n    function makeBoundAction(store, action, key) {\n      if (typeof action !== 'function') {\n        console.warn('[vuex] Action bound to key \\'vuex.actions.' + key + '\\' is not a function.');\n      }\n      return function vuexBoundAction() {\n        for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        return action.call.apply(action, [this, store].concat(args));\n      };\n    }\n\n    // option merging\n    var merge = Vue.config.optionMergeStrategies.computed;\n    Vue.config.optionMergeStrategies.vuex = function (toVal, fromVal) {\n      if (!toVal) return fromVal;\n      if (!fromVal) return toVal;\n      return {\n        getters: merge(toVal.getters, fromVal.getters),\n        state: merge(toVal.state, fromVal.state),\n        actions: merge(toVal.actions, fromVal.actions)\n      };\n    };\n  }\n\n  var Vue = void 0;\n  var uid = 0;\n\n  var Store = function () {\n\n    /**\n     * @param {Object} options\n     *        - {Object} state\n     *        - {Object} actions\n     *        - {Object} mutations\n     *        - {Array} middlewares\n     *        - {Boolean} strict\n     */\n\n    function Store() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$state = _ref.state;\n      var state = _ref$state === undefined ? {} : _ref$state;\n      var _ref$mutations = _ref.mutations;\n      var mutations = _ref$mutations === undefined ? {} : _ref$mutations;\n      var _ref$modules = _ref.modules;\n      var modules = _ref$modules === undefined ? {} : _ref$modules;\n      var _ref$middlewares = _ref.middlewares;\n      var middlewares = _ref$middlewares === undefined ? [] : _ref$middlewares;\n      var _ref$strict = _ref.strict;\n      var strict = _ref$strict === undefined ? false : _ref$strict;\n      babelHelpers.classCallCheck(this, Store);\n\n      this._getterCacheId = 'vuex_store_' + uid++;\n      this._dispatching = false;\n      this._rootMutations = this._mutations = mutations;\n      this._modules = modules;\n      // bind dispatch to self\n      var dispatch = this.dispatch;\n      this.dispatch = function () {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        dispatch.apply(_this, args);\n      };\n      // use a Vue instance to store the state tree\n      // suppress warnings just in case the user has added\n      // some funky global mixins\n      if (!Vue) {\n        throw new Error('[vuex] must call Vue.use(Vuex) before creating a store instance.');\n      }\n      var silent = Vue.config.silent;\n      Vue.config.silent = true;\n      this._vm = new Vue({\n        data: state\n      });\n      Vue.config.silent = silent;\n      this._setupModuleState(state, modules);\n      this._setupModuleMutations(modules);\n      this._setupMiddlewares(middlewares, state);\n      // add extra warnings in strict mode\n      if (strict) {\n        this._setupMutationCheck();\n      }\n    }\n\n    /**\n     * Getter for the entire state tree.\n     * Read only.\n     *\n     * @return {Object}\n     */\n\n    babelHelpers.createClass(Store, [{\n      key: 'dispatch',\n\n\n      /**\n       * Dispatch an action.\n       *\n       * @param {String} type\n       */\n\n      value: function dispatch(type) {\n        for (var _len2 = arguments.length, payload = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          payload[_key2 - 1] = arguments[_key2];\n        }\n\n        var silent = false;\n        // compatibility for object actions, e.g. FSA\n        if ((typeof type === 'undefined' ? 'undefined' : babelHelpers.typeof(type)) === 'object' && type.type && arguments.length === 1) {\n          payload = [type.payload];\n          if (type.silent) silent = true;\n          type = type.type;\n        }\n        var mutation = this._mutations[type];\n        var state = this.state;\n        if (mutation) {\n          this._dispatching = true;\n          // apply the mutation\n          if (Array.isArray(mutation)) {\n            mutation.forEach(function (m) {\n              return m.apply(undefined, [state].concat(babelHelpers.toConsumableArray(payload)));\n            });\n          } else {\n            mutation.apply(undefined, [state].concat(babelHelpers.toConsumableArray(payload)));\n          }\n          this._dispatching = false;\n          if (!silent) this._applyMiddlewares(type, payload);\n        } else {\n          console.warn('[vuex] Unknown mutation: ' + type);\n        }\n      }\n\n      /**\n       * Watch state changes on the store.\n       * Same API as Vue's $watch, except when watching a function,\n       * the function gets the state as the first argument.\n       *\n       * @param {String|Function} expOrFn\n       * @param {Function} cb\n       * @param {Object} [options]\n       */\n\n    }, {\n      key: 'watch',\n      value: function watch(expOrFn, cb, options) {\n        var _this2 = this;\n\n        return this._vm.$watch(function () {\n          return typeof expOrFn === 'function' ? expOrFn(_this2.state) : _this2._vm.$get(expOrFn);\n        }, cb, options);\n      }\n\n      /**\n       * Hot update mutations & modules.\n       *\n       * @param {Object} options\n       *        - {Object} [mutations]\n       *        - {Object} [modules]\n       */\n\n    }, {\n      key: 'hotUpdate',\n      value: function hotUpdate() {\n        var _ref2 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n        var mutations = _ref2.mutations;\n        var modules = _ref2.modules;\n\n        this._rootMutations = this._mutations = mutations || this._rootMutations;\n        this._setupModuleMutations(modules || this._modules);\n      }\n\n      /**\n       * Attach sub state tree of each module to the root tree.\n       *\n       * @param {Object} state\n       * @param {Object} modules\n       */\n\n    }, {\n      key: '_setupModuleState',\n      value: function _setupModuleState(state, modules) {\n        Object.keys(modules).forEach(function (key) {\n          Vue.set(state, key, modules[key].state || {});\n        });\n      }\n\n      /**\n       * Bind mutations for each module to its sub tree and\n       * merge them all into one final mutations map.\n       *\n       * @param {Object} updatedModules\n       */\n\n    }, {\n      key: '_setupModuleMutations',\n      value: function _setupModuleMutations(updatedModules) {\n        var modules = this._modules;\n        var allMutations = [this._rootMutations];\n        Object.keys(updatedModules).forEach(function (key) {\n          modules[key] = updatedModules[key];\n        });\n        Object.keys(modules).forEach(function (key) {\n          var module = modules[key];\n          if (!module || !module.mutations) return;\n          // bind mutations to sub state tree\n          var mutations = {};\n          Object.keys(module.mutations).forEach(function (name) {\n            var original = module.mutations[name];\n            mutations[name] = function (state) {\n              for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n                args[_key3 - 1] = arguments[_key3];\n              }\n\n              original.apply(undefined, [state[key]].concat(args));\n            };\n          });\n          allMutations.push(mutations);\n        });\n        this._mutations = mergeObjects(allMutations);\n      }\n\n      /**\n       * Setup mutation check: if the vuex instance's state is mutated\n       * outside of a mutation handler, we throw en error. This effectively\n       * enforces all mutations to the state to be trackable and hot-reloadble.\n       * However, this comes at a run time cost since we are doing a deep\n       * watch on the entire state tree, so it is only enalbed with the\n       * strict option is set to true.\n       */\n\n    }, {\n      key: '_setupMutationCheck',\n      value: function _setupMutationCheck() {\n        var _this3 = this;\n\n        var Watcher = getWatcher(this._vm);\n        /* eslint-disable no-new */\n        new Watcher(this._vm, '$data', function () {\n          if (!_this3._dispatching) {\n            throw new Error('[vuex] Do not mutate vuex store state outside mutation handlers.');\n          }\n        }, { deep: true, sync: true });\n        /* eslint-enable no-new */\n      }\n\n      /**\n       * Setup the middlewares. The devtools middleware is always\n       * included, since it does nothing if no devtool is detected.\n       *\n       * A middleware can demand the state it receives to be\n       * \"snapshots\", i.e. deep clones of the actual state tree.\n       *\n       * @param {Array} middlewares\n       * @param {Object} state\n       */\n\n    }, {\n      key: '_setupMiddlewares',\n      value: function _setupMiddlewares(middlewares, state) {\n        var _this4 = this;\n\n        this._middlewares = [devtoolMiddleware].concat(middlewares);\n        this._needSnapshots = middlewares.some(function (m) {\n          return m.snapshot;\n        });\n        if (this._needSnapshots) {\n          console.log('[vuex] One or more of your middlewares are taking state snapshots ' + 'for each mutation. Make sure to use them only during development.');\n        }\n        var initialSnapshot = this._prevSnapshot = this._needSnapshots ? deepClone(state) : null;\n        // call init hooks\n        this._middlewares.forEach(function (m) {\n          if (m.onInit) {\n            m.onInit(m.snapshot ? initialSnapshot : state, _this4);\n          }\n        });\n      }\n\n      /**\n       * Apply the middlewares on a given mutation.\n       *\n       * @param {String} type\n       * @param {Array} payload\n       */\n\n    }, {\n      key: '_applyMiddlewares',\n      value: function _applyMiddlewares(type, payload) {\n        var _this5 = this;\n\n        var state = this.state;\n        var prevSnapshot = this._prevSnapshot;\n        var snapshot = void 0,\n            clonedPayload = void 0;\n        if (this._needSnapshots) {\n          snapshot = this._prevSnapshot = deepClone(state);\n          clonedPayload = deepClone(payload);\n        }\n        this._middlewares.forEach(function (m) {\n          if (m.onMutation) {\n            if (m.snapshot) {\n              m.onMutation({ type: type, payload: clonedPayload }, snapshot, prevSnapshot, _this5);\n            } else {\n              m.onMutation({ type: type, payload: payload }, state, _this5);\n            }\n          }\n        });\n      }\n    }, {\n      key: 'state',\n      get: function get() {\n        return this._vm._data;\n      },\n      set: function set(v) {\n        throw new Error('[vuex] Vuex root state is read only.');\n      }\n    }]);\n    return Store;\n  }();\n\n  function install(_Vue) {\n    if (Vue) {\n      console.warn('[vuex] already installed. Vue.use(Vuex) should be called only once.');\n      return;\n    }\n    Vue = _Vue;\n    override(Vue);\n  }\n\n  // auto install in dist mode\n  if (typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n  }\n\n  function createLogger() {\n    console.warn('[vuex] Vuex.createLogger has been deprecated.' + 'Use `import createLogger from \\'vuex/logger\\' instead.');\n  }\n\n  var index = {\n    Store: Store,\n    install: install,\n    createLogger: createLogger\n  };\n\n  return index;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vuex/dist/vuex.js\n ** module id = 16\n ** module chunks = 0\n **/"],"sourceRoot":""}