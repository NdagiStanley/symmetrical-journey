{"version":3,"sources":["webpack:////app.1231d8367f30865b8ba6.js","webpack:///webpack/bootstrap bfca9dce98a26aa3a7fe","webpack:///./src/main.js","webpack:///Home.vue","webpack:///./src/App.vue?d818","webpack:///./src/components/Share.vue?9cf3","webpack:///./src/components/Home.vue?7aed","webpack:///./src/components/Dashboard.vue?90f4","webpack:///./src/App.vue","webpack:///./src/components/Dashboard.vue","webpack:///./src/components/Home.vue","webpack:///./src/components/Share.vue","webpack:///./~/vue-resource/dist/vue-resource.common.js","webpack:///./~/vue-router/dist/vue-router.js","webpack:///./~/vue/dist/vue.common.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_vueRouter","_vueRouter2","_vueResource","_vueResource2","_App","_App2","_Home","_Home2","_Dashboard","_Dashboard2","_Share","_Share2","config","delimiters","debug","use","router","map","/","component","/dashboard","/share","redirect","*","start","Object","defineProperty","value","ready","this","$http","get","then","response","$set","data","console","log","length","methods","onSubmitForm","e","preventDefault","input","newInput","post","__vue_script__","__vue_template__","options","template","plugin","Vue","installed","_","warning","util","warn","nextTick","url","http","resource","Promise","defineProperties","prototype","$url","$options","$resource","bind","$promise","_this","executor","window","merge","target","source","deep","key","isPlainObject","isArray","undefined","_typeof","Symbol","iterator","constructor","array","msg","silent","error","trim","str","replace","toLower","toLowerCase","Array","isString","val","isFunction","isObject","getPrototypeOf","fn","$vm","each","i","hasOwnProperty","defaults","extend","args","slice","arguments","forEach","arg","Url","params","transform","transforms","handler","factory","next","vm","serialize","scope","hash","plain","add","name","ie","document","documentMode","el","createElement","root","escape","encodeURIComponent","push","join","parse","href","protocol","port","host","hostname","pathname","charAt","search","UrlTemplate","variables","expand","tmpl","expanded","apply","vars","operators","context","expression","literal","operator","values","indexOf","substr","split","variable","tmp","exec","getValues","separator","encodeReserved","modifier","result","isDefined","toString","substring","parseInt","encodeValue","isKeyOperator","filter","keys","k","part","test","encodeURI","encodeUriSegment","encodeUriQuery","spaces","match","slash","urlParams","query","Http","request","promise","client","Client","interceptors","interceptor","ok","reject","Error","success","jsonType","Content-Type","method","headers","xhr","upload","jsonp","beforeSend","crossOrigin","emulateHTTP","emulateJSON","timeout","put","patch","delete","common","Accept","custom","X-Requested-With","parseHeaders","row","xhrClient","resolve","status","PromiseObj","all","iterable","reason","race","fulfilled","rejected","callback","always","cb","state","PENDING","deferred","x","r","RESOLVED","REJECTED","resolver","count","TypeError","called","notify","shift","onResolved","onRejected","XMLHttpRequest","cancel","abort","open","event","responseText","statusText","getAllResponseHeaders","onload","onabort","onerror","ontimeout","onprogress","header","setRequestHeader","send","when","_request","setTimeout","_response","clearTimeout","jsonpClient","script","Math","random","type","src","async","body","removeChild","appendChild","JSON","stringify","toUpperCase","requestUrl","originUrl","xdrClient","xhrCors","location","xdr","XDomainRequest","Resource","actions","self","action","opts","save","update","remove","global","Target","path","matcher","delegate","Matcher","routes","children","generateMatch","startingPath","nestedCallback","fullPath","addRoute","routeArray","len","l","route","eachRoute","baseRoute","binding","addRouteCallback","noWarning","tryDecode","uri","asComponent","decodeURIComponent","decodeURI","StaticSegment","string","DynamicSegment","StarSegment","EpsilonSegment","names","specificity","segments","results","segment","State","charSpec","nextStates","sortSolutions","states","sort","a","b","recognizeChar","ch","concat","RecognizeResults","queryParams","findHandler","handlers","regex","captures","currentCapture","j","isDynamic","addSegment","currentState","eachChar","decodeQueryParamPart","warn$1","resolvePath","base","relative","append","stack","pop","unshift","isPromise","getRouteConfig","resolveAsyncComponent","components","exports$1","_resolveComponent","Component","mapParams","genQuery","canReuse","view","transition","childVM","canReuseFn","to","from","canDeactivate","fromComponent","hook","callHook","expectBoolean","canActivate","aborted","deactivate","callHooks","activate","depth","reuse","activateQueue","saveChildView","_bound","setComponent","activateHook","dataHook","waitForData","activated","loading","$loadingRouteData","unbuild","build","_meta","created","_routerView","keepAlive","cachedChildView","_keepAliveRouterView","childView","cleanup","$destroy","insert","_rendered","_transitionOnLoad","setCurrent","$before","anchor","afterData","afterActivate","loadData","postActivate","$emit","processData","promises","resolvedVal","isPlainOjbect","toArray","applyOverride","_Vue$util","defineReactive","init","_init","_parent","parent","$router","$route","_children","_defineMeta","destroy","_destroy","_isBeingDestroyed","$remove","strats","optionMergeStrategies","hooksToMergeRE","parentVal","childVal","ret","View","componentDef","directive","internalDirectives","viewDef","_isRouterView","_isDynamicLiteral","parentView","$parent","_rootView","_currentTransition","done","unbind","elementDirective","Link","sameOrigin","link","toggleClasses","_bind","addClass","removeClass","onPriority","priority","LINK_UPDATE","activeId","String","childLinks","querySelectorAll","existingId","getAttribute","setAttribute","$on","activeIds","updateClasses","$off","unwatch","$watch","onRouteUpdate","removeAttribute","tagName","onClick","addEventListener","exact","prevActiveClass","activeClass","metaKey","ctrlKey","shiftKey","defaultPrevented","button","go","parentNode","history","rootRE","newPath","stringifyPath","updateActiveMatch","updateHref","activeRE","RegExp","queryStringRE","regexEscapeRE","isAbsolute","mode","formatPath","_linkActiveClass","dest","trailingSlashRE","removeEventListener","guardComponent","comp","babelHelpers","classCallCheck","instance","Constructor","willAddRoute","addChild","contextEntered","specials","escapeRegex","validChars","generate","invalidChars","repeat","child","isEqual","chars","returned","oCreate","create","proto","F","splice","RouteRecognizer","rootState","allSegments","isEmpty","as","handlersFor","hasRoute","output","generateQueryString","pairs","pair","arrayPair","parseQueryString","queryString","keyLength","recognize","pathLen","queryStart","isSlashDropped","solutions","hashRE","HTML5History","_ref","onChange","baseEl","querySelector","listener","stop","replaceState","pos","pageXOffset","y","pageYOffset","pushState","hashMatch","HashHistory","hashbang","raw","formattedPath","isAbsoloute","prefix","AbstractHistory","currentPath","RouteTransition","abortingOnLoad","deactivateQueue","reverseDeactivateQueue","reverse","matched","reuseQueue","runQueue","_onTransitionValidated","_view","queue","step","index","_ref$expectBoolean","_ref$postActivate","nextCalled","onError","err","_suppress","onPromiseError","nextWithBoolean","res","nextWithData","exposed","hooks","internalKeysRE","Route","_recognizer","reduce","prev","cur","_notFoundHandler","enumerable","freeze","historyBackends","abstract","html5","Router","_ref$hashbang","_ref$abstract","_ref$history","_ref$saveScrollPosition","saveScrollPosition","_ref$transitionOnLoad","transitionOnLoad","_ref$suppressTransitionError","suppressTransitionError","_ref$root","_ref$linkActiveClass","linkActiveClass","app","_guardRecognizer","_started","_startCb","_currentRoute","_previousTransition","_notFoundRedirect","_beforeEachHooks","_afterEachHooks","_root","_abstract","_hashbang","hasPushState","_history","_historyFallback","inBrowser","History","_match","_saveScrollPosition","_map","on","rootPath","_notFound","_addRoute","_addRedirect","alias","_addAlias","beforeEach","afterEach","App","container","_appContainer","Ctor","_appConstructor","_location","assign","generatedPath","currentParams","targetParams","subRoutes","subPath","redirectPath","_addGuard","aliasPath","mappedPath","_handler","_this2","realPath","_checkGuard","_this3","currentRoute","currentTransition","_prevTransition","beforeHooks","startTransition","_postTransition","scrollTo","getElementById","scrollX","offsetTop","install","externalVue","set","hasOwn","_isVue","_data","ob","__ob__","convert","dep","vms","_proxy","_digest","del","_unproxy","isLiteral","exp","literalValueRE","isReserved","charCodeAt","_toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","camelize","camelizeRE","toUpper","hyphenate","hyphenateRE","classify","classifyRE","ctx","list","OBJECT_STRING","def","writable","configurable","_debounce","func","wait","timestamp","later","last","Date","now","arr","cancellable","cancelled","looseEqual","Cache","limit","size","head","tail","_keymap","pushFilter","lastFilterIndex","tokens","filterTokenRE","processFilterArg","dir","filters","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","inSingle","inDouble","curly","square","paren","compileRegex","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","htmlRE","cache","parseText","text","html","first","oneTime","lastIndex","tag","tokensToExp","token","formatToken","single","$eval","inlineFilters","filterRE","appendWithTransition","applyTransition","beforeWithTransition","before","removeWithTransition","direction","op","__v_trans","transitionEndEvent","_isCompiled","inDoc","node","doc","ownerDocument","documentElement","nodeType","contains","getAttr","_attr","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","prepend","firstChild","replaceChild","useCapture","off","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","classList","tar","extractContent","asFragment","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","isTrimmable","lastChild","createAnchor","persist","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","removeNodeRange","frag","onRemoved","removed","nodes","getOuterHTML","outerHTML","cloneNode","innerHTML","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","mergeData","toVal","fromVal","mergeAssets","guardArrayAssets","guardComponents","ids","guardProps","props","assets","asset","mergeOptions","mergeField","strat","defaultStrat","mixins","warnMissing","camelizedId","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","__proto__","observe","isExtensible","addVm","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","newVal","initMixin","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_vForRemoving","_unlinkFn","_context","_scope","_frag","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","code","formatSubPath","trimmed","maybeUnescapeQuote","nextChar","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","parsePath","pathCache","getPath","parseExpression","setPath","original","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","userQueue","has","circular","waiting","flushBatcherQueue","_again","runBatcherQueue","devtools","emit","watcher","run","pushWatcher","q","user","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","twoWay","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","suffix","nodeToFragment","textContent","clonedNode","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","Fragment","linker","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","attach","shouldCallRemove","beforeRemove","detach","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","floor","getTrackByKey","trackByKey","getValue","multi","selected","_value","indexOf$1","keyFilter","codes","charCode","keyCodes","keyCode","stopFilter","stopPropagation","preventFilter","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","style","kebab","camelPrefixes","normalize$1","_key","callActivateHooks","total","compileProps","propOptions","attr","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","inlineProps","propsData","initProp","$get","_bindDir","propDef","Boolean","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","required","valid","expectedTypes","assertedType","assertType","expectedType","validator","coerce","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","directiveComparator","descriptor","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileTextNode","compileElement","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","ref","modifiers","componentLinkFn","skip","previousElementSibling","dirName","rawName","termDef","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","transitionRE","bindRE","onRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","noop","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","computed","userDef","metas","eventsMixin","registerComponentEvents","eventRE","_fromParent","registerCallbacks","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","Directive","_locked","_listeners","_host","lifecycleMixin","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","teardown","miscMixin","_applyFilters","oldValue","write","offset","read","resolved","requested","pendingCallbacks","cbs","dataAPI","clean","asStatement","$arguments","$delete","sync","immediate","filterRE$1","$interpolate","$log","domAPI","op1","op2","targetIsDetached","shouldCallHook","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$after","inDocument","realCb","eventsAPI","modifyListenerCount","hookRE","$once","isSource","shouldPropagate","hasParentCbs","some","$broadcast","$dispatch","lifecycleAPI","$compile","limitBy","filterBy","delimiter","convertArray","item","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","compiler","parsers","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","mixin","definition","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isAndroid","isIos","isWechat","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","setImmediate","counter","observer","textNode","characterData","Set","entry","newer","older","returnEntry","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","instanceData","defaultData","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","_withLock","$index","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","inMatch","itMatch","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","prevent","reset","importantRE","cssText","handleObject","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","setAttributeNS","cloak","for","if","vClass","prevKeys","inlineTemplate","pendingComponentCb","pendingRemovals","pendingRemovalCb","invalidatePending","resolveComponent","mountComponent","ComponentName","activateHooks","cached","getCached","newComponent","waitingFor","extraOptions","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","decimals","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","version"],"mappings":"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","file":"/app.1231d8367f30865b8ba6.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(14);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _vueRouter = __webpack_require__(13);\n\t\n\tvar _vueRouter2 = _interopRequireDefault(_vueRouter);\n\t\n\tvar _vueResource = __webpack_require__(12);\n\t\n\tvar _vueResource2 = _interopRequireDefault(_vueResource);\n\t\n\tvar _App = __webpack_require__(8);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tvar _Home = __webpack_require__(10);\n\t\n\tvar _Home2 = _interopRequireDefault(_Home);\n\t\n\tvar _Dashboard = __webpack_require__(9);\n\t\n\tvar _Dashboard2 = _interopRequireDefault(_Dashboard);\n\t\n\tvar _Share = __webpack_require__(11);\n\t\n\tvar _Share2 = _interopRequireDefault(_Share);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.config.delimiters = ['[[', ']]'];\n\t_vue2.default.config.debug = true;\n\t\n\t_vue2.default.use(_vueResource2.default);\n\t_vue2.default.use(_vueRouter2.default);\n\t\n\tvar router = new _vueRouter2.default();\n\t\n\trouter.map({\n\t  '/': {\n\t    component: _Home2.default\n\t  },\n\t  '/dashboard': {\n\t    component: _Dashboard2.default\n\t  },\n\t  '/share': {\n\t    component: _Share2.default\n\t  }\n\t});\n\t\n\trouter.redirect({\n\t  '*': '/'\n\t});\n\t\n\trouter.start(_App2.default, '#app');\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  ready: function ready() {\n\t    this.$http.get('/api/v1/pics/').then(function (response) {\n\t      this.$set('pics', response.data);\n\t      console.log(response.data);\n\t      if (response.data.length === 0) {\n\t        this.$set('no_pics', true);\n\t      }\n\t    }, function (response) {});\n\t  },\n\t  methods: {\n\t    onSubmitForm: function onSubmitForm(e) {\n\t      e.preventDefault();\n\t      var input = this.newInput;\n\t\n\t      console.log(input);\n\t\n\t      this.$http.post('/api/v1/pics/', input).then(function (response) {\n\t        console.log(response.data);\n\t      }, function (response) {});\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"ui three top attached steps\\\"> <div class=\\\"active step\\\"> <a v-link=\\\"'/home'\\\"> <div class=content> <div class=title><i class=\\\"upload icon\\\"></i>Upload</div> <div class=description>Upload the picture</div> </div> </a> </div> <div class=\\\"disabled step\\\"> <a v-link=\\\"'/effects'\\\"> <div class=content> <div class=title><i class=\\\"magic icon\\\"></i>Spice it up</div> <div class=description>Select effects to the photos</div> </div> </a> </div> <div class=\\\"disabled step\\\"> <div class=content> <div class=title><i class=\\\"share icon\\\"></i>Share</div> <div class=description>1-click share to Facebook</div> </div> </div> </div>  <router-view></router-view>\";\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=share> <div class=\\\"ui three top attached steps\\\"> <div class=step> <a v-link=\\\"'/'\\\"> <div class=content> <div class=title><i class=\\\"upload icon\\\"></i>Upload</div> <div class=description>Upload the picture</div> </div> </a> </div> <div class=step> <a v-link=\\\"'/dashboard'\\\"> <div class=content> <div class=title><i class=\\\"magic icon\\\"></i>Spice it up</div> <div class=description>Select effects to the photos</div> </div> </a> </div> <div class=\\\"active step\\\"> <div class=content> <div class=title><i class=\\\"share icon\\\"></i>Share</div> <div class=description>1-click share to Facebook</div> </div> </div> </div> </div> <div id=share align=center> <p>Share</p> </div>\";\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=wrapper _v-20202014=\\\"\\\"> <div class=\\\"ui three top attached steps\\\" _v-20202014=\\\"\\\"> <div class=\\\"active step\\\" _v-20202014=\\\"\\\"> <a v-link=\\\"'/'\\\" _v-20202014=\\\"\\\"> <div class=content _v-20202014=\\\"\\\"> <div class=title _v-20202014=\\\"\\\"><i class=\\\"upload icon\\\" _v-20202014=\\\"\\\"></i>Upload</div> <div class=description _v-20202014=\\\"\\\">Upload the picture</div> </div> </a> </div> <div class=\\\"disabled step\\\" _v-20202014=\\\"\\\"> <a v-link=\\\"'/dashboard'\\\" _v-20202014=\\\"\\\"> <div class=content _v-20202014=\\\"\\\"> <div class=title _v-20202014=\\\"\\\"><i class=\\\"magic icon\\\" _v-20202014=\\\"\\\"></i>Spice it up</div> <div class=description _v-20202014=\\\"\\\">Select effects to the photos</div> </div> </a> </div> <div class=\\\"disabled step\\\" _v-20202014=\\\"\\\"> <div class=content _v-20202014=\\\"\\\"> <div class=title _v-20202014=\\\"\\\"><i class=\\\"share icon\\\" _v-20202014=\\\"\\\"></i>Share</div> <div class=description _v-20202014=\\\"\\\">1-click share to Facebook</div> </div> </div> </div> </div> <div id=upload align=center _v-20202014=\\\"\\\"> <div _v-20202014=\\\"\\\"> <h2 _v-20202014=\\\"\\\">Select an image</h2> <form _v-20202014=\\\"\\\"> <input type=file v-el=fileInput id=image class=form-control v-model=newInput.image _v-20202014=\\\"\\\"> <button class=\\\"ui button\\\" v-on:click=onSubmitForm _v-20202014=\\\"\\\"> <i class=\\\"upload icon\\\" _v-20202014=\\\"\\\"></i> Upload </button> </form> </div> </div> <h4 class=\\\"ui horizontal divider header\\\" _v-20202014=\\\"\\\"> <i class=\\\"camera icon\\\" _v-20202014=\\\"\\\"></i> Your Pictures </h4> <div v-if=no_pics align=center _v-20202014=\\\"\\\"> <i class=\\\"ui huge frown icon\\\" _v-20202014=\\\"\\\"></i> <h4 _v-20202014=\\\"\\\">You have no photos on sJourney <br _v-20202014=\\\"\\\">Why not upload one or more ...</h4> </div> <div v-if=pics _v-20202014=\\\"\\\"> <div class=\\\"ui link cards\\\" _v-20202014=\\\"\\\"> <div class=card v-for=\\\"pic in pics\\\" _v-20202014=\\\"\\\"> <div class=image _v-20202014=\\\"\\\"> <img src=\\\"[[ pic.uploaded_image ]]\\\" _v-20202014=\\\"\\\"> </div> <div class=content _v-20202014=\\\"\\\"> <div class=header _v-20202014=\\\"\\\">[[ pic.name ]]</div> <div class=\\\"extra content\\\" _v-20202014=\\\"\\\"> <span class=\\\"right floated\\\" _v-20202014=\\\"\\\"> [[ pic.size ]] </span> <span _v-20202014=\\\"\\\"> [[ pic.category.name ]] </span> </div> </div> </div> </div> </div> <div v-else=\\\"\\\" align=center _v-20202014=\\\"\\\"> <h4 _v-20202014=\\\"\\\">Please try reloading</h4> </div>\";\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=dashboard _v-2612bd2f=\\\"\\\"> <div class=\\\"ui three top attached steps\\\" _v-2612bd2f=\\\"\\\"> <div class=step _v-2612bd2f=\\\"\\\"> <a v-link=\\\"'/'\\\" _v-2612bd2f=\\\"\\\"> <div class=content _v-2612bd2f=\\\"\\\"> <div class=title _v-2612bd2f=\\\"\\\"><i class=\\\"upload icon\\\" _v-2612bd2f=\\\"\\\"></i>Upload</div> <div class=description _v-2612bd2f=\\\"\\\">Upload the picture</div> </div> </a> </div> <div class=\\\"active step\\\" _v-2612bd2f=\\\"\\\"> <a v-link=\\\"'/dashboard'\\\" _v-2612bd2f=\\\"\\\"> <div class=content _v-2612bd2f=\\\"\\\"> <div class=title _v-2612bd2f=\\\"\\\"><i class=\\\"magic icon\\\" _v-2612bd2f=\\\"\\\"></i>Spice it up</div> <div class=description _v-2612bd2f=\\\"\\\">Select effects to the photos</div> </div> </a> </div> <div class=\\\"disabled step\\\" _v-2612bd2f=\\\"\\\"> <div class=content _v-2612bd2f=\\\"\\\"> <div class=title _v-2612bd2f=\\\"\\\"><i class=\\\"share icon\\\" _v-2612bd2f=\\\"\\\"></i>Share</div> <div class=description _v-2612bd2f=\\\"\\\">1-click share to Facebook</div> </div> </div> </div> <div align=center _v-2612bd2f=\\\"\\\"> <img class=\\\"ui centered medium image\\\" src=/media/pics/stanmd.jpg _v-2612bd2f=\\\"\\\"> <div class=\\\"ui buttons\\\" _v-2612bd2f=\\\"\\\"> <button class=\\\"ui button\\\" _v-2612bd2f=\\\"\\\">Cancel</button> <div class=or _v-2612bd2f=\\\"\\\"></div> <button class=\\\"ui positive button\\\" _v-2612bd2f=\\\"\\\"><i class=\\\"save icon\\\" _v-2612bd2f=\\\"\\\"></i>Save</button> <div class=or _v-2612bd2f=\\\"\\\"></div> <a v-link=\\\"{ path: '/share/', replace: true }\\\" _v-2612bd2f=\\\"\\\"> <button class=\\\"ui secondary button\\\" _v-2612bd2f=\\\"\\\"><i class=\\\"share icon\\\" _v-2612bd2f=\\\"\\\"></i>Share</button> </a> </div> </div> <div class=\\\"ui segment\\\" _v-2612bd2f=\\\"\\\"> <h2 class=\\\"ui right floated header\\\" _v-2612bd2f=\\\"\\\">Effects</h2> <div class=\\\"ui clearing divider\\\" _v-2612bd2f=\\\"\\\"> </div> <div class=\\\"fx_images ui small images\\\" _v-2612bd2f=\\\"\\\"> <span _v-2612bd2f=\\\"\\\">Black and White</span> <a _v-2612bd2f=\\\"\\\"> <img src=/media/previews/b_w.thumbnail _v-2612bd2f=\\\"\\\"> </a> <a _v-2612bd2f=\\\"\\\"> <img src=/media/previews/detail.thumbnail _v-2612bd2f=\\\"\\\"> </a> <a _v-2612bd2f=\\\"\\\"> <img src=/media/previews/blur.thumbnail _v-2612bd2f=\\\"\\\"> </a> <a _v-2612bd2f=\\\"\\\"> <img src=/media/previews/emboss.thumbnail _v-2612bd2f=\\\"\\\"> </a> <a _v-2612bd2f=\\\"\\\"> <img src=/media/previews/upside_down.thumbnail _v-2612bd2f=\\\"\\\"> </a> <a _v-2612bd2f=\\\"\\\"> <img src=/media/previews/find_edges.thumbnail _v-2612bd2f=\\\"\\\"> </a> <a _v-2612bd2f=\\\"\\\"> <img src=/media/previews/contour.thumbnail _v-2612bd2f=\\\"\\\"> </a> <a _v-2612bd2f=\\\"\\\"> <img src=/media/previews/contrast.thumbnail _v-2612bd2f=\\\"\\\"> </a> <a _v-2612bd2f=\\\"\\\"> <img src=/media/previews/bright.thumbnail _v-2612bd2f=\\\"\\\"> </a> <a _v-2612bd2f=\\\"\\\"> <img src=/media/previews/pixelate.thumbnail _v-2612bd2f=\\\"\\\"> </a> </div> </div> </div>\";\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_template__ = __webpack_require__(4)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(3)\n\t__vue_template__ = __webpack_require__(7)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(2)\n\t__vue_script__ = __webpack_require__(1)\n\t__vue_template__ = __webpack_require__(6)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_template__ = __webpack_require__(5)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t/**\n\t * vue-resource v0.7.2\n\t * https://github.com/vuejs/vue-resource\n\t * Released under the MIT License.\n\t */\n\t\n\tmodule.exports =\n\t/******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t\n\t\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Install plugin.\n\t\t */\n\t\n\t\tfunction plugin(Vue) {\n\t\n\t\t    if (plugin.installed) {\n\t\t        return;\n\t\t    }\n\t\n\t\t    var _ = __webpack_require__(1);\n\t\n\t\t    _.config = Vue.config;\n\t\t    _.warning = Vue.util.warn;\n\t\t    _.nextTick = Vue.util.nextTick;\n\t\n\t\t    Vue.url = __webpack_require__(2);\n\t\t    Vue.http = __webpack_require__(8);\n\t\t    Vue.resource = __webpack_require__(23);\n\t\t    Vue.Promise = __webpack_require__(10);\n\t\n\t\t    Object.defineProperties(Vue.prototype, {\n\t\n\t\t        $url: {\n\t\t            get: function get() {\n\t\t                return _.options(Vue.url, this, this.$options.url);\n\t\t            }\n\t\t        },\n\t\n\t\t        $http: {\n\t\t            get: function get() {\n\t\t                return _.options(Vue.http, this, this.$options.http);\n\t\t            }\n\t\t        },\n\t\n\t\t        $resource: {\n\t\t            get: function get() {\n\t\t                return Vue.resource.bind(this);\n\t\t            }\n\t\t        },\n\t\n\t\t        $promise: {\n\t\t            get: function get() {\n\t\t                var _this = this;\n\t\n\t\t                return function (executor) {\n\t\t                    return new Vue.Promise(executor, _this);\n\t\t                };\n\t\t            }\n\t\t        }\n\t\n\t\t    });\n\t\t}\n\t\n\t\tif (typeof window !== 'undefined' && window.Vue) {\n\t\t    window.Vue.use(plugin);\n\t\t}\n\t\n\t\tmodule.exports = plugin;\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports) {\n\t\n\t\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\t\t/**\n\t\t * Utility functions.\n\t\t */\n\t\n\t\tvar _ = exports,\n\t\t    array = [],\n\t\t    console = window.console;\n\t\n\t\t_.warn = function (msg) {\n\t\t    if (console && _.warning && (!_.config.silent || _.config.debug)) {\n\t\t        console.warn('[VueResource warn]: ' + msg);\n\t\t    }\n\t\t};\n\t\n\t\t_.error = function (msg) {\n\t\t    if (console) {\n\t\t        console.error(msg);\n\t\t    }\n\t\t};\n\t\n\t\t_.trim = function (str) {\n\t\t    return str.replace(/^\\s*|\\s*$/g, '');\n\t\t};\n\t\n\t\t_.toLower = function (str) {\n\t\t    return str ? str.toLowerCase() : '';\n\t\t};\n\t\n\t\t_.isArray = Array.isArray;\n\t\n\t\t_.isString = function (val) {\n\t\t    return typeof val === 'string';\n\t\t};\n\t\n\t\t_.isFunction = function (val) {\n\t\t    return typeof val === 'function';\n\t\t};\n\t\n\t\t_.isObject = function (obj) {\n\t\t    return obj !== null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n\t\t};\n\t\n\t\t_.isPlainObject = function (obj) {\n\t\t    return _.isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n\t\t};\n\t\n\t\t_.options = function (fn, obj, options) {\n\t\n\t\t    options = options || {};\n\t\n\t\t    if (_.isFunction(options)) {\n\t\t        options = options.call(obj);\n\t\t    }\n\t\n\t\t    return _.merge(fn.bind({ $vm: obj, $options: options }), fn, { $options: options });\n\t\t};\n\t\n\t\t_.each = function (obj, iterator) {\n\t\n\t\t    var i, key;\n\t\n\t\t    if (typeof obj.length == 'number') {\n\t\t        for (i = 0; i < obj.length; i++) {\n\t\t            iterator.call(obj[i], obj[i], i);\n\t\t        }\n\t\t    } else if (_.isObject(obj)) {\n\t\t        for (key in obj) {\n\t\t            if (obj.hasOwnProperty(key)) {\n\t\t                iterator.call(obj[key], obj[key], key);\n\t\t            }\n\t\t        }\n\t\t    }\n\t\n\t\t    return obj;\n\t\t};\n\t\n\t\t_.defaults = function (target, source) {\n\t\n\t\t    for (var key in source) {\n\t\t        if (target[key] === undefined) {\n\t\t            target[key] = source[key];\n\t\t        }\n\t\t    }\n\t\n\t\t    return target;\n\t\t};\n\t\n\t\t_.extend = function (target) {\n\t\n\t\t    var args = array.slice.call(arguments, 1);\n\t\n\t\t    args.forEach(function (arg) {\n\t\t        merge(target, arg);\n\t\t    });\n\t\n\t\t    return target;\n\t\t};\n\t\n\t\t_.merge = function (target) {\n\t\n\t\t    var args = array.slice.call(arguments, 1);\n\t\n\t\t    args.forEach(function (arg) {\n\t\t        merge(target, arg, true);\n\t\t    });\n\t\n\t\t    return target;\n\t\t};\n\t\n\t\tfunction merge(target, source, deep) {\n\t\t    for (var key in source) {\n\t\t        if (deep && (_.isPlainObject(source[key]) || _.isArray(source[key]))) {\n\t\t            if (_.isPlainObject(source[key]) && !_.isPlainObject(target[key])) {\n\t\t                target[key] = {};\n\t\t            }\n\t\t            if (_.isArray(source[key]) && !_.isArray(target[key])) {\n\t\t                target[key] = [];\n\t\t            }\n\t\t            merge(target[key], source[key], deep);\n\t\t        } else if (source[key] !== undefined) {\n\t\t            target[key] = source[key];\n\t\t        }\n\t\t    }\n\t\t}\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Service for URL templating.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\tvar ie = document.documentMode;\n\t\tvar el = document.createElement('a');\n\t\n\t\tfunction Url(url, params) {\n\t\n\t\t    var options = url,\n\t\t        transform;\n\t\n\t\t    if (_.isString(url)) {\n\t\t        options = { url: url, params: params };\n\t\t    }\n\t\n\t\t    options = _.merge({}, Url.options, this.$options, options);\n\t\n\t\t    Url.transforms.forEach(function (handler) {\n\t\t        transform = factory(handler, transform, this.$vm);\n\t\t    }, this);\n\t\n\t\t    return transform(options);\n\t\t};\n\t\n\t\t/**\n\t\t * Url options.\n\t\t */\n\t\n\t\tUrl.options = {\n\t\t    url: '',\n\t\t    root: null,\n\t\t    params: {}\n\t\t};\n\t\n\t\t/**\n\t\t * Url transforms.\n\t\t */\n\t\n\t\tUrl.transforms = [__webpack_require__(3), __webpack_require__(5), __webpack_require__(6), __webpack_require__(7)];\n\t\n\t\t/**\n\t\t * Encodes a Url parameter string.\n\t\t *\n\t\t * @param {Object} obj\n\t\t */\n\t\n\t\tUrl.params = function (obj) {\n\t\n\t\t    var params = [],\n\t\t        escape = encodeURIComponent;\n\t\n\t\t    params.add = function (key, value) {\n\t\n\t\t        if (_.isFunction(value)) {\n\t\t            value = value();\n\t\t        }\n\t\n\t\t        if (value === null) {\n\t\t            value = '';\n\t\t        }\n\t\n\t\t        this.push(escape(key) + '=' + escape(value));\n\t\t    };\n\t\n\t\t    serialize(params, obj);\n\t\n\t\t    return params.join('&').replace(/%20/g, '+');\n\t\t};\n\t\n\t\t/**\n\t\t * Parse a URL and return its components.\n\t\t *\n\t\t * @param {String} url\n\t\t */\n\t\n\t\tUrl.parse = function (url) {\n\t\n\t\t    if (ie) {\n\t\t        el.href = url;\n\t\t        url = el.href;\n\t\t    }\n\t\n\t\t    el.href = url;\n\t\n\t\t    return {\n\t\t        href: el.href,\n\t\t        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n\t\t        port: el.port,\n\t\t        host: el.host,\n\t\t        hostname: el.hostname,\n\t\t        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n\t\t        search: el.search ? el.search.replace(/^\\?/, '') : '',\n\t\t        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n\t\t    };\n\t\t};\n\t\n\t\tfunction factory(handler, next, vm) {\n\t\t    return function (options) {\n\t\t        return handler.call(vm, options, next);\n\t\t    };\n\t\t}\n\t\n\t\tfunction serialize(params, obj, scope) {\n\t\n\t\t    var array = _.isArray(obj),\n\t\t        plain = _.isPlainObject(obj),\n\t\t        hash;\n\t\n\t\t    _.each(obj, function (value, key) {\n\t\n\t\t        hash = _.isObject(value) || _.isArray(value);\n\t\n\t\t        if (scope) {\n\t\t            key = scope + '[' + (plain || hash ? key : '') + ']';\n\t\t        }\n\t\n\t\t        if (!scope && array) {\n\t\t            params.add(value.name, value.value);\n\t\t        } else if (hash) {\n\t\t            serialize(params, value, key);\n\t\t        } else {\n\t\t            params.add(key, value);\n\t\t        }\n\t\t    });\n\t\t}\n\t\n\t\tmodule.exports = _.url = Url;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * URL Template (RFC 6570) Transform.\n\t\t */\n\t\n\t\tvar UrlTemplate = __webpack_require__(4);\n\t\n\t\tmodule.exports = function (options) {\n\t\n\t\t    var variables = [],\n\t\t        url = UrlTemplate.expand(options.url, options.params, variables);\n\t\n\t\t    variables.forEach(function (key) {\n\t\t        delete options.params[key];\n\t\t    });\n\t\n\t\t    return url;\n\t\t};\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports) {\n\t\n\t\t/**\n\t\t * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n\t\t */\n\t\n\t\texports.expand = function (url, params, variables) {\n\t\n\t\t    var tmpl = this.parse(url),\n\t\t        expanded = tmpl.expand(params);\n\t\n\t\t    if (variables) {\n\t\t        variables.push.apply(variables, tmpl.vars);\n\t\t    }\n\t\n\t\t    return expanded;\n\t\t};\n\t\n\t\texports.parse = function (template) {\n\t\n\t\t    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n\t\t        variables = [];\n\t\n\t\t    return {\n\t\t        vars: variables,\n\t\t        expand: function expand(context) {\n\t\t            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n\t\t                if (expression) {\n\t\n\t\t                    var operator = null,\n\t\t                        values = [];\n\t\n\t\t                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n\t\t                        operator = expression.charAt(0);\n\t\t                        expression = expression.substr(1);\n\t\t                    }\n\t\n\t\t                    expression.split(/,/g).forEach(function (variable) {\n\t\t                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n\t\t                        values.push.apply(values, exports.getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n\t\t                        variables.push(tmp[1]);\n\t\t                    });\n\t\n\t\t                    if (operator && operator !== '+') {\n\t\n\t\t                        var separator = ',';\n\t\n\t\t                        if (operator === '?') {\n\t\t                            separator = '&';\n\t\t                        } else if (operator !== '#') {\n\t\t                            separator = operator;\n\t\t                        }\n\t\n\t\t                        return (values.length !== 0 ? operator : '') + values.join(separator);\n\t\t                    } else {\n\t\t                        return values.join(',');\n\t\t                    }\n\t\t                } else {\n\t\t                    return exports.encodeReserved(literal);\n\t\t                }\n\t\t            });\n\t\t        }\n\t\t    };\n\t\t};\n\t\n\t\texports.getValues = function (context, operator, key, modifier) {\n\t\n\t\t    var value = context[key],\n\t\t        result = [];\n\t\n\t\t    if (this.isDefined(value) && value !== '') {\n\t\t        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n\t\t            value = value.toString();\n\t\n\t\t            if (modifier && modifier !== '*') {\n\t\t                value = value.substring(0, parseInt(modifier, 10));\n\t\t            }\n\t\n\t\t            result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n\t\t        } else {\n\t\t            if (modifier === '*') {\n\t\t                if (Array.isArray(value)) {\n\t\t                    value.filter(this.isDefined).forEach(function (value) {\n\t\t                        result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n\t\t                    }, this);\n\t\t                } else {\n\t\t                    Object.keys(value).forEach(function (k) {\n\t\t                        if (this.isDefined(value[k])) {\n\t\t                            result.push(this.encodeValue(operator, value[k], k));\n\t\t                        }\n\t\t                    }, this);\n\t\t                }\n\t\t            } else {\n\t\t                var tmp = [];\n\t\n\t\t                if (Array.isArray(value)) {\n\t\t                    value.filter(this.isDefined).forEach(function (value) {\n\t\t                        tmp.push(this.encodeValue(operator, value));\n\t\t                    }, this);\n\t\t                } else {\n\t\t                    Object.keys(value).forEach(function (k) {\n\t\t                        if (this.isDefined(value[k])) {\n\t\t                            tmp.push(encodeURIComponent(k));\n\t\t                            tmp.push(this.encodeValue(operator, value[k].toString()));\n\t\t                        }\n\t\t                    }, this);\n\t\t                }\n\t\n\t\t                if (this.isKeyOperator(operator)) {\n\t\t                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n\t\t                } else if (tmp.length !== 0) {\n\t\t                    result.push(tmp.join(','));\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t    } else {\n\t\t        if (operator === ';') {\n\t\t            result.push(encodeURIComponent(key));\n\t\t        } else if (value === '' && (operator === '&' || operator === '?')) {\n\t\t            result.push(encodeURIComponent(key) + '=');\n\t\t        } else if (value === '') {\n\t\t            result.push('');\n\t\t        }\n\t\t    }\n\t\n\t\t    return result;\n\t\t};\n\t\n\t\texports.isDefined = function (value) {\n\t\t    return value !== undefined && value !== null;\n\t\t};\n\t\n\t\texports.isKeyOperator = function (operator) {\n\t\t    return operator === ';' || operator === '&' || operator === '?';\n\t\t};\n\t\n\t\texports.encodeValue = function (operator, value, key) {\n\t\n\t\t    value = operator === '+' || operator === '#' ? this.encodeReserved(value) : encodeURIComponent(value);\n\t\n\t\t    if (key) {\n\t\t        return encodeURIComponent(key) + '=' + value;\n\t\t    } else {\n\t\t        return value;\n\t\t    }\n\t\t};\n\t\n\t\texports.encodeReserved = function (str) {\n\t\t    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n\t\t        if (!/%[0-9A-Fa-f]/.test(part)) {\n\t\t            part = encodeURI(part);\n\t\t        }\n\t\t        return part;\n\t\t    }).join('');\n\t\t};\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Legacy Transform.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\n\t\tmodule.exports = function (options, next) {\n\t\n\t\t    var variables = [],\n\t\t        url = next(options);\n\t\n\t\t    url = url.replace(/(\\/?):([a-z]\\w*)/gi, function (match, slash, name) {\n\t\n\t\t        _.warn('The `:' + name + '` parameter syntax has been deprecated. Use the `{' + name + '}` syntax instead.');\n\t\n\t\t        if (options.params[name]) {\n\t\t            variables.push(name);\n\t\t            return slash + encodeUriSegment(options.params[name]);\n\t\t        }\n\t\n\t\t        return '';\n\t\t    });\n\t\n\t\t    variables.forEach(function (key) {\n\t\t        delete options.params[key];\n\t\t    });\n\t\n\t\t    return url;\n\t\t};\n\t\n\t\tfunction encodeUriSegment(value) {\n\t\n\t\t    return encodeUriQuery(value, true).replace(/%26/gi, '&').replace(/%3D/gi, '=').replace(/%2B/gi, '+');\n\t\t}\n\t\n\t\tfunction encodeUriQuery(value, spaces) {\n\t\n\t\t    return encodeURIComponent(value).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, spaces ? '%20' : '+');\n\t\t}\n\t\n\t/***/ },\n\t/* 6 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Query Parameter Transform.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\n\t\tmodule.exports = function (options, next) {\n\t\n\t\t    var urlParams = Object.keys(_.url.options.params),\n\t\t        query = {},\n\t\t        url = next(options);\n\t\n\t\t    _.each(options.params, function (value, key) {\n\t\t        if (urlParams.indexOf(key) === -1) {\n\t\t            query[key] = value;\n\t\t        }\n\t\t    });\n\t\n\t\t    query = _.url.params(query);\n\t\n\t\t    if (query) {\n\t\t        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n\t\t    }\n\t\n\t\t    return url;\n\t\t};\n\t\n\t/***/ },\n\t/* 7 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Root Prefix Transform.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\n\t\tmodule.exports = function (options, next) {\n\t\n\t\t    var url = next(options);\n\t\n\t\t    if (_.isString(options.root) && !url.match(/^(https?:)?\\//)) {\n\t\t        url = options.root + '/' + url;\n\t\t    }\n\t\n\t\t    return url;\n\t\t};\n\t\n\t/***/ },\n\t/* 8 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Service for sending network requests.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\tvar Client = __webpack_require__(9);\n\t\tvar Promise = __webpack_require__(10);\n\t\tvar interceptor = __webpack_require__(13);\n\t\tvar jsonType = { 'Content-Type': 'application/json' };\n\t\n\t\tfunction Http(url, options) {\n\t\t    var _this = this;\n\t\n\t\t    var client = Client,\n\t\t        request,\n\t\t        promise;\n\t\n\t\t    Http.interceptors.forEach(function (handler) {\n\t\t        client = interceptor(handler, _this.$vm)(client);\n\t\t    });\n\t\n\t\t    options = _.isObject(url) ? url : _.extend({ url: url }, options);\n\t\t    request = _.merge({}, Http.options, this.$options, options);\n\t\t    promise = client(request).bind(this.$vm).then(function (response) {\n\t\n\t\t        return response.ok ? response : Promise.reject(response);\n\t\t    }, function (response) {\n\t\n\t\t        if (response instanceof Error) {\n\t\t            _.error(response);\n\t\t        }\n\t\n\t\t        return Promise.reject(response);\n\t\t    });\n\t\n\t\t    if (request.success) {\n\t\t        promise.success(request.success);\n\t\t    }\n\t\n\t\t    if (request.error) {\n\t\t        promise.error(request.error);\n\t\t    }\n\t\n\t\t    return promise;\n\t\t}\n\t\n\t\tHttp.options = {\n\t\t    method: 'get',\n\t\t    data: '',\n\t\t    params: {},\n\t\t    headers: {},\n\t\t    xhr: null,\n\t\t    upload: null,\n\t\t    jsonp: 'callback',\n\t\t    beforeSend: null,\n\t\t    crossOrigin: null,\n\t\t    emulateHTTP: false,\n\t\t    emulateJSON: false,\n\t\t    timeout: 0\n\t\t};\n\t\n\t\tHttp.interceptors = [__webpack_require__(14), __webpack_require__(15), __webpack_require__(16), __webpack_require__(18), __webpack_require__(19), __webpack_require__(20), __webpack_require__(21)];\n\t\n\t\tHttp.headers = {\n\t\t    put: jsonType,\n\t\t    post: jsonType,\n\t\t    patch: jsonType,\n\t\t    delete: jsonType,\n\t\t    common: { 'Accept': 'application/json, text/plain, */*' },\n\t\t    custom: { 'X-Requested-With': 'XMLHttpRequest' }\n\t\t};\n\t\n\t\t['get', 'put', 'post', 'patch', 'delete', 'jsonp'].forEach(function (method) {\n\t\n\t\t    Http[method] = function (url, data, success, options) {\n\t\n\t\t        if (_.isFunction(data)) {\n\t\t            options = success;\n\t\t            success = data;\n\t\t            data = undefined;\n\t\t        }\n\t\n\t\t        if (_.isObject(success)) {\n\t\t            options = success;\n\t\t            success = undefined;\n\t\t        }\n\t\n\t\t        return this(url, _.extend({ method: method, data: data, success: success }, options));\n\t\t    };\n\t\t});\n\t\n\t\tmodule.exports = _.http = Http;\n\t\n\t/***/ },\n\t/* 9 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Base client.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\tvar Promise = __webpack_require__(10);\n\t\tvar xhrClient = __webpack_require__(12);\n\t\n\t\tmodule.exports = function (request) {\n\t\n\t\t    var response = (request.client || xhrClient)(request);\n\t\n\t\t    return Promise.resolve(response).then(function (response) {\n\t\n\t\t        if (response.headers) {\n\t\n\t\t            var headers = parseHeaders(response.headers);\n\t\n\t\t            response.headers = function (name) {\n\t\n\t\t                if (name) {\n\t\t                    return headers[_.toLower(name)];\n\t\t                }\n\t\n\t\t                return headers;\n\t\t            };\n\t\t        }\n\t\n\t\t        response.ok = response.status >= 200 && response.status < 300;\n\t\n\t\t        return response;\n\t\t    });\n\t\t};\n\t\n\t\tfunction parseHeaders(str) {\n\t\n\t\t    var headers = {},\n\t\t        value,\n\t\t        name,\n\t\t        i;\n\t\n\t\t    if (_.isString(str)) {\n\t\t        _.each(str.split('\\n'), function (row) {\n\t\n\t\t            i = row.indexOf(':');\n\t\t            name = _.trim(_.toLower(row.slice(0, i)));\n\t\t            value = _.trim(row.slice(i + 1));\n\t\n\t\t            if (headers[name]) {\n\t\n\t\t                if (_.isArray(headers[name])) {\n\t\t                    headers[name].push(value);\n\t\t                } else {\n\t\t                    headers[name] = [headers[name], value];\n\t\t                }\n\t\t            } else {\n\t\n\t\t                headers[name] = value;\n\t\t            }\n\t\t        });\n\t\t    }\n\t\n\t\t    return headers;\n\t\t}\n\t\n\t/***/ },\n\t/* 10 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Promise adapter.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\tvar PromiseObj = window.Promise || __webpack_require__(11);\n\t\n\t\tfunction Promise(executor, context) {\n\t\n\t\t    if (executor instanceof PromiseObj) {\n\t\t        this.promise = executor;\n\t\t    } else {\n\t\t        this.promise = new PromiseObj(executor.bind(context));\n\t\t    }\n\t\n\t\t    this.context = context;\n\t\t}\n\t\n\t\tPromise.all = function (iterable, context) {\n\t\t    return new Promise(PromiseObj.all(iterable), context);\n\t\t};\n\t\n\t\tPromise.resolve = function (value, context) {\n\t\t    return new Promise(PromiseObj.resolve(value), context);\n\t\t};\n\t\n\t\tPromise.reject = function (reason, context) {\n\t\t    return new Promise(PromiseObj.reject(reason), context);\n\t\t};\n\t\n\t\tPromise.race = function (iterable, context) {\n\t\t    return new Promise(PromiseObj.race(iterable), context);\n\t\t};\n\t\n\t\tvar p = Promise.prototype;\n\t\n\t\tp.bind = function (context) {\n\t\t    this.context = context;\n\t\t    return this;\n\t\t};\n\t\n\t\tp.then = function (fulfilled, rejected) {\n\t\n\t\t    if (fulfilled && fulfilled.bind && this.context) {\n\t\t        fulfilled = fulfilled.bind(this.context);\n\t\t    }\n\t\n\t\t    if (rejected && rejected.bind && this.context) {\n\t\t        rejected = rejected.bind(this.context);\n\t\t    }\n\t\n\t\t    this.promise = this.promise.then(fulfilled, rejected);\n\t\n\t\t    return this;\n\t\t};\n\t\n\t\tp.catch = function (rejected) {\n\t\n\t\t    if (rejected && rejected.bind && this.context) {\n\t\t        rejected = rejected.bind(this.context);\n\t\t    }\n\t\n\t\t    this.promise = this.promise.catch(rejected);\n\t\n\t\t    return this;\n\t\t};\n\t\n\t\tp.finally = function (callback) {\n\t\n\t\t    return this.then(function (value) {\n\t\t        callback.call(this);\n\t\t        return value;\n\t\t    }, function (reason) {\n\t\t        callback.call(this);\n\t\t        return PromiseObj.reject(reason);\n\t\t    });\n\t\t};\n\t\n\t\tp.success = function (callback) {\n\t\n\t\t    _.warn('The `success` method has been deprecated. Use the `then` method instead.');\n\t\n\t\t    return this.then(function (response) {\n\t\t        return callback.call(this, response.data, response.status, response) || response;\n\t\t    });\n\t\t};\n\t\n\t\tp.error = function (callback) {\n\t\n\t\t    _.warn('The `error` method has been deprecated. Use the `catch` method instead.');\n\t\n\t\t    return this.catch(function (response) {\n\t\t        return callback.call(this, response.data, response.status, response) || response;\n\t\t    });\n\t\t};\n\t\n\t\tp.always = function (callback) {\n\t\n\t\t    _.warn('The `always` method has been deprecated. Use the `finally` method instead.');\n\t\n\t\t    var cb = function cb(response) {\n\t\t        return callback.call(this, response.data, response.status, response) || response;\n\t\t    };\n\t\n\t\t    return this.then(cb, cb);\n\t\t};\n\t\n\t\tmodule.exports = Promise;\n\t\n\t/***/ },\n\t/* 11 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\t\t/**\n\t\t * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\n\t\tvar RESOLVED = 0;\n\t\tvar REJECTED = 1;\n\t\tvar PENDING = 2;\n\t\n\t\tfunction Promise(executor) {\n\t\n\t\t    this.state = PENDING;\n\t\t    this.value = undefined;\n\t\t    this.deferred = [];\n\t\n\t\t    var promise = this;\n\t\n\t\t    try {\n\t\t        executor(function (x) {\n\t\t            promise.resolve(x);\n\t\t        }, function (r) {\n\t\t            promise.reject(r);\n\t\t        });\n\t\t    } catch (e) {\n\t\t        promise.reject(e);\n\t\t    }\n\t\t}\n\t\n\t\tPromise.reject = function (r) {\n\t\t    return new Promise(function (resolve, reject) {\n\t\t        reject(r);\n\t\t    });\n\t\t};\n\t\n\t\tPromise.resolve = function (x) {\n\t\t    return new Promise(function (resolve, reject) {\n\t\t        resolve(x);\n\t\t    });\n\t\t};\n\t\n\t\tPromise.all = function all(iterable) {\n\t\t    return new Promise(function (resolve, reject) {\n\t\t        var count = 0,\n\t\t            result = [];\n\t\n\t\t        if (iterable.length === 0) {\n\t\t            resolve(result);\n\t\t        }\n\t\n\t\t        function resolver(i) {\n\t\t            return function (x) {\n\t\t                result[i] = x;\n\t\t                count += 1;\n\t\n\t\t                if (count === iterable.length) {\n\t\t                    resolve(result);\n\t\t                }\n\t\t            };\n\t\t        }\n\t\n\t\t        for (var i = 0; i < iterable.length; i += 1) {\n\t\t            Promise.resolve(iterable[i]).then(resolver(i), reject);\n\t\t        }\n\t\t    });\n\t\t};\n\t\n\t\tPromise.race = function race(iterable) {\n\t\t    return new Promise(function (resolve, reject) {\n\t\t        for (var i = 0; i < iterable.length; i += 1) {\n\t\t            Promise.resolve(iterable[i]).then(resolve, reject);\n\t\t        }\n\t\t    });\n\t\t};\n\t\n\t\tvar p = Promise.prototype;\n\t\n\t\tp.resolve = function resolve(x) {\n\t\t    var promise = this;\n\t\n\t\t    if (promise.state === PENDING) {\n\t\t        if (x === promise) {\n\t\t            throw new TypeError('Promise settled with itself.');\n\t\t        }\n\t\n\t\t        var called = false;\n\t\n\t\t        try {\n\t\t            var then = x && x['then'];\n\t\n\t\t            if (x !== null && (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && typeof then === 'function') {\n\t\t                then.call(x, function (x) {\n\t\t                    if (!called) {\n\t\t                        promise.resolve(x);\n\t\t                    }\n\t\t                    called = true;\n\t\t                }, function (r) {\n\t\t                    if (!called) {\n\t\t                        promise.reject(r);\n\t\t                    }\n\t\t                    called = true;\n\t\t                });\n\t\t                return;\n\t\t            }\n\t\t        } catch (e) {\n\t\t            if (!called) {\n\t\t                promise.reject(e);\n\t\t            }\n\t\t            return;\n\t\t        }\n\t\n\t\t        promise.state = RESOLVED;\n\t\t        promise.value = x;\n\t\t        promise.notify();\n\t\t    }\n\t\t};\n\t\n\t\tp.reject = function reject(reason) {\n\t\t    var promise = this;\n\t\n\t\t    if (promise.state === PENDING) {\n\t\t        if (reason === promise) {\n\t\t            throw new TypeError('Promise settled with itself.');\n\t\t        }\n\t\n\t\t        promise.state = REJECTED;\n\t\t        promise.value = reason;\n\t\t        promise.notify();\n\t\t    }\n\t\t};\n\t\n\t\tp.notify = function notify() {\n\t\t    var promise = this;\n\t\n\t\t    _.nextTick(function () {\n\t\t        if (promise.state !== PENDING) {\n\t\t            while (promise.deferred.length) {\n\t\t                var deferred = promise.deferred.shift(),\n\t\t                    onResolved = deferred[0],\n\t\t                    onRejected = deferred[1],\n\t\t                    resolve = deferred[2],\n\t\t                    reject = deferred[3];\n\t\n\t\t                try {\n\t\t                    if (promise.state === RESOLVED) {\n\t\t                        if (typeof onResolved === 'function') {\n\t\t                            resolve(onResolved.call(undefined, promise.value));\n\t\t                        } else {\n\t\t                            resolve(promise.value);\n\t\t                        }\n\t\t                    } else if (promise.state === REJECTED) {\n\t\t                        if (typeof onRejected === 'function') {\n\t\t                            resolve(onRejected.call(undefined, promise.value));\n\t\t                        } else {\n\t\t                            reject(promise.value);\n\t\t                        }\n\t\t                    }\n\t\t                } catch (e) {\n\t\t                    reject(e);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t};\n\t\n\t\tp.then = function then(onResolved, onRejected) {\n\t\t    var promise = this;\n\t\n\t\t    return new Promise(function (resolve, reject) {\n\t\t        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n\t\t        promise.notify();\n\t\t    });\n\t\t};\n\t\n\t\tp.catch = function (onRejected) {\n\t\t    return this.then(undefined, onRejected);\n\t\t};\n\t\n\t\tmodule.exports = Promise;\n\t\n\t/***/ },\n\t/* 12 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * XMLHttp client.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\tvar Promise = __webpack_require__(10);\n\t\n\t\tmodule.exports = function (request) {\n\t\t    return new Promise(function (resolve) {\n\t\n\t\t        var xhr = new XMLHttpRequest(),\n\t\t            response = { request: request },\n\t\t            handler;\n\t\n\t\t        request.cancel = function () {\n\t\t            xhr.abort();\n\t\t        };\n\t\n\t\t        xhr.open(request.method, _.url(request), true);\n\t\n\t\t        handler = function handler(event) {\n\t\n\t\t            response.data = xhr.responseText;\n\t\t            response.status = xhr.status;\n\t\t            response.statusText = xhr.statusText;\n\t\t            response.headers = xhr.getAllResponseHeaders();\n\t\n\t\t            resolve(response);\n\t\t        };\n\t\n\t\t        xhr.timeout = 0;\n\t\t        xhr.onload = handler;\n\t\t        xhr.onabort = handler;\n\t\t        xhr.onerror = handler;\n\t\t        xhr.ontimeout = function () {};\n\t\t        xhr.onprogress = function () {};\n\t\n\t\t        if (_.isPlainObject(request.xhr)) {\n\t\t            _.extend(xhr, request.xhr);\n\t\t        }\n\t\n\t\t        if (_.isPlainObject(request.upload)) {\n\t\t            _.extend(xhr.upload, request.upload);\n\t\t        }\n\t\n\t\t        _.each(request.headers || {}, function (value, header) {\n\t\t            xhr.setRequestHeader(header, value);\n\t\t        });\n\t\n\t\t        xhr.send(request.data);\n\t\t    });\n\t\t};\n\t\n\t/***/ },\n\t/* 13 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Interceptor factory.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\tvar Promise = __webpack_require__(10);\n\t\n\t\tmodule.exports = function (handler, vm) {\n\t\n\t\t    return function (client) {\n\t\n\t\t        if (_.isFunction(handler)) {\n\t\t            handler = handler.call(vm, Promise);\n\t\t        }\n\t\n\t\t        return function (request) {\n\t\n\t\t            if (_.isFunction(handler.request)) {\n\t\t                request = handler.request.call(vm, request);\n\t\t            }\n\t\n\t\t            return when(request, function (request) {\n\t\t                return when(client(request), function (response) {\n\t\n\t\t                    if (_.isFunction(handler.response)) {\n\t\t                        response = handler.response.call(vm, response);\n\t\t                    }\n\t\n\t\t                    return response;\n\t\t                });\n\t\t            });\n\t\t        };\n\t\t    };\n\t\t};\n\t\n\t\tfunction when(value, fulfilled, rejected) {\n\t\n\t\t    var promise = Promise.resolve(value);\n\t\n\t\t    if (arguments.length < 2) {\n\t\t        return promise;\n\t\t    }\n\t\n\t\t    return promise.then(fulfilled, rejected);\n\t\t}\n\t\n\t/***/ },\n\t/* 14 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Before Interceptor.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\n\t\tmodule.exports = {\n\t\n\t\t    request: function request(_request) {\n\t\n\t\t        if (_.isFunction(_request.beforeSend)) {\n\t\t            _request.beforeSend.call(this, _request);\n\t\t        }\n\t\n\t\t        return _request;\n\t\t    }\n\t\n\t\t};\n\t\n\t/***/ },\n\t/* 15 */\n\t/***/ function(module, exports) {\n\t\n\t\t/**\n\t\t * Timeout Interceptor.\n\t\t */\n\t\n\t\tmodule.exports = function () {\n\t\n\t\t    var timeout;\n\t\n\t\t    return {\n\t\n\t\t        request: function request(_request) {\n\t\n\t\t            if (_request.timeout) {\n\t\t                timeout = setTimeout(function () {\n\t\t                    _request.cancel();\n\t\t                }, _request.timeout);\n\t\t            }\n\t\n\t\t            return _request;\n\t\t        },\n\t\n\t\t        response: function response(_response) {\n\t\n\t\t            clearTimeout(timeout);\n\t\n\t\t            return _response;\n\t\t        }\n\t\n\t\t    };\n\t\t};\n\t\n\t/***/ },\n\t/* 16 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * JSONP Interceptor.\n\t\t */\n\t\n\t\tvar jsonpClient = __webpack_require__(17);\n\t\n\t\tmodule.exports = {\n\t\n\t\t    request: function request(_request) {\n\t\n\t\t        if (_request.method == 'JSONP') {\n\t\t            _request.client = jsonpClient;\n\t\t        }\n\t\n\t\t        return _request;\n\t\t    }\n\t\n\t\t};\n\t\n\t/***/ },\n\t/* 17 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * JSONP client.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\tvar Promise = __webpack_require__(10);\n\t\n\t\tmodule.exports = function (request) {\n\t\t    return new Promise(function (resolve) {\n\t\n\t\t        var callback = '_jsonp' + Math.random().toString(36).substr(2),\n\t\t            response = { request: request, data: null },\n\t\t            handler,\n\t\t            script;\n\t\n\t\t        request.params[request.jsonp] = callback;\n\t\t        request.cancel = function () {\n\t\t            handler({ type: 'cancel' });\n\t\t        };\n\t\n\t\t        script = document.createElement('script');\n\t\t        script.src = _.url(request);\n\t\t        script.type = 'text/javascript';\n\t\t        script.async = true;\n\t\n\t\t        window[callback] = function (data) {\n\t\t            response.data = data;\n\t\t        };\n\t\n\t\t        handler = function handler(event) {\n\t\n\t\t            if (event.type === 'load' && response.data !== null) {\n\t\t                response.status = 200;\n\t\t            } else if (event.type === 'error') {\n\t\t                response.status = 404;\n\t\t            } else {\n\t\t                response.status = 0;\n\t\t            }\n\t\n\t\t            resolve(response);\n\t\n\t\t            delete window[callback];\n\t\t            document.body.removeChild(script);\n\t\t        };\n\t\n\t\t        script.onload = handler;\n\t\t        script.onerror = handler;\n\t\n\t\t        document.body.appendChild(script);\n\t\t    });\n\t\t};\n\t\n\t/***/ },\n\t/* 18 */\n\t/***/ function(module, exports) {\n\t\n\t\t/**\n\t\t * HTTP method override Interceptor.\n\t\t */\n\t\n\t\tmodule.exports = {\n\t\n\t\t    request: function request(_request) {\n\t\n\t\t        if (_request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(_request.method)) {\n\t\t            _request.headers['X-HTTP-Method-Override'] = _request.method;\n\t\t            _request.method = 'POST';\n\t\t        }\n\t\n\t\t        return _request;\n\t\t    }\n\t\n\t\t};\n\t\n\t/***/ },\n\t/* 19 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Mime Interceptor.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\n\t\tmodule.exports = {\n\t\n\t\t    request: function request(_request) {\n\t\n\t\t        if (_request.emulateJSON && _.isPlainObject(_request.data)) {\n\t\t            _request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n\t\t            _request.data = _.url.params(_request.data);\n\t\t        }\n\t\n\t\t        if (_.isObject(_request.data) && /FormData/i.test(_request.data.toString())) {\n\t\t            delete _request.headers['Content-Type'];\n\t\t        }\n\t\n\t\t        if (_.isPlainObject(_request.data)) {\n\t\t            _request.data = JSON.stringify(_request.data);\n\t\t        }\n\t\n\t\t        return _request;\n\t\t    },\n\t\n\t\t    response: function response(_response) {\n\t\n\t\t        try {\n\t\t            _response.data = JSON.parse(_response.data);\n\t\t        } catch (e) {}\n\t\n\t\t        return _response;\n\t\t    }\n\t\n\t\t};\n\t\n\t/***/ },\n\t/* 20 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Header Interceptor.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\n\t\tmodule.exports = {\n\t\n\t\t    request: function request(_request) {\n\t\n\t\t        _request.method = _request.method.toUpperCase();\n\t\t        _request.headers = _.extend({}, _.http.headers.common, !_request.crossOrigin ? _.http.headers.custom : {}, _.http.headers[_request.method.toLowerCase()], _request.headers);\n\t\n\t\t        if (_.isPlainObject(_request.data) && /^(GET|JSONP)$/i.test(_request.method)) {\n\t\t            _.extend(_request.params, _request.data);\n\t\t            delete _request.data;\n\t\t        }\n\t\n\t\t        return _request;\n\t\t    }\n\t\n\t\t};\n\t\n\t/***/ },\n\t/* 21 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * CORS Interceptor.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\tvar xdrClient = __webpack_require__(22);\n\t\tvar xhrCors = 'withCredentials' in new XMLHttpRequest();\n\t\tvar originUrl = _.url.parse(location.href);\n\t\n\t\tmodule.exports = {\n\t\n\t\t    request: function request(_request) {\n\t\n\t\t        if (_request.crossOrigin === null) {\n\t\t            _request.crossOrigin = crossOrigin(_request);\n\t\t        }\n\t\n\t\t        if (_request.crossOrigin) {\n\t\n\t\t            if (!xhrCors) {\n\t\t                _request.client = xdrClient;\n\t\t            }\n\t\n\t\t            _request.emulateHTTP = false;\n\t\t        }\n\t\n\t\t        return _request;\n\t\t    }\n\t\n\t\t};\n\t\n\t\tfunction crossOrigin(request) {\n\t\n\t\t    var requestUrl = _.url.parse(_.url(request));\n\t\n\t\t    return requestUrl.protocol !== originUrl.protocol || requestUrl.host !== originUrl.host;\n\t\t}\n\t\n\t/***/ },\n\t/* 22 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * XDomain client (Internet Explorer).\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\tvar Promise = __webpack_require__(10);\n\t\n\t\tmodule.exports = function (request) {\n\t\t    return new Promise(function (resolve) {\n\t\n\t\t        var xdr = new XDomainRequest(),\n\t\t            response = { request: request },\n\t\t            handler;\n\t\n\t\t        request.cancel = function () {\n\t\t            xdr.abort();\n\t\t        };\n\t\n\t\t        xdr.open(request.method, _.url(request), true);\n\t\n\t\t        handler = function handler(event) {\n\t\n\t\t            response.data = xdr.responseText;\n\t\t            response.status = xdr.status;\n\t\t            response.statusText = xdr.statusText;\n\t\n\t\t            resolve(response);\n\t\t        };\n\t\n\t\t        xdr.timeout = 0;\n\t\t        xdr.onload = handler;\n\t\t        xdr.onabort = handler;\n\t\t        xdr.onerror = handler;\n\t\t        xdr.ontimeout = function () {};\n\t\t        xdr.onprogress = function () {};\n\t\n\t\t        xdr.send(request.data);\n\t\t    });\n\t\t};\n\t\n\t/***/ },\n\t/* 23 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Service for interacting with RESTful services.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\n\t\tfunction Resource(url, params, actions, options) {\n\t\n\t\t    var self = this,\n\t\t        resource = {};\n\t\n\t\t    actions = _.extend({}, Resource.actions, actions);\n\t\n\t\t    _.each(actions, function (action, name) {\n\t\n\t\t        action = _.merge({ url: url, params: params || {} }, options, action);\n\t\n\t\t        resource[name] = function () {\n\t\t            return (self.$http || _.http)(opts(action, arguments));\n\t\t        };\n\t\t    });\n\t\n\t\t    return resource;\n\t\t}\n\t\n\t\tfunction opts(action, args) {\n\t\n\t\t    var options = _.extend({}, action),\n\t\t        params = {},\n\t\t        data,\n\t\t        success,\n\t\t        error;\n\t\n\t\t    switch (args.length) {\n\t\n\t\t        case 4:\n\t\n\t\t            error = args[3];\n\t\t            success = args[2];\n\t\n\t\t        case 3:\n\t\t        case 2:\n\t\n\t\t            if (_.isFunction(args[1])) {\n\t\n\t\t                if (_.isFunction(args[0])) {\n\t\n\t\t                    success = args[0];\n\t\t                    error = args[1];\n\t\n\t\t                    break;\n\t\t                }\n\t\n\t\t                success = args[1];\n\t\t                error = args[2];\n\t\t            } else {\n\t\n\t\t                params = args[0];\n\t\t                data = args[1];\n\t\t                success = args[2];\n\t\n\t\t                break;\n\t\t            }\n\t\n\t\t        case 1:\n\t\n\t\t            if (_.isFunction(args[0])) {\n\t\t                success = args[0];\n\t\t            } else if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n\t\t                data = args[0];\n\t\t            } else {\n\t\t                params = args[0];\n\t\t            }\n\t\n\t\t            break;\n\t\n\t\t        case 0:\n\t\n\t\t            break;\n\t\n\t\t        default:\n\t\n\t\t            throw 'Expected up to 4 arguments [params, data, success, error], got ' + args.length + ' arguments';\n\t\t    }\n\t\n\t\t    options.data = data;\n\t\t    options.params = _.extend({}, options.params, params);\n\t\n\t\t    if (success) {\n\t\t        options.success = success;\n\t\t    }\n\t\n\t\t    if (error) {\n\t\t        options.error = error;\n\t\t    }\n\t\n\t\t    return options;\n\t\t}\n\t\n\t\tResource.actions = {\n\t\n\t\t    get: { method: 'GET' },\n\t\t    save: { method: 'POST' },\n\t\t    query: { method: 'GET' },\n\t\t    update: { method: 'PUT' },\n\t\t    remove: { method: 'DELETE' },\n\t\t    delete: { method: 'DELETE' }\n\t\n\t\t};\n\t\n\t\tmodule.exports = _.resource = Resource;\n\t\n\t/***/ }\n\t/******/ ]);\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * vue-router v0.7.13\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.VueRouter = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t  function Target(path, matcher, delegate) {\n\t    this.path = path;\n\t    this.matcher = matcher;\n\t    this.delegate = delegate;\n\t  }\n\t\n\t  Target.prototype = {\n\t    to: function to(target, callback) {\n\t      var delegate = this.delegate;\n\t\n\t      if (delegate && delegate.willAddRoute) {\n\t        target = delegate.willAddRoute(this.matcher.target, target);\n\t      }\n\t\n\t      this.matcher.add(this.path, target);\n\t\n\t      if (callback) {\n\t        if (callback.length === 0) {\n\t          throw new Error(\"You must have an argument in the function passed to `to`\");\n\t        }\n\t        this.matcher.addChild(this.path, target, callback, this.delegate);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function Matcher(target) {\n\t    this.routes = {};\n\t    this.children = {};\n\t    this.target = target;\n\t  }\n\t\n\t  Matcher.prototype = {\n\t    add: function add(path, handler) {\n\t      this.routes[path] = handler;\n\t    },\n\t\n\t    addChild: function addChild(path, target, callback, delegate) {\n\t      var matcher = new Matcher(target);\n\t      this.children[path] = matcher;\n\t\n\t      var match = generateMatch(path, matcher, delegate);\n\t\n\t      if (delegate && delegate.contextEntered) {\n\t        delegate.contextEntered(target, match);\n\t      }\n\t\n\t      callback(match);\n\t    }\n\t  };\n\t\n\t  function generateMatch(startingPath, matcher, delegate) {\n\t    return function (path, nestedCallback) {\n\t      var fullPath = startingPath + path;\n\t\n\t      if (nestedCallback) {\n\t        nestedCallback(generateMatch(fullPath, matcher, delegate));\n\t      } else {\n\t        return new Target(startingPath + path, matcher, delegate);\n\t      }\n\t    };\n\t  }\n\t\n\t  function addRoute(routeArray, path, handler) {\n\t    var len = 0;\n\t    for (var i = 0, l = routeArray.length; i < l; i++) {\n\t      len += routeArray[i].path.length;\n\t    }\n\t\n\t    path = path.substr(len);\n\t    var route = { path: path, handler: handler };\n\t    routeArray.push(route);\n\t  }\n\t\n\t  function eachRoute(baseRoute, matcher, callback, binding) {\n\t    var routes = matcher.routes;\n\t\n\t    for (var path in routes) {\n\t      if (routes.hasOwnProperty(path)) {\n\t        var routeArray = baseRoute.slice();\n\t        addRoute(routeArray, path, routes[path]);\n\t\n\t        if (matcher.children[path]) {\n\t          eachRoute(routeArray, matcher.children[path], callback, binding);\n\t        } else {\n\t          callback.call(binding, routeArray);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function map (callback, addRouteCallback) {\n\t    var matcher = new Matcher();\n\t\n\t    callback(generateMatch(\"\", matcher, this.delegate));\n\t\n\t    eachRoute([], matcher, function (route) {\n\t      if (addRouteCallback) {\n\t        addRouteCallback(this, route);\n\t      } else {\n\t        this.add(route);\n\t      }\n\t    }, this);\n\t  }\n\t\n\t  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\t\n\t  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\t\n\t  var noWarning = false;\n\t  function warn(msg) {\n\t    if (!noWarning && typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  function tryDecode(uri, asComponent) {\n\t    try {\n\t      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n\t    } catch (e) {\n\t      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n\t    }\n\t  }\n\t\n\t  function isArray(test) {\n\t    return Object.prototype.toString.call(test) === \"[object Array]\";\n\t  }\n\t\n\t  // A Segment represents a segment in the original route description.\n\t  // Each Segment type provides an `eachChar` and `regex` method.\n\t  //\n\t  // The `eachChar` method invokes the callback with one or more character\n\t  // specifications. A character specification consumes one or more input\n\t  // characters.\n\t  //\n\t  // The `regex` method returns a regex fragment for the segment. If the\n\t  // segment is a dynamic of star segment, the regex fragment also includes\n\t  // a capture.\n\t  //\n\t  // A character specification contains:\n\t  //\n\t  // * `validChars`: a String with a list of all valid characters, or\n\t  // * `invalidChars`: a String with a list of all invalid characters\n\t  // * `repeat`: true if the character specification can repeat\n\t\n\t  function StaticSegment(string) {\n\t    this.string = string;\n\t  }\n\t  StaticSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      var string = this.string,\n\t          ch;\n\t\n\t      for (var i = 0, l = string.length; i < l; i++) {\n\t        ch = string.charAt(i);\n\t        callback({ validChars: ch });\n\t      }\n\t    },\n\t\n\t    regex: function regex() {\n\t      return this.string.replace(escapeRegex, '\\\\$1');\n\t    },\n\t\n\t    generate: function generate() {\n\t      return this.string;\n\t    }\n\t  };\n\t\n\t  function DynamicSegment(name) {\n\t    this.name = name;\n\t  }\n\t  DynamicSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"/\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"([^/]+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function StarSegment(name) {\n\t    this.name = name;\n\t  }\n\t  StarSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"(.+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function EpsilonSegment() {}\n\t  EpsilonSegment.prototype = {\n\t    eachChar: function eachChar() {},\n\t    regex: function regex() {\n\t      return \"\";\n\t    },\n\t    generate: function generate() {\n\t      return \"\";\n\t    }\n\t  };\n\t\n\t  function parse(route, names, specificity) {\n\t    // normalize route as not starting with a \"/\". Recognition will\n\t    // also normalize.\n\t    if (route.charAt(0) === \"/\") {\n\t      route = route.substr(1);\n\t    }\n\t\n\t    var segments = route.split(\"/\"),\n\t        results = [];\n\t\n\t    // A routes has specificity determined by the order that its different segments\n\t    // appear in. This system mirrors how the magnitude of numbers written as strings\n\t    // works.\n\t    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n\t    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n\t    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n\t    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n\t    // leading symbol, \"1\".\n\t    // The rule is that symbols to the left carry more weight than symbols to the right\n\t    // when a number is written out as a string. In the above strings, the leading digit\n\t    // represents how many 100's are in the number, and it carries more weight than the middle\n\t    // number which represents how many 10's are in the number.\n\t    // This system of number magnitude works well for route specificity, too. A route written as\n\t    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n\t    // `x`, irrespective of the other parts.\n\t    // Because of this similarity, we assign each type of segment a number value written as a\n\t    // string. We can find the specificity of compound routes by concatenating these strings\n\t    // together, from left to right. After we have looped through all of the segments,\n\t    // we convert the string to a number.\n\t    specificity.val = '';\n\t\n\t    for (var i = 0, l = segments.length; i < l; i++) {\n\t      var segment = segments[i],\n\t          match;\n\t\n\t      if (match = segment.match(/^:([^\\/]+)$/)) {\n\t        results.push(new DynamicSegment(match[1]));\n\t        names.push(match[1]);\n\t        specificity.val += '3';\n\t      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n\t        results.push(new StarSegment(match[1]));\n\t        specificity.val += '2';\n\t        names.push(match[1]);\n\t      } else if (segment === \"\") {\n\t        results.push(new EpsilonSegment());\n\t        specificity.val += '1';\n\t      } else {\n\t        results.push(new StaticSegment(segment));\n\t        specificity.val += '4';\n\t      }\n\t    }\n\t\n\t    specificity.val = +specificity.val;\n\t\n\t    return results;\n\t  }\n\t\n\t  // A State has a character specification and (`charSpec`) and a list of possible\n\t  // subsequent states (`nextStates`).\n\t  //\n\t  // If a State is an accepting state, it will also have several additional\n\t  // properties:\n\t  //\n\t  // * `regex`: A regular expression that is used to extract parameters from paths\n\t  //   that reached this accepting state.\n\t  // * `handlers`: Information on how to convert the list of captures into calls\n\t  //   to registered handlers with the specified parameters\n\t  // * `types`: How many static, dynamic or star segments in this route. Used to\n\t  //   decide which route to use if multiple registered routes match a path.\n\t  //\n\t  // Currently, State is implemented naively by looping over `nextStates` and\n\t  // comparing a character specification against a character. A more efficient\n\t  // implementation would use a hash of keys pointing at one or more next states.\n\t\n\t  function State(charSpec) {\n\t    this.charSpec = charSpec;\n\t    this.nextStates = [];\n\t  }\n\t\n\t  State.prototype = {\n\t    get: function get(charSpec) {\n\t      var nextStates = this.nextStates;\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        var child = nextStates[i];\n\t\n\t        var isEqual = child.charSpec.validChars === charSpec.validChars;\n\t        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\t\n\t        if (isEqual) {\n\t          return child;\n\t        }\n\t      }\n\t    },\n\t\n\t    put: function put(charSpec) {\n\t      var state;\n\t\n\t      // If the character specification already exists in a child of the current\n\t      // state, just return that state.\n\t      if (state = this.get(charSpec)) {\n\t        return state;\n\t      }\n\t\n\t      // Make a new state for the character spec\n\t      state = new State(charSpec);\n\t\n\t      // Insert the new state as a child of the current state\n\t      this.nextStates.push(state);\n\t\n\t      // If this character specification repeats, insert the new state as a child\n\t      // of itself. Note that this will not trigger an infinite loop because each\n\t      // transition during recognition consumes a character.\n\t      if (charSpec.repeat) {\n\t        state.nextStates.push(state);\n\t      }\n\t\n\t      // Return the new state\n\t      return state;\n\t    },\n\t\n\t    // Find a list of child states matching the next character\n\t    match: function match(ch) {\n\t      // DEBUG \"Processing `\" + ch + \"`:\"\n\t      var nextStates = this.nextStates,\n\t          child,\n\t          charSpec,\n\t          chars;\n\t\n\t      // DEBUG \"  \" + debugState(this)\n\t      var returned = [];\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        child = nextStates[i];\n\t\n\t        charSpec = child.charSpec;\n\t\n\t        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) !== -1) {\n\t            returned.push(child);\n\t          }\n\t        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) === -1) {\n\t            returned.push(child);\n\t          }\n\t        }\n\t      }\n\t\n\t      return returned;\n\t    }\n\t\n\t    /** IF DEBUG\n\t    , debug: function() {\n\t      var charSpec = this.charSpec,\n\t          debug = \"[\",\n\t          chars = charSpec.validChars || charSpec.invalidChars;\n\t       if (charSpec.invalidChars) { debug += \"^\"; }\n\t      debug += chars;\n\t      debug += \"]\";\n\t       if (charSpec.repeat) { debug += \"+\"; }\n\t       return debug;\n\t    }\n\t    END IF **/\n\t  };\n\t\n\t  /** IF DEBUG\n\t  function debug(log) {\n\t    console.log(log);\n\t  }\n\t\n\t  function debugState(state) {\n\t    return state.nextStates.map(function(n) {\n\t      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n\t      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n\t    }).join(\", \")\n\t  }\n\t  END IF **/\n\t\n\t  // Sort the routes by specificity\n\t  function sortSolutions(states) {\n\t    return states.sort(function (a, b) {\n\t      return b.specificity.val - a.specificity.val;\n\t    });\n\t  }\n\t\n\t  function recognizeChar(states, ch) {\n\t    var nextStates = [];\n\t\n\t    for (var i = 0, l = states.length; i < l; i++) {\n\t      var state = states[i];\n\t\n\t      nextStates = nextStates.concat(state.match(ch));\n\t    }\n\t\n\t    return nextStates;\n\t  }\n\t\n\t  var oCreate = Object.create || function (proto) {\n\t    function F() {}\n\t    F.prototype = proto;\n\t    return new F();\n\t  };\n\t\n\t  function RecognizeResults(queryParams) {\n\t    this.queryParams = queryParams || {};\n\t  }\n\t  RecognizeResults.prototype = oCreate({\n\t    splice: Array.prototype.splice,\n\t    slice: Array.prototype.slice,\n\t    push: Array.prototype.push,\n\t    length: 0,\n\t    queryParams: null\n\t  });\n\t\n\t  function findHandler(state, path, queryParams) {\n\t    var handlers = state.handlers,\n\t        regex = state.regex;\n\t    var captures = path.match(regex),\n\t        currentCapture = 1;\n\t    var result = new RecognizeResults(queryParams);\n\t\n\t    for (var i = 0, l = handlers.length; i < l; i++) {\n\t      var handler = handlers[i],\n\t          names = handler.names,\n\t          params = {};\n\t\n\t      for (var j = 0, m = names.length; j < m; j++) {\n\t        params[names[j]] = captures[currentCapture++];\n\t      }\n\t\n\t      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  function addSegment(currentState, segment) {\n\t    segment.eachChar(function (ch) {\n\t      var state;\n\t\n\t      currentState = currentState.put(ch);\n\t    });\n\t\n\t    return currentState;\n\t  }\n\t\n\t  function decodeQueryParamPart(part) {\n\t    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n\t    part = part.replace(/\\+/gm, '%20');\n\t    return tryDecode(part, true);\n\t  }\n\t\n\t  // The main interface\n\t\n\t  var RouteRecognizer = function RouteRecognizer() {\n\t    this.rootState = new State();\n\t    this.names = {};\n\t  };\n\t\n\t  RouteRecognizer.prototype = {\n\t    add: function add(routes, options) {\n\t      var currentState = this.rootState,\n\t          regex = \"^\",\n\t          specificity = {},\n\t          handlers = [],\n\t          allSegments = [],\n\t          name;\n\t\n\t      var isEmpty = true;\n\t\n\t      for (var i = 0, l = routes.length; i < l; i++) {\n\t        var route = routes[i],\n\t            names = [];\n\t\n\t        var segments = parse(route.path, names, specificity);\n\t\n\t        allSegments = allSegments.concat(segments);\n\t\n\t        for (var j = 0, m = segments.length; j < m; j++) {\n\t          var segment = segments[j];\n\t\n\t          if (segment instanceof EpsilonSegment) {\n\t            continue;\n\t          }\n\t\n\t          isEmpty = false;\n\t\n\t          // Add a \"/\" for the new segment\n\t          currentState = currentState.put({ validChars: \"/\" });\n\t          regex += \"/\";\n\t\n\t          // Add a representation of the segment to the NFA and regex\n\t          currentState = addSegment(currentState, segment);\n\t          regex += segment.regex();\n\t        }\n\t\n\t        var handler = { handler: route.handler, names: names };\n\t        handlers.push(handler);\n\t      }\n\t\n\t      if (isEmpty) {\n\t        currentState = currentState.put({ validChars: \"/\" });\n\t        regex += \"/\";\n\t      }\n\t\n\t      currentState.handlers = handlers;\n\t      currentState.regex = new RegExp(regex + \"$\");\n\t      currentState.specificity = specificity;\n\t\n\t      if (name = options && options.as) {\n\t        this.names[name] = {\n\t          segments: allSegments,\n\t          handlers: handlers\n\t        };\n\t      }\n\t    },\n\t\n\t    handlersFor: function handlersFor(name) {\n\t      var route = this.names[name],\n\t          result = [];\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      for (var i = 0, l = route.handlers.length; i < l; i++) {\n\t        result.push(route.handlers[i]);\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    hasRoute: function hasRoute(name) {\n\t      return !!this.names[name];\n\t    },\n\t\n\t    generate: function generate(name, params) {\n\t      var route = this.names[name],\n\t          output = \"\";\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      var segments = route.segments;\n\t\n\t      for (var i = 0, l = segments.length; i < l; i++) {\n\t        var segment = segments[i];\n\t\n\t        if (segment instanceof EpsilonSegment) {\n\t          continue;\n\t        }\n\t\n\t        output += \"/\";\n\t        output += segment.generate(params);\n\t      }\n\t\n\t      if (output.charAt(0) !== '/') {\n\t        output = '/' + output;\n\t      }\n\t\n\t      if (params && params.queryParams) {\n\t        output += this.generateQueryString(params.queryParams);\n\t      }\n\t\n\t      return output;\n\t    },\n\t\n\t    generateQueryString: function generateQueryString(params) {\n\t      var pairs = [];\n\t      var keys = [];\n\t      for (var key in params) {\n\t        if (params.hasOwnProperty(key)) {\n\t          keys.push(key);\n\t        }\n\t      }\n\t      keys.sort();\n\t      for (var i = 0, len = keys.length; i < len; i++) {\n\t        key = keys[i];\n\t        var value = params[key];\n\t        if (value == null) {\n\t          continue;\n\t        }\n\t        var pair = encodeURIComponent(key);\n\t        if (isArray(value)) {\n\t          for (var j = 0, l = value.length; j < l; j++) {\n\t            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n\t            pairs.push(arrayPair);\n\t          }\n\t        } else {\n\t          pair += \"=\" + encodeURIComponent(value);\n\t          pairs.push(pair);\n\t        }\n\t      }\n\t\n\t      if (pairs.length === 0) {\n\t        return '';\n\t      }\n\t\n\t      return \"?\" + pairs.join(\"&\");\n\t    },\n\t\n\t    parseQueryString: function parseQueryString(queryString) {\n\t      var pairs = queryString.split(\"&\"),\n\t          queryParams = {};\n\t      for (var i = 0; i < pairs.length; i++) {\n\t        var pair = pairs[i].split('='),\n\t            key = decodeQueryParamPart(pair[0]),\n\t            keyLength = key.length,\n\t            isArray = false,\n\t            value;\n\t        if (pair.length === 1) {\n\t          value = 'true';\n\t        } else {\n\t          //Handle arrays\n\t          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n\t            isArray = true;\n\t            key = key.slice(0, keyLength - 2);\n\t            if (!queryParams[key]) {\n\t              queryParams[key] = [];\n\t            }\n\t          }\n\t          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n\t        }\n\t        if (isArray) {\n\t          queryParams[key].push(value);\n\t        } else {\n\t          queryParams[key] = value;\n\t        }\n\t      }\n\t      return queryParams;\n\t    },\n\t\n\t    recognize: function recognize(path, silent) {\n\t      noWarning = silent;\n\t      var states = [this.rootState],\n\t          pathLen,\n\t          i,\n\t          l,\n\t          queryStart,\n\t          queryParams = {},\n\t          isSlashDropped = false;\n\t\n\t      queryStart = path.indexOf('?');\n\t      if (queryStart !== -1) {\n\t        var queryString = path.substr(queryStart + 1, path.length);\n\t        path = path.substr(0, queryStart);\n\t        if (queryString) {\n\t          queryParams = this.parseQueryString(queryString);\n\t        }\n\t      }\n\t\n\t      path = tryDecode(path);\n\t      if (!path) return;\n\t\n\t      // DEBUG GROUP path\n\t\n\t      if (path.charAt(0) !== \"/\") {\n\t        path = \"/\" + path;\n\t      }\n\t\n\t      pathLen = path.length;\n\t      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n\t        path = path.substr(0, pathLen - 1);\n\t        isSlashDropped = true;\n\t      }\n\t\n\t      for (i = 0, l = path.length; i < l; i++) {\n\t        states = recognizeChar(states, path.charAt(i));\n\t        if (!states.length) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      // END DEBUG GROUP\n\t\n\t      var solutions = [];\n\t      for (i = 0, l = states.length; i < l; i++) {\n\t        if (states[i].handlers) {\n\t          solutions.push(states[i]);\n\t        }\n\t      }\n\t\n\t      states = sortSolutions(solutions);\n\t\n\t      var state = solutions[0];\n\t\n\t      if (state && state.handlers) {\n\t        // if a trailing slash was dropped and a star segment is the last segment\n\t        // specified, put the trailing slash back\n\t        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n\t          path = path + \"/\";\n\t        }\n\t        return findHandler(state, path, queryParams);\n\t      }\n\t    }\n\t  };\n\t\n\t  RouteRecognizer.prototype.map = map;\n\t\n\t  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\t\n\t  // export default for holding the Vue reference\n\t  var exports$1 = {};\n\t  /**\n\t   * Warn stuff.\n\t   *\n\t   * @param {String} msg\n\t   */\n\t\n\t  function warn$1(msg) {\n\t    /* istanbul ignore next */\n\t    if (typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Resolve a relative path.\n\t   *\n\t   * @param {String} base\n\t   * @param {String} relative\n\t   * @param {Boolean} append\n\t   * @return {String}\n\t   */\n\t\n\t  function resolvePath(base, relative, append) {\n\t    var query = base.match(/(\\?.*)$/);\n\t    if (query) {\n\t      query = query[1];\n\t      base = base.slice(0, -query.length);\n\t    }\n\t    // a query!\n\t    if (relative.charAt(0) === '?') {\n\t      return base + relative;\n\t    }\n\t    var stack = base.split('/');\n\t    // remove trailing segment if:\n\t    // - not appending\n\t    // - appending to trailing slash (last segment is empty)\n\t    if (!append || !stack[stack.length - 1]) {\n\t      stack.pop();\n\t    }\n\t    // resolve relative path\n\t    var segments = relative.replace(/^\\//, '').split('/');\n\t    for (var i = 0; i < segments.length; i++) {\n\t      var segment = segments[i];\n\t      if (segment === '.') {\n\t        continue;\n\t      } else if (segment === '..') {\n\t        stack.pop();\n\t      } else {\n\t        stack.push(segment);\n\t      }\n\t    }\n\t    // ensure leading slash\n\t    if (stack[0] !== '') {\n\t      stack.unshift('');\n\t    }\n\t    return stack.join('/');\n\t  }\n\t\n\t  /**\n\t   * Forgiving check for a promise\n\t   *\n\t   * @param {Object} p\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isPromise(p) {\n\t    return p && typeof p.then === 'function';\n\t  }\n\t\n\t  /**\n\t   * Retrive a route config field from a component instance\n\t   * OR a component contructor.\n\t   *\n\t   * @param {Function|Vue} component\n\t   * @param {String} name\n\t   * @return {*}\n\t   */\n\t\n\t  function getRouteConfig(component, name) {\n\t    var options = component && (component.$options || component.options);\n\t    return options && options.route && options.route[name];\n\t  }\n\t\n\t  /**\n\t   * Resolve an async component factory. Have to do a dirty\n\t   * mock here because of Vue core's internal API depends on\n\t   * an ID check.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Function} cb\n\t   */\n\t\n\t  var resolver = undefined;\n\t\n\t  function resolveAsyncComponent(handler, cb) {\n\t    if (!resolver) {\n\t      resolver = {\n\t        resolve: exports$1.Vue.prototype._resolveComponent,\n\t        $options: {\n\t          components: {\n\t            _: handler.component\n\t          }\n\t        }\n\t      };\n\t    } else {\n\t      resolver.$options.components._ = handler.component;\n\t    }\n\t    resolver.resolve('_', function (Component) {\n\t      handler.component = Component;\n\t      cb(Component);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Map the dynamic segments in a path to params.\n\t   *\n\t   * @param {String} path\n\t   * @param {Object} params\n\t   * @param {Object} query\n\t   */\n\t\n\t  function mapParams(path, params, query) {\n\t    if (params === undefined) params = {};\n\t\n\t    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n\t      var val = params[key];\n\t      /* istanbul ignore if */\n\t      if (!val) {\n\t        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n\t      }\n\t      return val || '';\n\t    });\n\t    if (query) {\n\t      path += genQuery(query);\n\t    }\n\t    return path;\n\t  }\n\t\n\t  var hashRE = /#.*$/;\n\t\n\t  var HTML5History = (function () {\n\t    function HTML5History(_ref) {\n\t      var root = _ref.root;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HTML5History);\n\t\n\t      if (root && root !== '/') {\n\t        // make sure there's the starting slash\n\t        if (root.charAt(0) !== '/') {\n\t          root = '/' + root;\n\t        }\n\t        // remove trailing slash\n\t        this.root = root.replace(/\\/$/, '');\n\t        this.rootRE = new RegExp('^\\\\' + this.root);\n\t      } else {\n\t        this.root = null;\n\t      }\n\t      this.onChange = onChange;\n\t      // check base tag\n\t      var baseEl = document.querySelector('base');\n\t      this.base = baseEl && baseEl.getAttribute('href');\n\t    }\n\t\n\t    HTML5History.prototype.start = function start() {\n\t      var _this = this;\n\t\n\t      this.listener = function (e) {\n\t        var url = location.pathname + location.search;\n\t        if (_this.root) {\n\t          url = url.replace(_this.rootRE, '');\n\t        }\n\t        _this.onChange(url, e && e.state, location.hash);\n\t      };\n\t      window.addEventListener('popstate', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HTML5History.prototype.stop = function stop() {\n\t      window.removeEventListener('popstate', this.listener);\n\t    };\n\t\n\t    HTML5History.prototype.go = function go(path, replace, append) {\n\t      var url = this.formatPath(path, append);\n\t      if (replace) {\n\t        history.replaceState({}, '', url);\n\t      } else {\n\t        // record scroll position by replacing current state\n\t        history.replaceState({\n\t          pos: {\n\t            x: window.pageXOffset,\n\t            y: window.pageYOffset\n\t          }\n\t        }, '', location.href);\n\t        // then push new state\n\t        history.pushState({}, '', url);\n\t      }\n\t      var hashMatch = path.match(hashRE);\n\t      var hash = hashMatch && hashMatch[0];\n\t      path = url\n\t      // strip hash so it doesn't mess up params\n\t      .replace(hashRE, '')\n\t      // remove root before matching\n\t      .replace(this.rootRE, '');\n\t      this.onChange(path, null, hash);\n\t    };\n\t\n\t    HTML5History.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/'\n\t      // absolute path\n\t      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n\t    };\n\t\n\t    return HTML5History;\n\t  })();\n\t\n\t  var HashHistory = (function () {\n\t    function HashHistory(_ref) {\n\t      var hashbang = _ref.hashbang;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HashHistory);\n\t\n\t      this.hashbang = hashbang;\n\t      this.onChange = onChange;\n\t    }\n\t\n\t    HashHistory.prototype.start = function start() {\n\t      var self = this;\n\t      this.listener = function () {\n\t        var path = location.hash;\n\t        var raw = path.replace(/^#!?/, '');\n\t        // always\n\t        if (raw.charAt(0) !== '/') {\n\t          raw = '/' + raw;\n\t        }\n\t        var formattedPath = self.formatPath(raw);\n\t        if (formattedPath !== path) {\n\t          location.replace(formattedPath);\n\t          return;\n\t        }\n\t        // determine query\n\t        // note it's possible to have queries in both the actual URL\n\t        // and the hash fragment itself.\n\t        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n\t        self.onChange(path.replace(/^#!?/, '') + query);\n\t      };\n\t      window.addEventListener('hashchange', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HashHistory.prototype.stop = function stop() {\n\t      window.removeEventListener('hashchange', this.listener);\n\t    };\n\t\n\t    HashHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.formatPath(path, append);\n\t      if (replace) {\n\t        location.replace(path);\n\t      } else {\n\t        location.hash = path;\n\t      }\n\t    };\n\t\n\t    HashHistory.prototype.formatPath = function formatPath(path, append) {\n\t      var isAbsoloute = path.charAt(0) === '/';\n\t      var prefix = '#' + (this.hashbang ? '!' : '');\n\t      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n\t    };\n\t\n\t    return HashHistory;\n\t  })();\n\t\n\t  var AbstractHistory = (function () {\n\t    function AbstractHistory(_ref) {\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, AbstractHistory);\n\t\n\t      this.onChange = onChange;\n\t      this.currentPath = '/';\n\t    }\n\t\n\t    AbstractHistory.prototype.start = function start() {\n\t      this.onChange('/');\n\t    };\n\t\n\t    AbstractHistory.prototype.stop = function stop() {\n\t      // noop\n\t    };\n\t\n\t    AbstractHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.currentPath = this.formatPath(path, append);\n\t      this.onChange(path);\n\t    };\n\t\n\t    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n\t    };\n\t\n\t    return AbstractHistory;\n\t  })();\n\t\n\t  /**\n\t   * Determine the reusability of an existing router view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function canReuse(view, handler, transition) {\n\t    var component = view.childVM;\n\t    if (!component || !handler) {\n\t      return false;\n\t    }\n\t    // important: check view.Component here because it may\n\t    // have been changed in activate hook\n\t    if (view.Component !== handler.component) {\n\t      return false;\n\t    }\n\t    var canReuseFn = getRouteConfig(component, 'canReuse');\n\t    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n\t      to: transition.to,\n\t      from: transition.from\n\t    }) : true; // defaults to true\n\t  }\n\t\n\t  /**\n\t   * Check if a component can deactivate.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canDeactivate(view, transition, next) {\n\t    var fromComponent = view.childVM;\n\t    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHook(hook, fromComponent, next, {\n\t        expectBoolean: true\n\t      });\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if a component can activate.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canActivate(handler, transition, next) {\n\t    resolveAsyncComponent(handler, function (Component) {\n\t      // have to check due to async-ness\n\t      if (transition.aborted) {\n\t        return;\n\t      }\n\t      // determine if this component can be activated\n\t      var hook = getRouteConfig(Component, 'canActivate');\n\t      if (!hook) {\n\t        next();\n\t      } else {\n\t        transition.callHook(hook, null, next, {\n\t          expectBoolean: true\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Call deactivate hooks for existing router-views.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function deactivate(view, transition, next) {\n\t    var component = view.childVM;\n\t    var hook = getRouteConfig(component, 'deactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHooks(hook, component, next);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Activate / switch component for a router-view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Number} depth\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function activate(view, transition, depth, cb, reuse) {\n\t    var handler = transition.activateQueue[depth];\n\t    if (!handler) {\n\t      saveChildView(view);\n\t      if (view._bound) {\n\t        view.setComponent(null);\n\t      }\n\t      cb && cb();\n\t      return;\n\t    }\n\t\n\t    var Component = view.Component = handler.component;\n\t    var activateHook = getRouteConfig(Component, 'activate');\n\t    var dataHook = getRouteConfig(Component, 'data');\n\t    var waitForData = getRouteConfig(Component, 'waitForData');\n\t\n\t    view.depth = depth;\n\t    view.activated = false;\n\t\n\t    var component = undefined;\n\t    var loading = !!(dataHook && !waitForData);\n\t\n\t    // \"reuse\" is a flag passed down when the parent view is\n\t    // either reused via keep-alive or as a child of a kept-alive view.\n\t    // of course we can only reuse if the current kept-alive instance\n\t    // is of the correct type.\n\t    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\t\n\t    if (reuse) {\n\t      // just reuse\n\t      component = view.childVM;\n\t      component.$loadingRouteData = loading;\n\t    } else {\n\t      saveChildView(view);\n\t\n\t      // unbuild current component. this step also destroys\n\t      // and removes all nested child views.\n\t      view.unbuild(true);\n\t\n\t      // build the new component. this will also create the\n\t      // direct child view of the current one. it will register\n\t      // itself as view.childView.\n\t      component = view.build({\n\t        _meta: {\n\t          $loadingRouteData: loading\n\t        },\n\t        created: function created() {\n\t          this._routerView = view;\n\t        }\n\t      });\n\t\n\t      // handle keep-alive.\n\t      // when a kept-alive child vm is restored, we need to\n\t      // add its cached child views into the router's view list,\n\t      // and also properly update current view's child view.\n\t      if (view.keepAlive) {\n\t        component.$loadingRouteData = loading;\n\t        var cachedChildView = component._keepAliveRouterView;\n\t        if (cachedChildView) {\n\t          view.childView = cachedChildView;\n\t          component._keepAliveRouterView = null;\n\t        }\n\t      }\n\t    }\n\t\n\t    // cleanup the component in case the transition is aborted\n\t    // before the component is ever inserted.\n\t    var cleanup = function cleanup() {\n\t      component.$destroy();\n\t    };\n\t\n\t    // actually insert the component and trigger transition\n\t    var insert = function insert() {\n\t      if (reuse) {\n\t        cb && cb();\n\t        return;\n\t      }\n\t      var router = transition.router;\n\t      if (router._rendered || router._transitionOnLoad) {\n\t        view.transition(component);\n\t      } else {\n\t        // no transition on first render, manual transition\n\t        /* istanbul ignore if */\n\t        if (view.setCurrent) {\n\t          // 0.12 compat\n\t          view.setCurrent(component);\n\t        } else {\n\t          // 1.0\n\t          view.childVM = component;\n\t        }\n\t        component.$before(view.anchor, null, false);\n\t      }\n\t      cb && cb();\n\t    };\n\t\n\t    var afterData = function afterData() {\n\t      // activate the child view\n\t      if (view.childView) {\n\t        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n\t      }\n\t      insert();\n\t    };\n\t\n\t    // called after activation hook is resolved\n\t    var afterActivate = function afterActivate() {\n\t      view.activated = true;\n\t      if (dataHook && waitForData) {\n\t        // wait until data loaded to insert\n\t        loadData(component, transition, dataHook, afterData, cleanup);\n\t      } else {\n\t        // load data and insert at the same time\n\t        if (dataHook) {\n\t          loadData(component, transition, dataHook);\n\t        }\n\t        afterData();\n\t      }\n\t    };\n\t\n\t    if (activateHook) {\n\t      transition.callHooks(activateHook, component, afterActivate, {\n\t        cleanup: cleanup,\n\t        postActivate: true\n\t      });\n\t    } else {\n\t      afterActivate();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Reuse a view, just reload data if necessary.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function reuse(view, transition) {\n\t    var component = view.childVM;\n\t    var dataHook = getRouteConfig(component, 'data');\n\t    if (dataHook) {\n\t      loadData(component, transition, dataHook);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Asynchronously load and apply data to component.\n\t   *\n\t   * @param {Vue} component\n\t   * @param {Transition} transition\n\t   * @param {Function} hook\n\t   * @param {Function} cb\n\t   * @param {Function} cleanup\n\t   */\n\t\n\t  function loadData(component, transition, hook, cb, cleanup) {\n\t    component.$loadingRouteData = true;\n\t    transition.callHooks(hook, component, function () {\n\t      component.$loadingRouteData = false;\n\t      component.$emit('route-data-loaded', component);\n\t      cb && cb();\n\t    }, {\n\t      cleanup: cleanup,\n\t      postActivate: true,\n\t      processData: function processData(data) {\n\t        // handle promise sugar syntax\n\t        var promises = [];\n\t        if (isPlainObject(data)) {\n\t          Object.keys(data).forEach(function (key) {\n\t            var val = data[key];\n\t            if (isPromise(val)) {\n\t              promises.push(val.then(function (resolvedVal) {\n\t                component.$set(key, resolvedVal);\n\t              }));\n\t            } else {\n\t              component.$set(key, val);\n\t            }\n\t          });\n\t        }\n\t        if (promises.length) {\n\t          return promises[0].constructor.all(promises);\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Save the child view for a kept-alive view so that\n\t   * we can restore it when it is switched back to.\n\t   *\n\t   * @param {Directive} view\n\t   */\n\t\n\t  function saveChildView(view) {\n\t    if (view.keepAlive && view.childVM && view.childView) {\n\t      view.childVM._keepAliveRouterView = view.childView;\n\t    }\n\t    view.childView = null;\n\t  }\n\t\n\t  /**\n\t   * Check plain object.\n\t   *\n\t   * @param {*} val\n\t   */\n\t\n\t  function isPlainObject(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  /**\n\t   * A RouteTransition object manages the pipeline of a\n\t   * router-view switching process. This is also the object\n\t   * passed into user route hooks.\n\t   *\n\t   * @param {Router} router\n\t   * @param {Route} to\n\t   * @param {Route} from\n\t   */\n\t\n\t  var RouteTransition = (function () {\n\t    function RouteTransition(router, to, from) {\n\t      babelHelpers.classCallCheck(this, RouteTransition);\n\t\n\t      this.router = router;\n\t      this.to = to;\n\t      this.from = from;\n\t      this.next = null;\n\t      this.aborted = false;\n\t      this.done = false;\n\t    }\n\t\n\t    /**\n\t     * Abort current transition and return to previous location.\n\t     */\n\t\n\t    RouteTransition.prototype.abort = function abort() {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        // if the root path throws an error during validation\n\t        // on initial load, it gets caught in an infinite loop.\n\t        var abortingOnLoad = !this.from.path && this.to.path === '/';\n\t        if (!abortingOnLoad) {\n\t          this.router.replace(this.from.path || '/');\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Abort current transition and redirect to a new location.\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    RouteTransition.prototype.redirect = function redirect(path) {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        if (typeof path === 'string') {\n\t          path = mapParams(path, this.to.params, this.to.query);\n\t        } else {\n\t          path.params = path.params || this.to.params;\n\t          path.query = path.query || this.to.query;\n\t        }\n\t        this.router.replace(path);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * A router view transition's pipeline can be described as\n\t     * follows, assuming we are transitioning from an existing\n\t     * <router-view> chain [Component A, Component B] to a new\n\t     * chain [Component A, Component C]:\n\t     *\n\t     *  A    A\n\t     *  | => |\n\t     *  B    C\n\t     *\n\t     * 1. Reusablity phase:\n\t     *   -> canReuse(A, A)\n\t     *   -> canReuse(B, C)\n\t     *   -> determine new queues:\n\t     *      - deactivation: [B]\n\t     *      - activation: [C]\n\t     *\n\t     * 2. Validation phase:\n\t     *   -> canDeactivate(B)\n\t     *   -> canActivate(C)\n\t     *\n\t     * 3. Activation phase:\n\t     *   -> deactivate(B)\n\t     *   -> activate(C)\n\t     *\n\t     * Each of these steps can be asynchronous, and any\n\t     * step can potentially abort the transition.\n\t     *\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.start = function start(cb) {\n\t      var transition = this;\n\t\n\t      // determine the queue of views to deactivate\n\t      var deactivateQueue = [];\n\t      var view = this.router._rootView;\n\t      while (view) {\n\t        deactivateQueue.unshift(view);\n\t        view = view.childView;\n\t      }\n\t      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\t\n\t      // determine the queue of route handlers to activate\n\t      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n\t        return match.handler;\n\t      });\n\t\n\t      // 1. Reusability phase\n\t      var i = undefined,\n\t          reuseQueue = undefined;\n\t      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n\t        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n\t          break;\n\t        }\n\t      }\n\t      if (i > 0) {\n\t        reuseQueue = reverseDeactivateQueue.slice(0, i);\n\t        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n\t        activateQueue = activateQueue.slice(i);\n\t      }\n\t\n\t      // 2. Validation phase\n\t      transition.runQueue(deactivateQueue, canDeactivate, function () {\n\t        transition.runQueue(activateQueue, canActivate, function () {\n\t          transition.runQueue(deactivateQueue, deactivate, function () {\n\t            // 3. Activation phase\n\t\n\t            // Update router current route\n\t            transition.router._onTransitionValidated(transition);\n\t\n\t            // trigger reuse for all reused views\n\t            reuseQueue && reuseQueue.forEach(function (view) {\n\t              return reuse(view, transition);\n\t            });\n\t\n\t            // the root of the chain that needs to be replaced\n\t            // is the top-most non-reusable view.\n\t            if (deactivateQueue.length) {\n\t              var _view = deactivateQueue[deactivateQueue.length - 1];\n\t              var depth = reuseQueue ? reuseQueue.length : 0;\n\t              activate(_view, transition, depth, cb);\n\t            } else {\n\t              cb();\n\t            }\n\t          });\n\t        });\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Asynchronously and sequentially apply a function to a\n\t     * queue.\n\t     *\n\t     * @param {Array} queue\n\t     * @param {Function} fn\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n\t      var transition = this;\n\t      step(0);\n\t      function step(index) {\n\t        if (index >= queue.length) {\n\t          cb();\n\t        } else {\n\t          fn(queue[index], transition, function () {\n\t            step(index + 1);\n\t          });\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a user provided route transition hook and handle\n\t     * the response (e.g. if the user returns a promise).\n\t     *\n\t     * If the user neither expects an argument nor returns a\n\t     * promise, the hook is assumed to be synchronous.\n\t     *\n\t     * @param {Function} hook\n\t     * @param {*} [context]\n\t     * @param {Function} [cb]\n\t     * @param {Object} [options]\n\t     *                 - {Boolean} expectBoolean\n\t     *                 - {Boolean} postActive\n\t     *                 - {Function} processData\n\t     *                 - {Function} cleanup\n\t     */\n\t\n\t    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n\t      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t      var _ref$expectBoolean = _ref.expectBoolean;\n\t      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n\t      var _ref$postActivate = _ref.postActivate;\n\t      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n\t      var processData = _ref.processData;\n\t      var cleanup = _ref.cleanup;\n\t\n\t      var transition = this;\n\t      var nextCalled = false;\n\t\n\t      // abort the transition\n\t      var abort = function abort() {\n\t        cleanup && cleanup();\n\t        transition.abort();\n\t      };\n\t\n\t      // handle errors\n\t      var onError = function onError(err) {\n\t        postActivate ? next() : abort();\n\t        if (err && !transition.router._suppress) {\n\t          warn$1('Uncaught error during transition: ');\n\t          throw err instanceof Error ? err : new Error(err);\n\t        }\n\t      };\n\t\n\t      // since promise swallows errors, we have to\n\t      // throw it in the next tick...\n\t      var onPromiseError = function onPromiseError(err) {\n\t        try {\n\t          onError(err);\n\t        } catch (e) {\n\t          setTimeout(function () {\n\t            throw e;\n\t          }, 0);\n\t        }\n\t      };\n\t\n\t      // advance the transition to the next step\n\t      var next = function next() {\n\t        if (nextCalled) {\n\t          warn$1('transition.next() should be called only once.');\n\t          return;\n\t        }\n\t        nextCalled = true;\n\t        if (transition.aborted) {\n\t          cleanup && cleanup();\n\t          return;\n\t        }\n\t        cb && cb();\n\t      };\n\t\n\t      var nextWithBoolean = function nextWithBoolean(res) {\n\t        if (typeof res === 'boolean') {\n\t          res ? next() : abort();\n\t        } else if (isPromise(res)) {\n\t          res.then(function (ok) {\n\t            ok ? next() : abort();\n\t          }, onPromiseError);\n\t        } else if (!hook.length) {\n\t          next();\n\t        }\n\t      };\n\t\n\t      var nextWithData = function nextWithData(data) {\n\t        var res = undefined;\n\t        try {\n\t          res = processData(data);\n\t        } catch (err) {\n\t          return onError(err);\n\t        }\n\t        if (isPromise(res)) {\n\t          res.then(next, onPromiseError);\n\t        } else {\n\t          next();\n\t        }\n\t      };\n\t\n\t      // expose a clone of the transition object, so that each\n\t      // hook gets a clean copy and prevent the user from\n\t      // messing with the internals.\n\t      var exposed = {\n\t        to: transition.to,\n\t        from: transition.from,\n\t        abort: abort,\n\t        next: processData ? nextWithData : next,\n\t        redirect: function redirect() {\n\t          transition.redirect.apply(transition, arguments);\n\t        }\n\t      };\n\t\n\t      // actually call the hook\n\t      var res = undefined;\n\t      try {\n\t        res = hook.call(context, exposed);\n\t      } catch (err) {\n\t        return onError(err);\n\t      }\n\t\n\t      if (expectBoolean) {\n\t        // boolean hooks\n\t        nextWithBoolean(res);\n\t      } else if (isPromise(res)) {\n\t        // promise\n\t        if (processData) {\n\t          res.then(nextWithData, onPromiseError);\n\t        } else {\n\t          res.then(next, onPromiseError);\n\t        }\n\t      } else if (processData && isPlainOjbect(res)) {\n\t        // data promise sugar\n\t        nextWithData(res);\n\t      } else if (!hook.length) {\n\t        next();\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a single hook or an array of async hooks in series.\n\t     *\n\t     * @param {Array} hooks\n\t     * @param {*} context\n\t     * @param {Function} cb\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n\t      var _this = this;\n\t\n\t      if (Array.isArray(hooks)) {\n\t        this.runQueue(hooks, function (hook, _, next) {\n\t          if (!_this.aborted) {\n\t            _this.callHook(hook, context, next, options);\n\t          }\n\t        }, cb);\n\t      } else {\n\t        this.callHook(hooks, context, cb, options);\n\t      }\n\t    };\n\t\n\t    return RouteTransition;\n\t  })();\n\t\n\t  function isPlainOjbect(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  function toArray(val) {\n\t    return val ? Array.prototype.slice.call(val) : [];\n\t  }\n\t\n\t  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\t\n\t  /**\n\t   * Route Context Object\n\t   *\n\t   * @param {String} path\n\t   * @param {Router} router\n\t   */\n\t\n\t  var Route = function Route(path, router) {\n\t    var _this = this;\n\t\n\t    babelHelpers.classCallCheck(this, Route);\n\t\n\t    var matched = router._recognizer.recognize(path);\n\t    if (matched) {\n\t      // copy all custom fields from route configs\n\t      [].forEach.call(matched, function (match) {\n\t        for (var key in match.handler) {\n\t          if (!internalKeysRE.test(key)) {\n\t            _this[key] = match.handler[key];\n\t          }\n\t        }\n\t      });\n\t      // set query and params\n\t      this.query = matched.queryParams;\n\t      this.params = [].reduce.call(matched, function (prev, cur) {\n\t        if (cur.params) {\n\t          for (var key in cur.params) {\n\t            prev[key] = cur.params[key];\n\t          }\n\t        }\n\t        return prev;\n\t      }, {});\n\t    }\n\t    // expose path and router\n\t    this.path = path;\n\t    // for internal use\n\t    this.matched = matched || router._notFoundHandler;\n\t    // internal reference to router\n\t    Object.defineProperty(this, 'router', {\n\t      enumerable: false,\n\t      value: router\n\t    });\n\t    // Important: freeze self to prevent observation\n\t    Object.freeze(this);\n\t  };\n\t\n\t  function applyOverride (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var extend = _Vue$util.extend;\n\t    var isArray = _Vue$util.isArray;\n\t    var defineReactive = _Vue$util.defineReactive;\n\t\n\t    // override Vue's init and destroy process to keep track of router instances\n\t    var init = Vue.prototype._init;\n\t    Vue.prototype._init = function (options) {\n\t      options = options || {};\n\t      var root = options._parent || options.parent || this;\n\t      var router = root.$router;\n\t      var route = root.$route;\n\t      if (router) {\n\t        // expose router\n\t        this.$router = router;\n\t        router._children.push(this);\n\t        /* istanbul ignore if */\n\t        if (this._defineMeta) {\n\t          // 0.12\n\t          this._defineMeta('$route', route);\n\t        } else {\n\t          // 1.0\n\t          defineReactive(this, '$route', route);\n\t        }\n\t      }\n\t      init.call(this, options);\n\t    };\n\t\n\t    var destroy = Vue.prototype._destroy;\n\t    Vue.prototype._destroy = function () {\n\t      if (!this._isBeingDestroyed && this.$router) {\n\t        this.$router._children.$remove(this);\n\t      }\n\t      destroy.apply(this, arguments);\n\t    };\n\t\n\t    // 1.0 only: enable route mixins\n\t    var strats = Vue.config.optionMergeStrategies;\n\t    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\t\n\t    if (strats) {\n\t      strats.route = function (parentVal, childVal) {\n\t        if (!childVal) return parentVal;\n\t        if (!parentVal) return childVal;\n\t        var ret = {};\n\t        extend(ret, parentVal);\n\t        for (var key in childVal) {\n\t          var a = ret[key];\n\t          var b = childVal[key];\n\t          // for data, activate and deactivate, we need to merge them into\n\t          // arrays similar to lifecycle hooks.\n\t          if (a && hooksToMergeRE.test(key)) {\n\t            ret[key] = (isArray(a) ? a : [a]).concat(b);\n\t          } else {\n\t            ret[key] = b;\n\t          }\n\t        }\n\t        return ret;\n\t      };\n\t    }\n\t  }\n\t\n\t  function View (Vue) {\n\t\n\t    var _ = Vue.util;\n\t    var componentDef =\n\t    // 0.12\n\t    Vue.directive('_component') ||\n\t    // 1.0\n\t    Vue.internalDirectives.component;\n\t    // <router-view> extends the internal component directive\n\t    var viewDef = _.extend({}, componentDef);\n\t\n\t    // with some overrides\n\t    _.extend(viewDef, {\n\t\n\t      _isRouterView: true,\n\t\n\t      bind: function bind() {\n\t        var route = this.vm.$route;\n\t        /* istanbul ignore if */\n\t        if (!route) {\n\t          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n\t          return;\n\t        }\n\t        // force dynamic directive so v-component doesn't\n\t        // attempt to build right now\n\t        this._isDynamicLiteral = true;\n\t        // finally, init by delegating to v-component\n\t        componentDef.bind.call(this);\n\t\n\t        // locate the parent view\n\t        var parentView = undefined;\n\t        var parent = this.vm;\n\t        while (parent) {\n\t          if (parent._routerView) {\n\t            parentView = parent._routerView;\n\t            break;\n\t          }\n\t          parent = parent.$parent;\n\t        }\n\t        if (parentView) {\n\t          // register self as a child of the parent view,\n\t          // instead of activating now. This is so that the\n\t          // child's activate hook is called after the\n\t          // parent's has resolved.\n\t          this.parentView = parentView;\n\t          parentView.childView = this;\n\t        } else {\n\t          // this is the root view!\n\t          var router = route.router;\n\t          router._rootView = this;\n\t        }\n\t\n\t        // handle late-rendered view\n\t        // two possibilities:\n\t        // 1. root view rendered after transition has been\n\t        //    validated;\n\t        // 2. child view rendered after parent view has been\n\t        //    activated.\n\t        var transition = route.router._currentTransition;\n\t        if (!parentView && transition.done || parentView && parentView.activated) {\n\t          var depth = parentView ? parentView.depth + 1 : 0;\n\t          activate(this, transition, depth);\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        if (this.parentView) {\n\t          this.parentView.childView = null;\n\t        }\n\t        componentDef.unbind.call(this);\n\t      }\n\t    });\n\t\n\t    Vue.elementDirective('router-view', viewDef);\n\t  }\n\t\n\t  var trailingSlashRE = /\\/$/;\n\t  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\t  var queryStringRE = /\\?.*$/;\n\t\n\t  // install v-link, which provides navigation support for\n\t  // HTML5 history mode\n\t  function Link (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var _bind = _Vue$util.bind;\n\t    var isObject = _Vue$util.isObject;\n\t    var addClass = _Vue$util.addClass;\n\t    var removeClass = _Vue$util.removeClass;\n\t\n\t    var onPriority = Vue.directive('on').priority;\n\t    var LINK_UPDATE = '__vue-router-link-update__';\n\t\n\t    var activeId = 0;\n\t\n\t    Vue.directive('link-active', {\n\t      priority: 9999,\n\t      bind: function bind() {\n\t        var _this = this;\n\t\n\t        var id = String(activeId++);\n\t        // collect v-links contained within this element.\n\t        // we need do this here before the parent-child relationship\n\t        // gets messed up by terminal directives (if, for, components)\n\t        var childLinks = this.el.querySelectorAll('[v-link]');\n\t        for (var i = 0, l = childLinks.length; i < l; i++) {\n\t          var link = childLinks[i];\n\t          var existingId = link.getAttribute(LINK_UPDATE);\n\t          var value = existingId ? existingId + ',' + id : id;\n\t          // leave a mark on the link element which can be persisted\n\t          // through fragment clones.\n\t          link.setAttribute(LINK_UPDATE, value);\n\t        }\n\t        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n\t          if (link.activeIds.indexOf(id) > -1) {\n\t            link.updateClasses(path, _this.el);\n\t          }\n\t        });\n\t      },\n\t      unbind: function unbind() {\n\t        this.vm.$off(LINK_UPDATE, this.cb);\n\t      }\n\t    });\n\t\n\t    Vue.directive('link', {\n\t      priority: onPriority - 2,\n\t\n\t      bind: function bind() {\n\t        var vm = this.vm;\n\t        /* istanbul ignore if */\n\t        if (!vm.$route) {\n\t          warn$1('v-link can only be used inside a router-enabled app.');\n\t          return;\n\t        }\n\t        this.router = vm.$route.router;\n\t        // update things when the route changes\n\t        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n\t        // check v-link-active ids\n\t        var activeIds = this.el.getAttribute(LINK_UPDATE);\n\t        if (activeIds) {\n\t          this.el.removeAttribute(LINK_UPDATE);\n\t          this.activeIds = activeIds.split(',');\n\t        }\n\t        // no need to handle click if link expects to be opened\n\t        // in a new window/tab.\n\t        /* istanbul ignore if */\n\t        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n\t          return;\n\t        }\n\t        // handle click\n\t        this.handler = _bind(this.onClick, this);\n\t        this.el.addEventListener('click', this.handler);\n\t      },\n\t\n\t      update: function update(target) {\n\t        this.target = target;\n\t        if (isObject(target)) {\n\t          this.append = target.append;\n\t          this.exact = target.exact;\n\t          this.prevActiveClass = this.activeClass;\n\t          this.activeClass = target.activeClass;\n\t        }\n\t        this.onRouteUpdate(this.vm.$route);\n\t      },\n\t\n\t      onClick: function onClick(e) {\n\t        // don't redirect with control keys\n\t        /* istanbul ignore if */\n\t        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n\t        // don't redirect when preventDefault called\n\t        /* istanbul ignore if */\n\t        if (e.defaultPrevented) return;\n\t        // don't redirect on right click\n\t        /* istanbul ignore if */\n\t        if (e.button !== 0) return;\n\t\n\t        var target = this.target;\n\t        if (target) {\n\t          // v-link with expression, just go\n\t          e.preventDefault();\n\t          this.router.go(target);\n\t        } else {\n\t          // no expression, delegate for an <a> inside\n\t          var el = e.target;\n\t          while (el.tagName !== 'A' && el !== this.el) {\n\t            el = el.parentNode;\n\t          }\n\t          if (el.tagName === 'A' && sameOrigin(el)) {\n\t            e.preventDefault();\n\t            var path = el.pathname;\n\t            if (this.router.history.root) {\n\t              path = path.replace(this.router.history.rootRE, '');\n\t            }\n\t            this.router.go({\n\t              path: path,\n\t              replace: target && target.replace,\n\t              append: target && target.append\n\t            });\n\t          }\n\t        }\n\t      },\n\t\n\t      onRouteUpdate: function onRouteUpdate(route) {\n\t        // router.stringifyPath is dependent on current route\n\t        // and needs to be called again whenver route changes.\n\t        var newPath = this.router.stringifyPath(this.target);\n\t        if (this.path !== newPath) {\n\t          this.path = newPath;\n\t          this.updateActiveMatch();\n\t          this.updateHref();\n\t        }\n\t        if (this.activeIds) {\n\t          this.vm.$emit(LINK_UPDATE, this, route.path);\n\t        } else {\n\t          this.updateClasses(route.path, this.el);\n\t        }\n\t      },\n\t\n\t      updateActiveMatch: function updateActiveMatch() {\n\t        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n\t      },\n\t\n\t      updateHref: function updateHref() {\n\t        if (this.el.tagName !== 'A') {\n\t          return;\n\t        }\n\t        var path = this.path;\n\t        var router = this.router;\n\t        var isAbsolute = path.charAt(0) === '/';\n\t        // do not format non-hash relative paths\n\t        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n\t        if (href) {\n\t          this.el.href = href;\n\t        } else {\n\t          this.el.removeAttribute('href');\n\t        }\n\t      },\n\t\n\t      updateClasses: function updateClasses(path, el) {\n\t        var activeClass = this.activeClass || this.router._linkActiveClass;\n\t        // clear old class\n\t        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n\t          toggleClasses(el, this.prevActiveClass, removeClass);\n\t        }\n\t        // remove query string before matching\n\t        var dest = this.path.replace(queryStringRE, '');\n\t        path = path.replace(queryStringRE, '');\n\t        // add new class\n\t        if (this.exact) {\n\t          if (dest === path ||\n\t          // also allow additional trailing slash\n\t          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        } else {\n\t          if (this.activeRE && this.activeRE.test(path)) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        this.el.removeEventListener('click', this.handler);\n\t        this.unwatch && this.unwatch();\n\t      }\n\t    });\n\t\n\t    function sameOrigin(link) {\n\t      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n\t    }\n\t\n\t    // this function is copied from v-bind:class implementation until\n\t    // we properly expose it...\n\t    function toggleClasses(el, key, fn) {\n\t      key = key.trim();\n\t      if (key.indexOf(' ') === -1) {\n\t        fn(el, key);\n\t        return;\n\t      }\n\t      var keys = key.split(/\\s+/);\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        fn(el, keys[i]);\n\t      }\n\t    }\n\t  }\n\t\n\t  var historyBackends = {\n\t    abstract: AbstractHistory,\n\t    hash: HashHistory,\n\t    html5: HTML5History\n\t  };\n\t\n\t  // late bind during install\n\t  var Vue = undefined;\n\t\n\t  /**\n\t   * Router constructor\n\t   *\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  var Router = (function () {\n\t    function Router() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$hashbang = _ref.hashbang;\n\t      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n\t      var _ref$abstract = _ref.abstract;\n\t      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n\t      var _ref$history = _ref.history;\n\t      var history = _ref$history === undefined ? false : _ref$history;\n\t      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n\t      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n\t      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n\t      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n\t      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n\t      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n\t      var _ref$root = _ref.root;\n\t      var root = _ref$root === undefined ? null : _ref$root;\n\t      var _ref$linkActiveClass = _ref.linkActiveClass;\n\t      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n\t      babelHelpers.classCallCheck(this, Router);\n\t\n\t      /* istanbul ignore if */\n\t      if (!Router.installed) {\n\t        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n\t      }\n\t\n\t      // Vue instances\n\t      this.app = null;\n\t      this._children = [];\n\t\n\t      // route recognizer\n\t      this._recognizer = new RouteRecognizer();\n\t      this._guardRecognizer = new RouteRecognizer();\n\t\n\t      // state\n\t      this._started = false;\n\t      this._startCb = null;\n\t      this._currentRoute = {};\n\t      this._currentTransition = null;\n\t      this._previousTransition = null;\n\t      this._notFoundHandler = null;\n\t      this._notFoundRedirect = null;\n\t      this._beforeEachHooks = [];\n\t      this._afterEachHooks = [];\n\t\n\t      // trigger transition on initial render?\n\t      this._rendered = false;\n\t      this._transitionOnLoad = transitionOnLoad;\n\t\n\t      // history mode\n\t      this._root = root;\n\t      this._abstract = abstract;\n\t      this._hashbang = hashbang;\n\t\n\t      // check if HTML5 history is available\n\t      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n\t      this._history = history && hasPushState;\n\t      this._historyFallback = history && !hasPushState;\n\t\n\t      // create history object\n\t      var inBrowser = Vue.util.inBrowser;\n\t      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\t\n\t      var History = historyBackends[this.mode];\n\t      this.history = new History({\n\t        root: root,\n\t        hashbang: this._hashbang,\n\t        onChange: function onChange(path, state, anchor) {\n\t          _this._match(path, state, anchor);\n\t        }\n\t      });\n\t\n\t      // other options\n\t      this._saveScrollPosition = saveScrollPosition;\n\t      this._linkActiveClass = linkActiveClass;\n\t      this._suppress = suppressTransitionError;\n\t    }\n\t\n\t    /**\n\t     * Allow directly passing components to a route\n\t     * definition.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} handler\n\t     */\n\t\n\t    // API ===================================================\n\t\n\t    /**\n\t    * Register a map of top-level paths.\n\t    *\n\t    * @param {Object} map\n\t    */\n\t\n\t    Router.prototype.map = function map(_map) {\n\t      for (var route in _map) {\n\t        this.on(route, _map[route]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Register a single root-level path\n\t     *\n\t     * @param {String} rootPath\n\t     * @param {Object} handler\n\t     *                 - {String} component\n\t     *                 - {Object} [subRoutes]\n\t     *                 - {Boolean} [forceRefresh]\n\t     *                 - {Function} [before]\n\t     *                 - {Function} [after]\n\t     */\n\t\n\t    Router.prototype.on = function on(rootPath, handler) {\n\t      if (rootPath === '*') {\n\t        this._notFound(handler);\n\t      } else {\n\t        this._addRoute(rootPath, handler, []);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set redirects.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.redirect = function redirect(map) {\n\t      for (var path in map) {\n\t        this._addRedirect(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set aliases.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.alias = function alias(map) {\n\t      for (var path in map) {\n\t        this._addAlias(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global before hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.beforeEach = function beforeEach(fn) {\n\t      this._beforeEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global after hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.afterEach = function afterEach(fn) {\n\t      this._afterEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Navigate to a given path.\n\t     * The path can be an object describing a named path in\n\t     * the format of { name: '...', params: {}, query: {}}\n\t     * The path is assumed to be already decoded, and will\n\t     * be resolved against root (if provided)\n\t     *\n\t     * @param {String|Object} path\n\t     * @param {Boolean} [replace]\n\t     */\n\t\n\t    Router.prototype.go = function go(path) {\n\t      var replace = false;\n\t      var append = false;\n\t      if (Vue.util.isObject(path)) {\n\t        replace = path.replace;\n\t        append = path.append;\n\t      }\n\t      path = this.stringifyPath(path);\n\t      if (path) {\n\t        this.history.go(path, replace, append);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Short hand for replacing current path\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    Router.prototype.replace = function replace(path) {\n\t      if (typeof path === 'string') {\n\t        path = { path: path };\n\t      }\n\t      path.replace = true;\n\t      this.go(path);\n\t    };\n\t\n\t    /**\n\t     * Start the router.\n\t     *\n\t     * @param {VueConstructor} App\n\t     * @param {String|Element} container\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    Router.prototype.start = function start(App, container, cb) {\n\t      /* istanbul ignore if */\n\t      if (this._started) {\n\t        warn$1('already started.');\n\t        return;\n\t      }\n\t      this._started = true;\n\t      this._startCb = cb;\n\t      if (!this.app) {\n\t        /* istanbul ignore if */\n\t        if (!App || !container) {\n\t          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n\t        }\n\t        /* istanbul ignore if */\n\t        if (App instanceof Vue) {\n\t          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n\t        }\n\t        this._appContainer = container;\n\t        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n\t        // give it a name for better debugging\n\t        Ctor.options.name = Ctor.options.name || 'RouterApp';\n\t      }\n\t\n\t      // handle history fallback in browsers that do not\n\t      // support HTML5 history API\n\t      if (this._historyFallback) {\n\t        var _location = window.location;\n\t        var _history = new HTML5History({ root: this._root });\n\t        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n\t        if (path && path !== '/') {\n\t          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n\t          return;\n\t        }\n\t      }\n\t\n\t      this.history.start();\n\t    };\n\t\n\t    /**\n\t     * Stop listening to route changes.\n\t     */\n\t\n\t    Router.prototype.stop = function stop() {\n\t      this.history.stop();\n\t      this._started = false;\n\t    };\n\t\n\t    /**\n\t     * Normalize named route object / string paths into\n\t     * a string.\n\t     *\n\t     * @param {Object|String|Number} path\n\t     * @return {String}\n\t     */\n\t\n\t    Router.prototype.stringifyPath = function stringifyPath(path) {\n\t      var generatedPath = '';\n\t      if (path && typeof path === 'object') {\n\t        if (path.name) {\n\t          var extend = Vue.util.extend;\n\t          var currentParams = this._currentTransition && this._currentTransition.to.params;\n\t          var targetParams = path.params || {};\n\t          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n\t          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n\t        } else if (path.path) {\n\t          generatedPath = encodeURI(path.path);\n\t        }\n\t        if (path.query) {\n\t          // note: the generated query string is pre-URL-encoded by the recognizer\n\t          var query = this._recognizer.generateQueryString(path.query);\n\t          if (generatedPath.indexOf('?') > -1) {\n\t            generatedPath += '&' + query.slice(1);\n\t          } else {\n\t            generatedPath += query;\n\t          }\n\t        }\n\t      } else {\n\t        generatedPath = encodeURI(path ? path + '' : '');\n\t      }\n\t      return generatedPath;\n\t    };\n\t\n\t    // Internal methods ======================================\n\t\n\t    /**\n\t    * Add a route containing a list of segments to the internal\n\t    * route recognizer. Will be called recursively to add all\n\t    * possible sub-routes.\n\t    *\n\t    * @param {String} path\n\t    * @param {Object} handler\n\t    * @param {Array} segments\n\t    */\n\t\n\t    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n\t      guardComponent(path, handler);\n\t      handler.path = path;\n\t      handler.fullPath = (segments.reduce(function (path, segment) {\n\t        return path + segment.path;\n\t      }, '') + path).replace('//', '/');\n\t      segments.push({\n\t        path: path,\n\t        handler: handler\n\t      });\n\t      this._recognizer.add(segments, {\n\t        as: handler.name\n\t      });\n\t      // add sub routes\n\t      if (handler.subRoutes) {\n\t        for (var subPath in handler.subRoutes) {\n\t          // recursively walk all sub routes\n\t          this._addRoute(subPath, handler.subRoutes[subPath],\n\t          // pass a copy in recursion to avoid mutating\n\t          // across branches\n\t          segments.slice());\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Set the notFound route handler.\n\t     *\n\t     * @param {Object} handler\n\t     */\n\t\n\t    Router.prototype._notFound = function _notFound(handler) {\n\t      guardComponent('*', handler);\n\t      this._notFoundHandler = [{ handler: handler }];\n\t    };\n\t\n\t    /**\n\t     * Add a redirect record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} redirectPath\n\t     */\n\t\n\t    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n\t      if (path === '*') {\n\t        this._notFoundRedirect = redirectPath;\n\t      } else {\n\t        this._addGuard(path, redirectPath, this.replace);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Add an alias record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} aliasPath\n\t     */\n\t\n\t    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n\t      this._addGuard(path, aliasPath, this._match);\n\t    };\n\t\n\t    /**\n\t     * Add a path guard.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} mappedPath\n\t     * @param {Function} handler\n\t     */\n\t\n\t    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n\t      var _this2 = this;\n\t\n\t      this._guardRecognizer.add([{\n\t        path: path,\n\t        handler: function handler(match, query) {\n\t          var realPath = mapParams(mappedPath, match.params, query);\n\t          _handler.call(_this2, realPath);\n\t        }\n\t      }]);\n\t    };\n\t\n\t    /**\n\t     * Check if a path matches any redirect records.\n\t     *\n\t     * @param {String} path\n\t     * @return {Boolean} - if true, will skip normal match.\n\t     */\n\t\n\t    Router.prototype._checkGuard = function _checkGuard(path) {\n\t      var matched = this._guardRecognizer.recognize(path, true);\n\t      if (matched) {\n\t        matched[0].handler(matched[0], matched.queryParams);\n\t        return true;\n\t      } else if (this._notFoundRedirect) {\n\t        matched = this._recognizer.recognize(path);\n\t        if (!matched) {\n\t          this.replace(this._notFoundRedirect);\n\t          return true;\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Match a URL path and set the route context on vm,\n\t     * triggering view updates.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._match = function _match(path, state, anchor) {\n\t      var _this3 = this;\n\t\n\t      if (this._checkGuard(path)) {\n\t        return;\n\t      }\n\t\n\t      var currentRoute = this._currentRoute;\n\t      var currentTransition = this._currentTransition;\n\t\n\t      if (currentTransition) {\n\t        if (currentTransition.to.path === path) {\n\t          // do nothing if we have an active transition going to the same path\n\t          return;\n\t        } else if (currentRoute.path === path) {\n\t          // We are going to the same path, but we also have an ongoing but\n\t          // not-yet-validated transition. Abort that transition and reset to\n\t          // prev transition.\n\t          currentTransition.aborted = true;\n\t          this._currentTransition = this._prevTransition;\n\t          return;\n\t        } else {\n\t          // going to a totally different path. abort ongoing transition.\n\t          currentTransition.aborted = true;\n\t        }\n\t      }\n\t\n\t      // construct new route and transition context\n\t      var route = new Route(path, this);\n\t      var transition = new RouteTransition(this, route, currentRoute);\n\t\n\t      // current transition is updated right now.\n\t      // however, current route will only be updated after the transition has\n\t      // been validated.\n\t      this._prevTransition = currentTransition;\n\t      this._currentTransition = transition;\n\t\n\t      if (!this.app) {\n\t        (function () {\n\t          // initial render\n\t          var router = _this3;\n\t          _this3.app = new _this3._appConstructor({\n\t            el: _this3._appContainer,\n\t            created: function created() {\n\t              this.$router = router;\n\t            },\n\t            _meta: {\n\t              $route: route\n\t            }\n\t          });\n\t        })();\n\t      }\n\t\n\t      // check global before hook\n\t      var beforeHooks = this._beforeEachHooks;\n\t      var startTransition = function startTransition() {\n\t        transition.start(function () {\n\t          _this3._postTransition(route, state, anchor);\n\t        });\n\t      };\n\t\n\t      if (beforeHooks.length) {\n\t        transition.runQueue(beforeHooks, function (hook, _, next) {\n\t          if (transition === _this3._currentTransition) {\n\t            transition.callHook(hook, null, next, {\n\t              expectBoolean: true\n\t            });\n\t          }\n\t        }, startTransition);\n\t      } else {\n\t        startTransition();\n\t      }\n\t\n\t      if (!this._rendered && this._startCb) {\n\t        this._startCb.call(null);\n\t      }\n\t\n\t      // HACK:\n\t      // set rendered to true after the transition start, so\n\t      // that components that are acitvated synchronously know\n\t      // whether it is the initial render.\n\t      this._rendered = true;\n\t    };\n\t\n\t    /**\n\t     * Set current to the new transition.\n\t     * This is called by the transition object when the\n\t     * validation of a route has succeeded.\n\t     *\n\t     * @param {Transition} transition\n\t     */\n\t\n\t    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n\t      // set current route\n\t      var route = this._currentRoute = transition.to;\n\t      // update route context for all children\n\t      if (this.app.$route !== route) {\n\t        this.app.$route = route;\n\t        this._children.forEach(function (child) {\n\t          child.$route = route;\n\t        });\n\t      }\n\t      // call global after hook\n\t      if (this._afterEachHooks.length) {\n\t        this._afterEachHooks.forEach(function (hook) {\n\t          return hook.call(null, {\n\t            to: transition.to,\n\t            from: transition.from\n\t          });\n\t        });\n\t      }\n\t      this._currentTransition.done = true;\n\t    };\n\t\n\t    /**\n\t     * Handle stuff after the transition.\n\t     *\n\t     * @param {Route} route\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n\t      // handle scroll positions\n\t      // saved scroll positions take priority\n\t      // then we check if the path has an anchor\n\t      var pos = state && state.pos;\n\t      if (pos && this._saveScrollPosition) {\n\t        Vue.nextTick(function () {\n\t          window.scrollTo(pos.x, pos.y);\n\t        });\n\t      } else if (anchor) {\n\t        Vue.nextTick(function () {\n\t          var el = document.getElementById(anchor.slice(1));\n\t          if (el) {\n\t            window.scrollTo(window.scrollX, el.offsetTop);\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    return Router;\n\t  })();\n\t\n\t  function guardComponent(path, handler) {\n\t    var comp = handler.component;\n\t    if (Vue.util.isPlainObject(comp)) {\n\t      comp = handler.component = Vue.extend(comp);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (typeof comp !== 'function') {\n\t      handler.component = null;\n\t      warn$1('invalid component for route \"' + path + '\".');\n\t    }\n\t  }\n\t\n\t  /* Installation */\n\t\n\t  Router.installed = false;\n\t\n\t  /**\n\t   * Installation interface.\n\t   * Install the necessary directives.\n\t   */\n\t\n\t  Router.install = function (externalVue) {\n\t    /* istanbul ignore if */\n\t    if (Router.installed) {\n\t      warn$1('already installed.');\n\t      return;\n\t    }\n\t    Vue = externalVue;\n\t    applyOverride(Vue);\n\t    View(Vue);\n\t    Link(Vue);\n\t    exports$1.Vue = Vue;\n\t    Router.installed = true;\n\t  };\n\t\n\t  // auto install\n\t  /* istanbul ignore if */\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(Router);\n\t  }\n\t\n\t  return Router;\n\t\n\t}));\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.24\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n\tvar isWechat = UA && UA.indexOf('micromessenger') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined' && !(isWechat && isIos)) {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  if (!node) return false;\n\t  var doc = node.ownerDocument.documentElement;\n\t  var parent = node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (false) {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (false) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIos: isIos,\n\t\tisWechat: isWechat,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    (\"production\") !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  var _again = true;\n\t\n\t  _function: while (_again) {\n\t    _again = false;\n\t\n\t    runBatcherQueue(queue);\n\t    runBatcherQueue(userQueue);\n\t    // user watchers triggered more watchers,\n\t    // keep flushing until it depletes\n\t    if (queue.length) {\n\t      _again = true;\n\t      continue _function;\n\t    }\n\t    // dev tool hook\n\t    /* istanbul ignore if */\n\t    if (devtools && config.devtools) {\n\t      devtools.emit('flush');\n\t    }\n\t    resetBatcherState();\n\t  }\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  queue.length = 0;\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if (isA || isO) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (false) {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (false) {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node, true);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.24';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (false) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** /app.1231d8367f30865b8ba6.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap bfca9dce98a26aa3a7fe\n **/","import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport VueResource from 'vue-resource'\n\nimport App from './App'\nimport Home from './components/Home'\nimport Dashboard from './components/Dashboard'\nimport Share from './components/Share'\n\nVue.config.delimiters = ['[[', ']]']\nVue.config.debug = true\n\n// Apply VueResource and VueRouter to our Vue instance\nVue.use(VueResource)\nVue.use(VueRouter)\n\nconst router = new VueRouter()\n\n// Point routes to the components we'll use\nrouter.map({\n  '/': {\n    component: Home\n  },\n  '/dashboard': {\n    component: Dashboard\n  },\n  '/share': {\n    component: Share\n  }\n})\n\n// Any invalid route will redirect to home\nrouter.redirect({\n  '*': '/'\n})\n\nrouter.start(App, '#app')\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","<template>\n  <div id=\"wrapper\">\n    <div class=\"ui three top attached steps\">\n      <div class=\"active step\">\n        <a v-link=\"'/'\">\n        <div class=\"content\">\n          <div class=\"title\"><i class=\"upload icon\"></i>Upload</div>\n          <div class=\"description\">Upload the picture</div>\n        </div>\n        </a>\n      </div>\n      <div class=\"disabled step\">\n        <a v-link=\"'/dashboard'\">\n        <div class=\"content\">\n          <div class=\"title\"><i class=\"magic icon\"></i>Spice it up</div>\n          <div class=\"description\">Select effects to the photos</div>\n        </div>\n        </a>\n      </div>\n      <div class=\"disabled step\">\n        <div class=\"content\">\n          <div class=\"title\"><i class=\"share icon\"></i>Share</div>\n          <div class=\"description\">1-click share to Facebook</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div id=\"upload\" align=\"center\">\n    <div>\n      <h2>Select an image</h2>\n      <form>\n      <input type=\"file\" v-el=\"fileInput\" id=\"image\" class=\"form-control\" v-model=\"newInput.image\">\n      <button class=\"ui button\" v-on:click=\"onSubmitForm\">\n        <i class=\"upload icon\"></i>\n        Upload\n      </button>\n      </form>\n    </div>\n  </div>\n  <h4 class=\"ui horizontal divider header\">\n  <i class=\"camera icon\"></i>\n  Your Pictures\n</h4>\n  <div v-if=\"no_pics\" align=\"center\">\n    <i class=\"ui huge frown icon\"></i>\n    <h4>You have no photos on sJourney\n    <br>Why not upload one or more ...</h4>\n  </div>\n  <div v-if=\"pics\">\n    <div class=\"ui link cards\" >\n      <div class=\"card\" v-for=\"pic in pics\">\n        <div class=\"image\">\n          <img src=\"[[ pic.uploaded_image ]]\">\n        </div>\n        <div class=\"content\">\n          <div class=\"header\">[[ pic.name ]]</div>\n        <div class=\"extra content\">\n          <span class=\"right floated\">\n            [[ pic.size ]]\n          </span>\n          <span>\n            [[ pic.category.name ]]\n          </span>\n        </div>\n      </div>\n      </div>\n    </div>\n  </div>\n  <div v-else align=\"center\">\n  <h4>Please try reloading</h4>\n  </div>\n</template>\n\n<script>\nexport default {\n  ready: function () {\n    // GET request\n    this.$http.get('/api/v1/pics/').then(function (response) {\n      this.$set('pics', response.data)\n      console.log(response.data)\n      if (response.data.length === 0) {\n        this.$set('no_pics', true)\n      }\n    }, function (response) {\n    })\n  },\n  methods: {\n    onSubmitForm: function (e) {\n      e.preventDefault()\n      var input = this.newInput\n      // this.newInput = {name: '', image: ''}\n      // var category = {\n      //   text: input.name\n      // }\n      // input.image = this.$$.fileInput.files // Get the input as the DOM and get the files, With the v-model you are getting the name of the file\n      console.log(input)\n      // this.Categories.push(category)\n      this.$http.post('/api/v1/pics/', input).then(function (response) {\n        console.log(response.data)\n      }, function (response) {\n      // window.location.assign('/')\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .image {\n    padding: 5px;\n  }\n</style>\n\n\n/** WEBPACK FOOTER **\n ** Home.vue?1a411a37\n **/","module.exports = \"<div class=\\\"ui three top attached steps\\\"> <div class=\\\"active step\\\"> <a v-link=\\\"'/home'\\\"> <div class=content> <div class=title><i class=\\\"upload icon\\\"></i>Upload</div> <div class=description>Upload the picture</div> </div> </a> </div> <div class=\\\"disabled step\\\"> <a v-link=\\\"'/effects'\\\"> <div class=content> <div class=title><i class=\\\"magic icon\\\"></i>Spice it up</div> <div class=description>Select effects to the photos</div> </div> </a> </div> <div class=\\\"disabled step\\\"> <div class=content> <div class=title><i class=\\\"share icon\\\"></i>Share</div> <div class=description>1-click share to Facebook</div> </div> </div> </div>  <router-view></router-view>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = \"<div class=share> <div class=\\\"ui three top attached steps\\\"> <div class=step> <a v-link=\\\"'/'\\\"> <div class=content> <div class=title><i class=\\\"upload icon\\\"></i>Upload</div> <div class=description>Upload the picture</div> </div> </a> </div> <div class=step> <a v-link=\\\"'/dashboard'\\\"> <div class=content> <div class=title><i class=\\\"magic icon\\\"></i>Spice it up</div> <div class=description>Select effects to the photos</div> </div> </a> </div> <div class=\\\"active step\\\"> <div class=content> <div class=title><i class=\\\"share icon\\\"></i>Share</div> <div class=description>1-click share to Facebook</div> </div> </div> </div> </div> <div id=share align=center> <p>Share</p> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Share.vue\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = \"<div id=wrapper _v-20202014=\\\"\\\"> <div class=\\\"ui three top attached steps\\\" _v-20202014=\\\"\\\"> <div class=\\\"active step\\\" _v-20202014=\\\"\\\"> <a v-link=\\\"'/'\\\" _v-20202014=\\\"\\\"> <div class=content _v-20202014=\\\"\\\"> <div class=title _v-20202014=\\\"\\\"><i class=\\\"upload icon\\\" _v-20202014=\\\"\\\"></i>Upload</div> <div class=description _v-20202014=\\\"\\\">Upload the picture</div> </div> </a> </div> <div class=\\\"disabled step\\\" _v-20202014=\\\"\\\"> <a v-link=\\\"'/dashboard'\\\" _v-20202014=\\\"\\\"> <div class=content _v-20202014=\\\"\\\"> <div class=title _v-20202014=\\\"\\\"><i class=\\\"magic icon\\\" _v-20202014=\\\"\\\"></i>Spice it up</div> <div class=description _v-20202014=\\\"\\\">Select effects to the photos</div> </div> </a> </div> <div class=\\\"disabled step\\\" _v-20202014=\\\"\\\"> <div class=content _v-20202014=\\\"\\\"> <div class=title _v-20202014=\\\"\\\"><i class=\\\"share icon\\\" _v-20202014=\\\"\\\"></i>Share</div> <div class=description _v-20202014=\\\"\\\">1-click share to Facebook</div> </div> </div> </div> </div> <div id=upload align=center _v-20202014=\\\"\\\"> <div _v-20202014=\\\"\\\"> <h2 _v-20202014=\\\"\\\">Select an image</h2> <form _v-20202014=\\\"\\\"> <input type=file v-el=fileInput id=image class=form-control v-model=newInput.image _v-20202014=\\\"\\\"> <button class=\\\"ui button\\\" v-on:click=onSubmitForm _v-20202014=\\\"\\\"> <i class=\\\"upload icon\\\" _v-20202014=\\\"\\\"></i> Upload </button> </form> </div> </div> <h4 class=\\\"ui horizontal divider header\\\" _v-20202014=\\\"\\\"> <i class=\\\"camera icon\\\" _v-20202014=\\\"\\\"></i> Your Pictures </h4> <div v-if=no_pics align=center _v-20202014=\\\"\\\"> <i class=\\\"ui huge frown icon\\\" _v-20202014=\\\"\\\"></i> <h4 _v-20202014=\\\"\\\">You have no photos on sJourney <br _v-20202014=\\\"\\\">Why not upload one or more ...</h4> </div> <div v-if=pics _v-20202014=\\\"\\\"> <div class=\\\"ui link cards\\\" _v-20202014=\\\"\\\"> <div class=card v-for=\\\"pic in pics\\\" _v-20202014=\\\"\\\"> <div class=image _v-20202014=\\\"\\\"> <img src=\\\"[[ pic.uploaded_image ]]\\\" _v-20202014=\\\"\\\"> </div> <div class=content _v-20202014=\\\"\\\"> <div class=header _v-20202014=\\\"\\\">[[ pic.name ]]</div> <div class=\\\"extra content\\\" _v-20202014=\\\"\\\"> <span class=\\\"right floated\\\" _v-20202014=\\\"\\\"> [[ pic.size ]] </span> <span _v-20202014=\\\"\\\"> [[ pic.category.name ]] </span> </div> </div> </div> </div> </div> <div v-else=\\\"\\\" align=center _v-20202014=\\\"\\\"> <h4 _v-20202014=\\\"\\\">Please try reloading</h4> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-20202014!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Home.vue\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = \"<div class=dashboard _v-2612bd2f=\\\"\\\"> <div class=\\\"ui three top attached steps\\\" _v-2612bd2f=\\\"\\\"> <div class=step _v-2612bd2f=\\\"\\\"> <a v-link=\\\"'/'\\\" _v-2612bd2f=\\\"\\\"> <div class=content _v-2612bd2f=\\\"\\\"> <div class=title _v-2612bd2f=\\\"\\\"><i class=\\\"upload icon\\\" _v-2612bd2f=\\\"\\\"></i>Upload</div> <div class=description _v-2612bd2f=\\\"\\\">Upload the picture</div> </div> </a> </div> <div class=\\\"active step\\\" _v-2612bd2f=\\\"\\\"> <a v-link=\\\"'/dashboard'\\\" _v-2612bd2f=\\\"\\\"> <div class=content _v-2612bd2f=\\\"\\\"> <div class=title _v-2612bd2f=\\\"\\\"><i class=\\\"magic icon\\\" _v-2612bd2f=\\\"\\\"></i>Spice it up</div> <div class=description _v-2612bd2f=\\\"\\\">Select effects to the photos</div> </div> </a> </div> <div class=\\\"disabled step\\\" _v-2612bd2f=\\\"\\\"> <div class=content _v-2612bd2f=\\\"\\\"> <div class=title _v-2612bd2f=\\\"\\\"><i class=\\\"share icon\\\" _v-2612bd2f=\\\"\\\"></i>Share</div> <div class=description _v-2612bd2f=\\\"\\\">1-click share to Facebook</div> </div> </div> </div> <div align=center _v-2612bd2f=\\\"\\\"> <img class=\\\"ui centered medium image\\\" src=/media/pics/stanmd.jpg _v-2612bd2f=\\\"\\\"> <div class=\\\"ui buttons\\\" _v-2612bd2f=\\\"\\\"> <button class=\\\"ui button\\\" _v-2612bd2f=\\\"\\\">Cancel</button> <div class=or _v-2612bd2f=\\\"\\\"></div> <button class=\\\"ui positive button\\\" _v-2612bd2f=\\\"\\\"><i class=\\\"save icon\\\" _v-2612bd2f=\\\"\\\"></i>Save</button> <div class=or _v-2612bd2f=\\\"\\\"></div> <a v-link=\\\"{ path: '/share/', replace: true }\\\" _v-2612bd2f=\\\"\\\"> <button class=\\\"ui secondary button\\\" _v-2612bd2f=\\\"\\\"><i class=\\\"share icon\\\" _v-2612bd2f=\\\"\\\"></i>Share</button> </a> </div> </div> <div class=\\\"ui segment\\\" _v-2612bd2f=\\\"\\\"> <h2 class=\\\"ui right floated header\\\" _v-2612bd2f=\\\"\\\">Effects</h2> <div class=\\\"ui clearing divider\\\" _v-2612bd2f=\\\"\\\"> </div> <div class=\\\"fx_images ui small images\\\" _v-2612bd2f=\\\"\\\"> <span _v-2612bd2f=\\\"\\\">Black and White</span> <a _v-2612bd2f=\\\"\\\"> <img src=/media/previews/b_w.thumbnail _v-2612bd2f=\\\"\\\"> </a> <a _v-2612bd2f=\\\"\\\"> <img src=/media/previews/detail.thumbnail _v-2612bd2f=\\\"\\\"> </a> <a _v-2612bd2f=\\\"\\\"> <img src=/media/previews/blur.thumbnail _v-2612bd2f=\\\"\\\"> </a> <a _v-2612bd2f=\\\"\\\"> <img src=/media/previews/emboss.thumbnail _v-2612bd2f=\\\"\\\"> </a> <a _v-2612bd2f=\\\"\\\"> <img src=/media/previews/upside_down.thumbnail _v-2612bd2f=\\\"\\\"> </a> <a _v-2612bd2f=\\\"\\\"> <img src=/media/previews/find_edges.thumbnail _v-2612bd2f=\\\"\\\"> </a> <a _v-2612bd2f=\\\"\\\"> <img src=/media/previews/contour.thumbnail _v-2612bd2f=\\\"\\\"> </a> <a _v-2612bd2f=\\\"\\\"> <img src=/media/previews/contrast.thumbnail _v-2612bd2f=\\\"\\\"> </a> <a _v-2612bd2f=\\\"\\\"> <img src=/media/previews/bright.thumbnail _v-2612bd2f=\\\"\\\"> </a> <a _v-2612bd2f=\\\"\\\"> <img src=/media/previews/pixelate.thumbnail _v-2612bd2f=\\\"\\\"> </a> </div> </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-2612bd2f!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Dashboard.vue\n ** module id = 7\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_template__ = require(\"!!vue-html-loader!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./App.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/App.vue\n ** module id = 8\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-2612bd2f&scoped=true!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Dashboard.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/template-rewriter.js?id=_v-2612bd2f!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Dashboard.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Dashboard.vue\n ** module id = 9\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-20202014&scoped=true!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Home.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Home.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/template-rewriter.js?id=_v-20202014!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Home.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Home.vue\n ** module id = 10\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Share.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Share.vue\n ** module id = 11\n ** module chunks = 0\n **/","/**\n * vue-resource v0.7.2\n * https://github.com/vuejs/vue-resource\n * Released under the MIT License.\n */\n\nmodule.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Install plugin.\n\t */\n\n\tfunction plugin(Vue) {\n\n\t    if (plugin.installed) {\n\t        return;\n\t    }\n\n\t    var _ = __webpack_require__(1);\n\n\t    _.config = Vue.config;\n\t    _.warning = Vue.util.warn;\n\t    _.nextTick = Vue.util.nextTick;\n\n\t    Vue.url = __webpack_require__(2);\n\t    Vue.http = __webpack_require__(8);\n\t    Vue.resource = __webpack_require__(23);\n\t    Vue.Promise = __webpack_require__(10);\n\n\t    Object.defineProperties(Vue.prototype, {\n\n\t        $url: {\n\t            get: function get() {\n\t                return _.options(Vue.url, this, this.$options.url);\n\t            }\n\t        },\n\n\t        $http: {\n\t            get: function get() {\n\t                return _.options(Vue.http, this, this.$options.http);\n\t            }\n\t        },\n\n\t        $resource: {\n\t            get: function get() {\n\t                return Vue.resource.bind(this);\n\t            }\n\t        },\n\n\t        $promise: {\n\t            get: function get() {\n\t                var _this = this;\n\n\t                return function (executor) {\n\t                    return new Vue.Promise(executor, _this);\n\t                };\n\t            }\n\t        }\n\n\t    });\n\t}\n\n\tif (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(plugin);\n\t}\n\n\tmodule.exports = plugin;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n\t/**\n\t * Utility functions.\n\t */\n\n\tvar _ = exports,\n\t    array = [],\n\t    console = window.console;\n\n\t_.warn = function (msg) {\n\t    if (console && _.warning && (!_.config.silent || _.config.debug)) {\n\t        console.warn('[VueResource warn]: ' + msg);\n\t    }\n\t};\n\n\t_.error = function (msg) {\n\t    if (console) {\n\t        console.error(msg);\n\t    }\n\t};\n\n\t_.trim = function (str) {\n\t    return str.replace(/^\\s*|\\s*$/g, '');\n\t};\n\n\t_.toLower = function (str) {\n\t    return str ? str.toLowerCase() : '';\n\t};\n\n\t_.isArray = Array.isArray;\n\n\t_.isString = function (val) {\n\t    return typeof val === 'string';\n\t};\n\n\t_.isFunction = function (val) {\n\t    return typeof val === 'function';\n\t};\n\n\t_.isObject = function (obj) {\n\t    return obj !== null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n\t};\n\n\t_.isPlainObject = function (obj) {\n\t    return _.isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n\t};\n\n\t_.options = function (fn, obj, options) {\n\n\t    options = options || {};\n\n\t    if (_.isFunction(options)) {\n\t        options = options.call(obj);\n\t    }\n\n\t    return _.merge(fn.bind({ $vm: obj, $options: options }), fn, { $options: options });\n\t};\n\n\t_.each = function (obj, iterator) {\n\n\t    var i, key;\n\n\t    if (typeof obj.length == 'number') {\n\t        for (i = 0; i < obj.length; i++) {\n\t            iterator.call(obj[i], obj[i], i);\n\t        }\n\t    } else if (_.isObject(obj)) {\n\t        for (key in obj) {\n\t            if (obj.hasOwnProperty(key)) {\n\t                iterator.call(obj[key], obj[key], key);\n\t            }\n\t        }\n\t    }\n\n\t    return obj;\n\t};\n\n\t_.defaults = function (target, source) {\n\n\t    for (var key in source) {\n\t        if (target[key] === undefined) {\n\t            target[key] = source[key];\n\t        }\n\t    }\n\n\t    return target;\n\t};\n\n\t_.extend = function (target) {\n\n\t    var args = array.slice.call(arguments, 1);\n\n\t    args.forEach(function (arg) {\n\t        merge(target, arg);\n\t    });\n\n\t    return target;\n\t};\n\n\t_.merge = function (target) {\n\n\t    var args = array.slice.call(arguments, 1);\n\n\t    args.forEach(function (arg) {\n\t        merge(target, arg, true);\n\t    });\n\n\t    return target;\n\t};\n\n\tfunction merge(target, source, deep) {\n\t    for (var key in source) {\n\t        if (deep && (_.isPlainObject(source[key]) || _.isArray(source[key]))) {\n\t            if (_.isPlainObject(source[key]) && !_.isPlainObject(target[key])) {\n\t                target[key] = {};\n\t            }\n\t            if (_.isArray(source[key]) && !_.isArray(target[key])) {\n\t                target[key] = [];\n\t            }\n\t            merge(target[key], source[key], deep);\n\t        } else if (source[key] !== undefined) {\n\t            target[key] = source[key];\n\t        }\n\t    }\n\t}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Service for URL templating.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\tvar ie = document.documentMode;\n\tvar el = document.createElement('a');\n\n\tfunction Url(url, params) {\n\n\t    var options = url,\n\t        transform;\n\n\t    if (_.isString(url)) {\n\t        options = { url: url, params: params };\n\t    }\n\n\t    options = _.merge({}, Url.options, this.$options, options);\n\n\t    Url.transforms.forEach(function (handler) {\n\t        transform = factory(handler, transform, this.$vm);\n\t    }, this);\n\n\t    return transform(options);\n\t};\n\n\t/**\n\t * Url options.\n\t */\n\n\tUrl.options = {\n\t    url: '',\n\t    root: null,\n\t    params: {}\n\t};\n\n\t/**\n\t * Url transforms.\n\t */\n\n\tUrl.transforms = [__webpack_require__(3), __webpack_require__(5), __webpack_require__(6), __webpack_require__(7)];\n\n\t/**\n\t * Encodes a Url parameter string.\n\t *\n\t * @param {Object} obj\n\t */\n\n\tUrl.params = function (obj) {\n\n\t    var params = [],\n\t        escape = encodeURIComponent;\n\n\t    params.add = function (key, value) {\n\n\t        if (_.isFunction(value)) {\n\t            value = value();\n\t        }\n\n\t        if (value === null) {\n\t            value = '';\n\t        }\n\n\t        this.push(escape(key) + '=' + escape(value));\n\t    };\n\n\t    serialize(params, obj);\n\n\t    return params.join('&').replace(/%20/g, '+');\n\t};\n\n\t/**\n\t * Parse a URL and return its components.\n\t *\n\t * @param {String} url\n\t */\n\n\tUrl.parse = function (url) {\n\n\t    if (ie) {\n\t        el.href = url;\n\t        url = el.href;\n\t    }\n\n\t    el.href = url;\n\n\t    return {\n\t        href: el.href,\n\t        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n\t        port: el.port,\n\t        host: el.host,\n\t        hostname: el.hostname,\n\t        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n\t        search: el.search ? el.search.replace(/^\\?/, '') : '',\n\t        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n\t    };\n\t};\n\n\tfunction factory(handler, next, vm) {\n\t    return function (options) {\n\t        return handler.call(vm, options, next);\n\t    };\n\t}\n\n\tfunction serialize(params, obj, scope) {\n\n\t    var array = _.isArray(obj),\n\t        plain = _.isPlainObject(obj),\n\t        hash;\n\n\t    _.each(obj, function (value, key) {\n\n\t        hash = _.isObject(value) || _.isArray(value);\n\n\t        if (scope) {\n\t            key = scope + '[' + (plain || hash ? key : '') + ']';\n\t        }\n\n\t        if (!scope && array) {\n\t            params.add(value.name, value.value);\n\t        } else if (hash) {\n\t            serialize(params, value, key);\n\t        } else {\n\t            params.add(key, value);\n\t        }\n\t    });\n\t}\n\n\tmodule.exports = _.url = Url;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * URL Template (RFC 6570) Transform.\n\t */\n\n\tvar UrlTemplate = __webpack_require__(4);\n\n\tmodule.exports = function (options) {\n\n\t    var variables = [],\n\t        url = UrlTemplate.expand(options.url, options.params, variables);\n\n\t    variables.forEach(function (key) {\n\t        delete options.params[key];\n\t    });\n\n\t    return url;\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/**\n\t * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n\t */\n\n\texports.expand = function (url, params, variables) {\n\n\t    var tmpl = this.parse(url),\n\t        expanded = tmpl.expand(params);\n\n\t    if (variables) {\n\t        variables.push.apply(variables, tmpl.vars);\n\t    }\n\n\t    return expanded;\n\t};\n\n\texports.parse = function (template) {\n\n\t    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n\t        variables = [];\n\n\t    return {\n\t        vars: variables,\n\t        expand: function expand(context) {\n\t            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n\t                if (expression) {\n\n\t                    var operator = null,\n\t                        values = [];\n\n\t                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n\t                        operator = expression.charAt(0);\n\t                        expression = expression.substr(1);\n\t                    }\n\n\t                    expression.split(/,/g).forEach(function (variable) {\n\t                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n\t                        values.push.apply(values, exports.getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n\t                        variables.push(tmp[1]);\n\t                    });\n\n\t                    if (operator && operator !== '+') {\n\n\t                        var separator = ',';\n\n\t                        if (operator === '?') {\n\t                            separator = '&';\n\t                        } else if (operator !== '#') {\n\t                            separator = operator;\n\t                        }\n\n\t                        return (values.length !== 0 ? operator : '') + values.join(separator);\n\t                    } else {\n\t                        return values.join(',');\n\t                    }\n\t                } else {\n\t                    return exports.encodeReserved(literal);\n\t                }\n\t            });\n\t        }\n\t    };\n\t};\n\n\texports.getValues = function (context, operator, key, modifier) {\n\n\t    var value = context[key],\n\t        result = [];\n\n\t    if (this.isDefined(value) && value !== '') {\n\t        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n\t            value = value.toString();\n\n\t            if (modifier && modifier !== '*') {\n\t                value = value.substring(0, parseInt(modifier, 10));\n\t            }\n\n\t            result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n\t        } else {\n\t            if (modifier === '*') {\n\t                if (Array.isArray(value)) {\n\t                    value.filter(this.isDefined).forEach(function (value) {\n\t                        result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n\t                    }, this);\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (this.isDefined(value[k])) {\n\t                            result.push(this.encodeValue(operator, value[k], k));\n\t                        }\n\t                    }, this);\n\t                }\n\t            } else {\n\t                var tmp = [];\n\n\t                if (Array.isArray(value)) {\n\t                    value.filter(this.isDefined).forEach(function (value) {\n\t                        tmp.push(this.encodeValue(operator, value));\n\t                    }, this);\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (this.isDefined(value[k])) {\n\t                            tmp.push(encodeURIComponent(k));\n\t                            tmp.push(this.encodeValue(operator, value[k].toString()));\n\t                        }\n\t                    }, this);\n\t                }\n\n\t                if (this.isKeyOperator(operator)) {\n\t                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n\t                } else if (tmp.length !== 0) {\n\t                    result.push(tmp.join(','));\n\t                }\n\t            }\n\t        }\n\t    } else {\n\t        if (operator === ';') {\n\t            result.push(encodeURIComponent(key));\n\t        } else if (value === '' && (operator === '&' || operator === '?')) {\n\t            result.push(encodeURIComponent(key) + '=');\n\t        } else if (value === '') {\n\t            result.push('');\n\t        }\n\t    }\n\n\t    return result;\n\t};\n\n\texports.isDefined = function (value) {\n\t    return value !== undefined && value !== null;\n\t};\n\n\texports.isKeyOperator = function (operator) {\n\t    return operator === ';' || operator === '&' || operator === '?';\n\t};\n\n\texports.encodeValue = function (operator, value, key) {\n\n\t    value = operator === '+' || operator === '#' ? this.encodeReserved(value) : encodeURIComponent(value);\n\n\t    if (key) {\n\t        return encodeURIComponent(key) + '=' + value;\n\t    } else {\n\t        return value;\n\t    }\n\t};\n\n\texports.encodeReserved = function (str) {\n\t    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n\t        if (!/%[0-9A-Fa-f]/.test(part)) {\n\t            part = encodeURI(part);\n\t        }\n\t        return part;\n\t    }).join('');\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Legacy Transform.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\n\tmodule.exports = function (options, next) {\n\n\t    var variables = [],\n\t        url = next(options);\n\n\t    url = url.replace(/(\\/?):([a-z]\\w*)/gi, function (match, slash, name) {\n\n\t        _.warn('The `:' + name + '` parameter syntax has been deprecated. Use the `{' + name + '}` syntax instead.');\n\n\t        if (options.params[name]) {\n\t            variables.push(name);\n\t            return slash + encodeUriSegment(options.params[name]);\n\t        }\n\n\t        return '';\n\t    });\n\n\t    variables.forEach(function (key) {\n\t        delete options.params[key];\n\t    });\n\n\t    return url;\n\t};\n\n\tfunction encodeUriSegment(value) {\n\n\t    return encodeUriQuery(value, true).replace(/%26/gi, '&').replace(/%3D/gi, '=').replace(/%2B/gi, '+');\n\t}\n\n\tfunction encodeUriQuery(value, spaces) {\n\n\t    return encodeURIComponent(value).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, spaces ? '%20' : '+');\n\t}\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Query Parameter Transform.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\n\tmodule.exports = function (options, next) {\n\n\t    var urlParams = Object.keys(_.url.options.params),\n\t        query = {},\n\t        url = next(options);\n\n\t    _.each(options.params, function (value, key) {\n\t        if (urlParams.indexOf(key) === -1) {\n\t            query[key] = value;\n\t        }\n\t    });\n\n\t    query = _.url.params(query);\n\n\t    if (query) {\n\t        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n\t    }\n\n\t    return url;\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Root Prefix Transform.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\n\tmodule.exports = function (options, next) {\n\n\t    var url = next(options);\n\n\t    if (_.isString(options.root) && !url.match(/^(https?:)?\\//)) {\n\t        url = options.root + '/' + url;\n\t    }\n\n\t    return url;\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Service for sending network requests.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\tvar Client = __webpack_require__(9);\n\tvar Promise = __webpack_require__(10);\n\tvar interceptor = __webpack_require__(13);\n\tvar jsonType = { 'Content-Type': 'application/json' };\n\n\tfunction Http(url, options) {\n\t    var _this = this;\n\n\t    var client = Client,\n\t        request,\n\t        promise;\n\n\t    Http.interceptors.forEach(function (handler) {\n\t        client = interceptor(handler, _this.$vm)(client);\n\t    });\n\n\t    options = _.isObject(url) ? url : _.extend({ url: url }, options);\n\t    request = _.merge({}, Http.options, this.$options, options);\n\t    promise = client(request).bind(this.$vm).then(function (response) {\n\n\t        return response.ok ? response : Promise.reject(response);\n\t    }, function (response) {\n\n\t        if (response instanceof Error) {\n\t            _.error(response);\n\t        }\n\n\t        return Promise.reject(response);\n\t    });\n\n\t    if (request.success) {\n\t        promise.success(request.success);\n\t    }\n\n\t    if (request.error) {\n\t        promise.error(request.error);\n\t    }\n\n\t    return promise;\n\t}\n\n\tHttp.options = {\n\t    method: 'get',\n\t    data: '',\n\t    params: {},\n\t    headers: {},\n\t    xhr: null,\n\t    upload: null,\n\t    jsonp: 'callback',\n\t    beforeSend: null,\n\t    crossOrigin: null,\n\t    emulateHTTP: false,\n\t    emulateJSON: false,\n\t    timeout: 0\n\t};\n\n\tHttp.interceptors = [__webpack_require__(14), __webpack_require__(15), __webpack_require__(16), __webpack_require__(18), __webpack_require__(19), __webpack_require__(20), __webpack_require__(21)];\n\n\tHttp.headers = {\n\t    put: jsonType,\n\t    post: jsonType,\n\t    patch: jsonType,\n\t    delete: jsonType,\n\t    common: { 'Accept': 'application/json, text/plain, */*' },\n\t    custom: { 'X-Requested-With': 'XMLHttpRequest' }\n\t};\n\n\t['get', 'put', 'post', 'patch', 'delete', 'jsonp'].forEach(function (method) {\n\n\t    Http[method] = function (url, data, success, options) {\n\n\t        if (_.isFunction(data)) {\n\t            options = success;\n\t            success = data;\n\t            data = undefined;\n\t        }\n\n\t        if (_.isObject(success)) {\n\t            options = success;\n\t            success = undefined;\n\t        }\n\n\t        return this(url, _.extend({ method: method, data: data, success: success }, options));\n\t    };\n\t});\n\n\tmodule.exports = _.http = Http;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Base client.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\tvar Promise = __webpack_require__(10);\n\tvar xhrClient = __webpack_require__(12);\n\n\tmodule.exports = function (request) {\n\n\t    var response = (request.client || xhrClient)(request);\n\n\t    return Promise.resolve(response).then(function (response) {\n\n\t        if (response.headers) {\n\n\t            var headers = parseHeaders(response.headers);\n\n\t            response.headers = function (name) {\n\n\t                if (name) {\n\t                    return headers[_.toLower(name)];\n\t                }\n\n\t                return headers;\n\t            };\n\t        }\n\n\t        response.ok = response.status >= 200 && response.status < 300;\n\n\t        return response;\n\t    });\n\t};\n\n\tfunction parseHeaders(str) {\n\n\t    var headers = {},\n\t        value,\n\t        name,\n\t        i;\n\n\t    if (_.isString(str)) {\n\t        _.each(str.split('\\n'), function (row) {\n\n\t            i = row.indexOf(':');\n\t            name = _.trim(_.toLower(row.slice(0, i)));\n\t            value = _.trim(row.slice(i + 1));\n\n\t            if (headers[name]) {\n\n\t                if (_.isArray(headers[name])) {\n\t                    headers[name].push(value);\n\t                } else {\n\t                    headers[name] = [headers[name], value];\n\t                }\n\t            } else {\n\n\t                headers[name] = value;\n\t            }\n\t        });\n\t    }\n\n\t    return headers;\n\t}\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Promise adapter.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\tvar PromiseObj = window.Promise || __webpack_require__(11);\n\n\tfunction Promise(executor, context) {\n\n\t    if (executor instanceof PromiseObj) {\n\t        this.promise = executor;\n\t    } else {\n\t        this.promise = new PromiseObj(executor.bind(context));\n\t    }\n\n\t    this.context = context;\n\t}\n\n\tPromise.all = function (iterable, context) {\n\t    return new Promise(PromiseObj.all(iterable), context);\n\t};\n\n\tPromise.resolve = function (value, context) {\n\t    return new Promise(PromiseObj.resolve(value), context);\n\t};\n\n\tPromise.reject = function (reason, context) {\n\t    return new Promise(PromiseObj.reject(reason), context);\n\t};\n\n\tPromise.race = function (iterable, context) {\n\t    return new Promise(PromiseObj.race(iterable), context);\n\t};\n\n\tvar p = Promise.prototype;\n\n\tp.bind = function (context) {\n\t    this.context = context;\n\t    return this;\n\t};\n\n\tp.then = function (fulfilled, rejected) {\n\n\t    if (fulfilled && fulfilled.bind && this.context) {\n\t        fulfilled = fulfilled.bind(this.context);\n\t    }\n\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\n\t    this.promise = this.promise.then(fulfilled, rejected);\n\n\t    return this;\n\t};\n\n\tp.catch = function (rejected) {\n\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\n\t    this.promise = this.promise.catch(rejected);\n\n\t    return this;\n\t};\n\n\tp.finally = function (callback) {\n\n\t    return this.then(function (value) {\n\t        callback.call(this);\n\t        return value;\n\t    }, function (reason) {\n\t        callback.call(this);\n\t        return PromiseObj.reject(reason);\n\t    });\n\t};\n\n\tp.success = function (callback) {\n\n\t    _.warn('The `success` method has been deprecated. Use the `then` method instead.');\n\n\t    return this.then(function (response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    });\n\t};\n\n\tp.error = function (callback) {\n\n\t    _.warn('The `error` method has been deprecated. Use the `catch` method instead.');\n\n\t    return this.catch(function (response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    });\n\t};\n\n\tp.always = function (callback) {\n\n\t    _.warn('The `always` method has been deprecated. Use the `finally` method instead.');\n\n\t    var cb = function cb(response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    };\n\n\t    return this.then(cb, cb);\n\t};\n\n\tmodule.exports = Promise;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n\t/**\n\t * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n\t */\n\n\tvar _ = __webpack_require__(1);\n\n\tvar RESOLVED = 0;\n\tvar REJECTED = 1;\n\tvar PENDING = 2;\n\n\tfunction Promise(executor) {\n\n\t    this.state = PENDING;\n\t    this.value = undefined;\n\t    this.deferred = [];\n\n\t    var promise = this;\n\n\t    try {\n\t        executor(function (x) {\n\t            promise.resolve(x);\n\t        }, function (r) {\n\t            promise.reject(r);\n\t        });\n\t    } catch (e) {\n\t        promise.reject(e);\n\t    }\n\t}\n\n\tPromise.reject = function (r) {\n\t    return new Promise(function (resolve, reject) {\n\t        reject(r);\n\t    });\n\t};\n\n\tPromise.resolve = function (x) {\n\t    return new Promise(function (resolve, reject) {\n\t        resolve(x);\n\t    });\n\t};\n\n\tPromise.all = function all(iterable) {\n\t    return new Promise(function (resolve, reject) {\n\t        var count = 0,\n\t            result = [];\n\n\t        if (iterable.length === 0) {\n\t            resolve(result);\n\t        }\n\n\t        function resolver(i) {\n\t            return function (x) {\n\t                result[i] = x;\n\t                count += 1;\n\n\t                if (count === iterable.length) {\n\t                    resolve(result);\n\t                }\n\t            };\n\t        }\n\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise.resolve(iterable[i]).then(resolver(i), reject);\n\t        }\n\t    });\n\t};\n\n\tPromise.race = function race(iterable) {\n\t    return new Promise(function (resolve, reject) {\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise.resolve(iterable[i]).then(resolve, reject);\n\t        }\n\t    });\n\t};\n\n\tvar p = Promise.prototype;\n\n\tp.resolve = function resolve(x) {\n\t    var promise = this;\n\n\t    if (promise.state === PENDING) {\n\t        if (x === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\n\t        var called = false;\n\n\t        try {\n\t            var then = x && x['then'];\n\n\t            if (x !== null && (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && typeof then === 'function') {\n\t                then.call(x, function (x) {\n\t                    if (!called) {\n\t                        promise.resolve(x);\n\t                    }\n\t                    called = true;\n\t                }, function (r) {\n\t                    if (!called) {\n\t                        promise.reject(r);\n\t                    }\n\t                    called = true;\n\t                });\n\t                return;\n\t            }\n\t        } catch (e) {\n\t            if (!called) {\n\t                promise.reject(e);\n\t            }\n\t            return;\n\t        }\n\n\t        promise.state = RESOLVED;\n\t        promise.value = x;\n\t        promise.notify();\n\t    }\n\t};\n\n\tp.reject = function reject(reason) {\n\t    var promise = this;\n\n\t    if (promise.state === PENDING) {\n\t        if (reason === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\n\t        promise.state = REJECTED;\n\t        promise.value = reason;\n\t        promise.notify();\n\t    }\n\t};\n\n\tp.notify = function notify() {\n\t    var promise = this;\n\n\t    _.nextTick(function () {\n\t        if (promise.state !== PENDING) {\n\t            while (promise.deferred.length) {\n\t                var deferred = promise.deferred.shift(),\n\t                    onResolved = deferred[0],\n\t                    onRejected = deferred[1],\n\t                    resolve = deferred[2],\n\t                    reject = deferred[3];\n\n\t                try {\n\t                    if (promise.state === RESOLVED) {\n\t                        if (typeof onResolved === 'function') {\n\t                            resolve(onResolved.call(undefined, promise.value));\n\t                        } else {\n\t                            resolve(promise.value);\n\t                        }\n\t                    } else if (promise.state === REJECTED) {\n\t                        if (typeof onRejected === 'function') {\n\t                            resolve(onRejected.call(undefined, promise.value));\n\t                        } else {\n\t                            reject(promise.value);\n\t                        }\n\t                    }\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            }\n\t        }\n\t    });\n\t};\n\n\tp.then = function then(onResolved, onRejected) {\n\t    var promise = this;\n\n\t    return new Promise(function (resolve, reject) {\n\t        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n\t        promise.notify();\n\t    });\n\t};\n\n\tp.catch = function (onRejected) {\n\t    return this.then(undefined, onRejected);\n\t};\n\n\tmodule.exports = Promise;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * XMLHttp client.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\tvar Promise = __webpack_require__(10);\n\n\tmodule.exports = function (request) {\n\t    return new Promise(function (resolve) {\n\n\t        var xhr = new XMLHttpRequest(),\n\t            response = { request: request },\n\t            handler;\n\n\t        request.cancel = function () {\n\t            xhr.abort();\n\t        };\n\n\t        xhr.open(request.method, _.url(request), true);\n\n\t        handler = function handler(event) {\n\n\t            response.data = xhr.responseText;\n\t            response.status = xhr.status;\n\t            response.statusText = xhr.statusText;\n\t            response.headers = xhr.getAllResponseHeaders();\n\n\t            resolve(response);\n\t        };\n\n\t        xhr.timeout = 0;\n\t        xhr.onload = handler;\n\t        xhr.onabort = handler;\n\t        xhr.onerror = handler;\n\t        xhr.ontimeout = function () {};\n\t        xhr.onprogress = function () {};\n\n\t        if (_.isPlainObject(request.xhr)) {\n\t            _.extend(xhr, request.xhr);\n\t        }\n\n\t        if (_.isPlainObject(request.upload)) {\n\t            _.extend(xhr.upload, request.upload);\n\t        }\n\n\t        _.each(request.headers || {}, function (value, header) {\n\t            xhr.setRequestHeader(header, value);\n\t        });\n\n\t        xhr.send(request.data);\n\t    });\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Interceptor factory.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\tvar Promise = __webpack_require__(10);\n\n\tmodule.exports = function (handler, vm) {\n\n\t    return function (client) {\n\n\t        if (_.isFunction(handler)) {\n\t            handler = handler.call(vm, Promise);\n\t        }\n\n\t        return function (request) {\n\n\t            if (_.isFunction(handler.request)) {\n\t                request = handler.request.call(vm, request);\n\t            }\n\n\t            return when(request, function (request) {\n\t                return when(client(request), function (response) {\n\n\t                    if (_.isFunction(handler.response)) {\n\t                        response = handler.response.call(vm, response);\n\t                    }\n\n\t                    return response;\n\t                });\n\t            });\n\t        };\n\t    };\n\t};\n\n\tfunction when(value, fulfilled, rejected) {\n\n\t    var promise = Promise.resolve(value);\n\n\t    if (arguments.length < 2) {\n\t        return promise;\n\t    }\n\n\t    return promise.then(fulfilled, rejected);\n\t}\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Before Interceptor.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\n\tmodule.exports = {\n\n\t    request: function request(_request) {\n\n\t        if (_.isFunction(_request.beforeSend)) {\n\t            _request.beforeSend.call(this, _request);\n\t        }\n\n\t        return _request;\n\t    }\n\n\t};\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Timeout Interceptor.\n\t */\n\n\tmodule.exports = function () {\n\n\t    var timeout;\n\n\t    return {\n\n\t        request: function request(_request) {\n\n\t            if (_request.timeout) {\n\t                timeout = setTimeout(function () {\n\t                    _request.cancel();\n\t                }, _request.timeout);\n\t            }\n\n\t            return _request;\n\t        },\n\n\t        response: function response(_response) {\n\n\t            clearTimeout(timeout);\n\n\t            return _response;\n\t        }\n\n\t    };\n\t};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * JSONP Interceptor.\n\t */\n\n\tvar jsonpClient = __webpack_require__(17);\n\n\tmodule.exports = {\n\n\t    request: function request(_request) {\n\n\t        if (_request.method == 'JSONP') {\n\t            _request.client = jsonpClient;\n\t        }\n\n\t        return _request;\n\t    }\n\n\t};\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * JSONP client.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\tvar Promise = __webpack_require__(10);\n\n\tmodule.exports = function (request) {\n\t    return new Promise(function (resolve) {\n\n\t        var callback = '_jsonp' + Math.random().toString(36).substr(2),\n\t            response = { request: request, data: null },\n\t            handler,\n\t            script;\n\n\t        request.params[request.jsonp] = callback;\n\t        request.cancel = function () {\n\t            handler({ type: 'cancel' });\n\t        };\n\n\t        script = document.createElement('script');\n\t        script.src = _.url(request);\n\t        script.type = 'text/javascript';\n\t        script.async = true;\n\n\t        window[callback] = function (data) {\n\t            response.data = data;\n\t        };\n\n\t        handler = function handler(event) {\n\n\t            if (event.type === 'load' && response.data !== null) {\n\t                response.status = 200;\n\t            } else if (event.type === 'error') {\n\t                response.status = 404;\n\t            } else {\n\t                response.status = 0;\n\t            }\n\n\t            resolve(response);\n\n\t            delete window[callback];\n\t            document.body.removeChild(script);\n\t        };\n\n\t        script.onload = handler;\n\t        script.onerror = handler;\n\n\t        document.body.appendChild(script);\n\t    });\n\t};\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t/**\n\t * HTTP method override Interceptor.\n\t */\n\n\tmodule.exports = {\n\n\t    request: function request(_request) {\n\n\t        if (_request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(_request.method)) {\n\t            _request.headers['X-HTTP-Method-Override'] = _request.method;\n\t            _request.method = 'POST';\n\t        }\n\n\t        return _request;\n\t    }\n\n\t};\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Mime Interceptor.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\n\tmodule.exports = {\n\n\t    request: function request(_request) {\n\n\t        if (_request.emulateJSON && _.isPlainObject(_request.data)) {\n\t            _request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n\t            _request.data = _.url.params(_request.data);\n\t        }\n\n\t        if (_.isObject(_request.data) && /FormData/i.test(_request.data.toString())) {\n\t            delete _request.headers['Content-Type'];\n\t        }\n\n\t        if (_.isPlainObject(_request.data)) {\n\t            _request.data = JSON.stringify(_request.data);\n\t        }\n\n\t        return _request;\n\t    },\n\n\t    response: function response(_response) {\n\n\t        try {\n\t            _response.data = JSON.parse(_response.data);\n\t        } catch (e) {}\n\n\t        return _response;\n\t    }\n\n\t};\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Header Interceptor.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\n\tmodule.exports = {\n\n\t    request: function request(_request) {\n\n\t        _request.method = _request.method.toUpperCase();\n\t        _request.headers = _.extend({}, _.http.headers.common, !_request.crossOrigin ? _.http.headers.custom : {}, _.http.headers[_request.method.toLowerCase()], _request.headers);\n\n\t        if (_.isPlainObject(_request.data) && /^(GET|JSONP)$/i.test(_request.method)) {\n\t            _.extend(_request.params, _request.data);\n\t            delete _request.data;\n\t        }\n\n\t        return _request;\n\t    }\n\n\t};\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * CORS Interceptor.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\tvar xdrClient = __webpack_require__(22);\n\tvar xhrCors = 'withCredentials' in new XMLHttpRequest();\n\tvar originUrl = _.url.parse(location.href);\n\n\tmodule.exports = {\n\n\t    request: function request(_request) {\n\n\t        if (_request.crossOrigin === null) {\n\t            _request.crossOrigin = crossOrigin(_request);\n\t        }\n\n\t        if (_request.crossOrigin) {\n\n\t            if (!xhrCors) {\n\t                _request.client = xdrClient;\n\t            }\n\n\t            _request.emulateHTTP = false;\n\t        }\n\n\t        return _request;\n\t    }\n\n\t};\n\n\tfunction crossOrigin(request) {\n\n\t    var requestUrl = _.url.parse(_.url(request));\n\n\t    return requestUrl.protocol !== originUrl.protocol || requestUrl.host !== originUrl.host;\n\t}\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * XDomain client (Internet Explorer).\n\t */\n\n\tvar _ = __webpack_require__(1);\n\tvar Promise = __webpack_require__(10);\n\n\tmodule.exports = function (request) {\n\t    return new Promise(function (resolve) {\n\n\t        var xdr = new XDomainRequest(),\n\t            response = { request: request },\n\t            handler;\n\n\t        request.cancel = function () {\n\t            xdr.abort();\n\t        };\n\n\t        xdr.open(request.method, _.url(request), true);\n\n\t        handler = function handler(event) {\n\n\t            response.data = xdr.responseText;\n\t            response.status = xdr.status;\n\t            response.statusText = xdr.statusText;\n\n\t            resolve(response);\n\t        };\n\n\t        xdr.timeout = 0;\n\t        xdr.onload = handler;\n\t        xdr.onabort = handler;\n\t        xdr.onerror = handler;\n\t        xdr.ontimeout = function () {};\n\t        xdr.onprogress = function () {};\n\n\t        xdr.send(request.data);\n\t    });\n\t};\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Service for interacting with RESTful services.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\n\tfunction Resource(url, params, actions, options) {\n\n\t    var self = this,\n\t        resource = {};\n\n\t    actions = _.extend({}, Resource.actions, actions);\n\n\t    _.each(actions, function (action, name) {\n\n\t        action = _.merge({ url: url, params: params || {} }, options, action);\n\n\t        resource[name] = function () {\n\t            return (self.$http || _.http)(opts(action, arguments));\n\t        };\n\t    });\n\n\t    return resource;\n\t}\n\n\tfunction opts(action, args) {\n\n\t    var options = _.extend({}, action),\n\t        params = {},\n\t        data,\n\t        success,\n\t        error;\n\n\t    switch (args.length) {\n\n\t        case 4:\n\n\t            error = args[3];\n\t            success = args[2];\n\n\t        case 3:\n\t        case 2:\n\n\t            if (_.isFunction(args[1])) {\n\n\t                if (_.isFunction(args[0])) {\n\n\t                    success = args[0];\n\t                    error = args[1];\n\n\t                    break;\n\t                }\n\n\t                success = args[1];\n\t                error = args[2];\n\t            } else {\n\n\t                params = args[0];\n\t                data = args[1];\n\t                success = args[2];\n\n\t                break;\n\t            }\n\n\t        case 1:\n\n\t            if (_.isFunction(args[0])) {\n\t                success = args[0];\n\t            } else if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n\t                data = args[0];\n\t            } else {\n\t                params = args[0];\n\t            }\n\n\t            break;\n\n\t        case 0:\n\n\t            break;\n\n\t        default:\n\n\t            throw 'Expected up to 4 arguments [params, data, success, error], got ' + args.length + ' arguments';\n\t    }\n\n\t    options.data = data;\n\t    options.params = _.extend({}, options.params, params);\n\n\t    if (success) {\n\t        options.success = success;\n\t    }\n\n\t    if (error) {\n\t        options.error = error;\n\t    }\n\n\t    return options;\n\t}\n\n\tResource.actions = {\n\n\t    get: { method: 'GET' },\n\t    save: { method: 'POST' },\n\t    query: { method: 'GET' },\n\t    update: { method: 'PUT' },\n\t    remove: { method: 'DELETE' },\n\t    delete: { method: 'DELETE' }\n\n\t};\n\n\tmodule.exports = _.resource = Resource;\n\n/***/ }\n/******/ ]);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/dist/vue-resource.common.js\n ** module id = 12\n ** module chunks = 0\n **/","/*!\n * vue-router v0.7.13\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.VueRouter = factory();\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  function Target(path, matcher, delegate) {\n    this.path = path;\n    this.matcher = matcher;\n    this.delegate = delegate;\n  }\n\n  Target.prototype = {\n    to: function to(target, callback) {\n      var delegate = this.delegate;\n\n      if (delegate && delegate.willAddRoute) {\n        target = delegate.willAddRoute(this.matcher.target, target);\n      }\n\n      this.matcher.add(this.path, target);\n\n      if (callback) {\n        if (callback.length === 0) {\n          throw new Error(\"You must have an argument in the function passed to `to`\");\n        }\n        this.matcher.addChild(this.path, target, callback, this.delegate);\n      }\n      return this;\n    }\n  };\n\n  function Matcher(target) {\n    this.routes = {};\n    this.children = {};\n    this.target = target;\n  }\n\n  Matcher.prototype = {\n    add: function add(path, handler) {\n      this.routes[path] = handler;\n    },\n\n    addChild: function addChild(path, target, callback, delegate) {\n      var matcher = new Matcher(target);\n      this.children[path] = matcher;\n\n      var match = generateMatch(path, matcher, delegate);\n\n      if (delegate && delegate.contextEntered) {\n        delegate.contextEntered(target, match);\n      }\n\n      callback(match);\n    }\n  };\n\n  function generateMatch(startingPath, matcher, delegate) {\n    return function (path, nestedCallback) {\n      var fullPath = startingPath + path;\n\n      if (nestedCallback) {\n        nestedCallback(generateMatch(fullPath, matcher, delegate));\n      } else {\n        return new Target(startingPath + path, matcher, delegate);\n      }\n    };\n  }\n\n  function addRoute(routeArray, path, handler) {\n    var len = 0;\n    for (var i = 0, l = routeArray.length; i < l; i++) {\n      len += routeArray[i].path.length;\n    }\n\n    path = path.substr(len);\n    var route = { path: path, handler: handler };\n    routeArray.push(route);\n  }\n\n  function eachRoute(baseRoute, matcher, callback, binding) {\n    var routes = matcher.routes;\n\n    for (var path in routes) {\n      if (routes.hasOwnProperty(path)) {\n        var routeArray = baseRoute.slice();\n        addRoute(routeArray, path, routes[path]);\n\n        if (matcher.children[path]) {\n          eachRoute(routeArray, matcher.children[path], callback, binding);\n        } else {\n          callback.call(binding, routeArray);\n        }\n      }\n    }\n  }\n\n  function map (callback, addRouteCallback) {\n    var matcher = new Matcher();\n\n    callback(generateMatch(\"\", matcher, this.delegate));\n\n    eachRoute([], matcher, function (route) {\n      if (addRouteCallback) {\n        addRouteCallback(this, route);\n      } else {\n        this.add(route);\n      }\n    }, this);\n  }\n\n  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\n  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\n  var noWarning = false;\n  function warn(msg) {\n    if (!noWarning && typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  function tryDecode(uri, asComponent) {\n    try {\n      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n    } catch (e) {\n      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n    }\n  }\n\n  function isArray(test) {\n    return Object.prototype.toString.call(test) === \"[object Array]\";\n  }\n\n  // A Segment represents a segment in the original route description.\n  // Each Segment type provides an `eachChar` and `regex` method.\n  //\n  // The `eachChar` method invokes the callback with one or more character\n  // specifications. A character specification consumes one or more input\n  // characters.\n  //\n  // The `regex` method returns a regex fragment for the segment. If the\n  // segment is a dynamic of star segment, the regex fragment also includes\n  // a capture.\n  //\n  // A character specification contains:\n  //\n  // * `validChars`: a String with a list of all valid characters, or\n  // * `invalidChars`: a String with a list of all invalid characters\n  // * `repeat`: true if the character specification can repeat\n\n  function StaticSegment(string) {\n    this.string = string;\n  }\n  StaticSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      var string = this.string,\n          ch;\n\n      for (var i = 0, l = string.length; i < l; i++) {\n        ch = string.charAt(i);\n        callback({ validChars: ch });\n      }\n    },\n\n    regex: function regex() {\n      return this.string.replace(escapeRegex, '\\\\$1');\n    },\n\n    generate: function generate() {\n      return this.string;\n    }\n  };\n\n  function DynamicSegment(name) {\n    this.name = name;\n  }\n  DynamicSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"/\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"([^/]+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function StarSegment(name) {\n    this.name = name;\n  }\n  StarSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"(.+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function EpsilonSegment() {}\n  EpsilonSegment.prototype = {\n    eachChar: function eachChar() {},\n    regex: function regex() {\n      return \"\";\n    },\n    generate: function generate() {\n      return \"\";\n    }\n  };\n\n  function parse(route, names, specificity) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (route.charAt(0) === \"/\") {\n      route = route.substr(1);\n    }\n\n    var segments = route.split(\"/\"),\n        results = [];\n\n    // A routes has specificity determined by the order that its different segments\n    // appear in. This system mirrors how the magnitude of numbers written as strings\n    // works.\n    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n    // leading symbol, \"1\".\n    // The rule is that symbols to the left carry more weight than symbols to the right\n    // when a number is written out as a string. In the above strings, the leading digit\n    // represents how many 100's are in the number, and it carries more weight than the middle\n    // number which represents how many 10's are in the number.\n    // This system of number magnitude works well for route specificity, too. A route written as\n    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n    // `x`, irrespective of the other parts.\n    // Because of this similarity, we assign each type of segment a number value written as a\n    // string. We can find the specificity of compound routes by concatenating these strings\n    // together, from left to right. After we have looped through all of the segments,\n    // we convert the string to a number.\n    specificity.val = '';\n\n    for (var i = 0, l = segments.length; i < l; i++) {\n      var segment = segments[i],\n          match;\n\n      if (match = segment.match(/^:([^\\/]+)$/)) {\n        results.push(new DynamicSegment(match[1]));\n        names.push(match[1]);\n        specificity.val += '3';\n      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n        results.push(new StarSegment(match[1]));\n        specificity.val += '2';\n        names.push(match[1]);\n      } else if (segment === \"\") {\n        results.push(new EpsilonSegment());\n        specificity.val += '1';\n      } else {\n        results.push(new StaticSegment(segment));\n        specificity.val += '4';\n      }\n    }\n\n    specificity.val = +specificity.val;\n\n    return results;\n  }\n\n  // A State has a character specification and (`charSpec`) and a list of possible\n  // subsequent states (`nextStates`).\n  //\n  // If a State is an accepting state, it will also have several additional\n  // properties:\n  //\n  // * `regex`: A regular expression that is used to extract parameters from paths\n  //   that reached this accepting state.\n  // * `handlers`: Information on how to convert the list of captures into calls\n  //   to registered handlers with the specified parameters\n  // * `types`: How many static, dynamic or star segments in this route. Used to\n  //   decide which route to use if multiple registered routes match a path.\n  //\n  // Currently, State is implemented naively by looping over `nextStates` and\n  // comparing a character specification against a character. A more efficient\n  // implementation would use a hash of keys pointing at one or more next states.\n\n  function State(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  State.prototype = {\n    get: function get(charSpec) {\n      var nextStates = this.nextStates;\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        var child = nextStates[i];\n\n        var isEqual = child.charSpec.validChars === charSpec.validChars;\n        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\n        if (isEqual) {\n          return child;\n        }\n      }\n    },\n\n    put: function put(charSpec) {\n      var state;\n\n      // If the character specification already exists in a child of the current\n      // state, just return that state.\n      if (state = this.get(charSpec)) {\n        return state;\n      }\n\n      // Make a new state for the character spec\n      state = new State(charSpec);\n\n      // Insert the new state as a child of the current state\n      this.nextStates.push(state);\n\n      // If this character specification repeats, insert the new state as a child\n      // of itself. Note that this will not trigger an infinite loop because each\n      // transition during recognition consumes a character.\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n\n      // Return the new state\n      return state;\n    },\n\n    // Find a list of child states matching the next character\n    match: function match(ch) {\n      // DEBUG \"Processing `\" + ch + \"`:\"\n      var nextStates = this.nextStates,\n          child,\n          charSpec,\n          chars;\n\n      // DEBUG \"  \" + debugState(this)\n      var returned = [];\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        child = nextStates[i];\n\n        charSpec = child.charSpec;\n\n        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n          if (chars.indexOf(ch) !== -1) {\n            returned.push(child);\n          }\n        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n          if (chars.indexOf(ch) === -1) {\n            returned.push(child);\n          }\n        }\n      }\n\n      return returned;\n    }\n\n    /** IF DEBUG\n    , debug: function() {\n      var charSpec = this.charSpec,\n          debug = \"[\",\n          chars = charSpec.validChars || charSpec.invalidChars;\n       if (charSpec.invalidChars) { debug += \"^\"; }\n      debug += chars;\n      debug += \"]\";\n       if (charSpec.repeat) { debug += \"+\"; }\n       return debug;\n    }\n    END IF **/\n  };\n\n  /** IF DEBUG\n  function debug(log) {\n    console.log(log);\n  }\n\n  function debugState(state) {\n    return state.nextStates.map(function(n) {\n      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n    }).join(\", \")\n  }\n  END IF **/\n\n  // Sort the routes by specificity\n  function sortSolutions(states) {\n    return states.sort(function (a, b) {\n      return b.specificity.val - a.specificity.val;\n    });\n  }\n\n  function recognizeChar(states, ch) {\n    var nextStates = [];\n\n    for (var i = 0, l = states.length; i < l; i++) {\n      var state = states[i];\n\n      nextStates = nextStates.concat(state.match(ch));\n    }\n\n    return nextStates;\n  }\n\n  var oCreate = Object.create || function (proto) {\n    function F() {}\n    F.prototype = proto;\n    return new F();\n  };\n\n  function RecognizeResults(queryParams) {\n    this.queryParams = queryParams || {};\n  }\n  RecognizeResults.prototype = oCreate({\n    splice: Array.prototype.splice,\n    slice: Array.prototype.slice,\n    push: Array.prototype.push,\n    length: 0,\n    queryParams: null\n  });\n\n  function findHandler(state, path, queryParams) {\n    var handlers = state.handlers,\n        regex = state.regex;\n    var captures = path.match(regex),\n        currentCapture = 1;\n    var result = new RecognizeResults(queryParams);\n\n    for (var i = 0, l = handlers.length; i < l; i++) {\n      var handler = handlers[i],\n          names = handler.names,\n          params = {};\n\n      for (var j = 0, m = names.length; j < m; j++) {\n        params[names[j]] = captures[currentCapture++];\n      }\n\n      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n    }\n\n    return result;\n  }\n\n  function addSegment(currentState, segment) {\n    segment.eachChar(function (ch) {\n      var state;\n\n      currentState = currentState.put(ch);\n    });\n\n    return currentState;\n  }\n\n  function decodeQueryParamPart(part) {\n    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n    part = part.replace(/\\+/gm, '%20');\n    return tryDecode(part, true);\n  }\n\n  // The main interface\n\n  var RouteRecognizer = function RouteRecognizer() {\n    this.rootState = new State();\n    this.names = {};\n  };\n\n  RouteRecognizer.prototype = {\n    add: function add(routes, options) {\n      var currentState = this.rootState,\n          regex = \"^\",\n          specificity = {},\n          handlers = [],\n          allSegments = [],\n          name;\n\n      var isEmpty = true;\n\n      for (var i = 0, l = routes.length; i < l; i++) {\n        var route = routes[i],\n            names = [];\n\n        var segments = parse(route.path, names, specificity);\n\n        allSegments = allSegments.concat(segments);\n\n        for (var j = 0, m = segments.length; j < m; j++) {\n          var segment = segments[j];\n\n          if (segment instanceof EpsilonSegment) {\n            continue;\n          }\n\n          isEmpty = false;\n\n          // Add a \"/\" for the new segment\n          currentState = currentState.put({ validChars: \"/\" });\n          regex += \"/\";\n\n          // Add a representation of the segment to the NFA and regex\n          currentState = addSegment(currentState, segment);\n          regex += segment.regex();\n        }\n\n        var handler = { handler: route.handler, names: names };\n        handlers.push(handler);\n      }\n\n      if (isEmpty) {\n        currentState = currentState.put({ validChars: \"/\" });\n        regex += \"/\";\n      }\n\n      currentState.handlers = handlers;\n      currentState.regex = new RegExp(regex + \"$\");\n      currentState.specificity = specificity;\n\n      if (name = options && options.as) {\n        this.names[name] = {\n          segments: allSegments,\n          handlers: handlers\n        };\n      }\n    },\n\n    handlersFor: function handlersFor(name) {\n      var route = this.names[name],\n          result = [];\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      for (var i = 0, l = route.handlers.length; i < l; i++) {\n        result.push(route.handlers[i]);\n      }\n\n      return result;\n    },\n\n    hasRoute: function hasRoute(name) {\n      return !!this.names[name];\n    },\n\n    generate: function generate(name, params) {\n      var route = this.names[name],\n          output = \"\";\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      var segments = route.segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i];\n\n        if (segment instanceof EpsilonSegment) {\n          continue;\n        }\n\n        output += \"/\";\n        output += segment.generate(params);\n      }\n\n      if (output.charAt(0) !== '/') {\n        output = '/' + output;\n      }\n\n      if (params && params.queryParams) {\n        output += this.generateQueryString(params.queryParams);\n      }\n\n      return output;\n    },\n\n    generateQueryString: function generateQueryString(params) {\n      var pairs = [];\n      var keys = [];\n      for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n          keys.push(key);\n        }\n      }\n      keys.sort();\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        var value = params[key];\n        if (value == null) {\n          continue;\n        }\n        var pair = encodeURIComponent(key);\n        if (isArray(value)) {\n          for (var j = 0, l = value.length; j < l; j++) {\n            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n            pairs.push(arrayPair);\n          }\n        } else {\n          pair += \"=\" + encodeURIComponent(value);\n          pairs.push(pair);\n        }\n      }\n\n      if (pairs.length === 0) {\n        return '';\n      }\n\n      return \"?\" + pairs.join(\"&\");\n    },\n\n    parseQueryString: function parseQueryString(queryString) {\n      var pairs = queryString.split(\"&\"),\n          queryParams = {};\n      for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('='),\n            key = decodeQueryParamPart(pair[0]),\n            keyLength = key.length,\n            isArray = false,\n            value;\n        if (pair.length === 1) {\n          value = 'true';\n        } else {\n          //Handle arrays\n          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n            isArray = true;\n            key = key.slice(0, keyLength - 2);\n            if (!queryParams[key]) {\n              queryParams[key] = [];\n            }\n          }\n          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n        }\n        if (isArray) {\n          queryParams[key].push(value);\n        } else {\n          queryParams[key] = value;\n        }\n      }\n      return queryParams;\n    },\n\n    recognize: function recognize(path, silent) {\n      noWarning = silent;\n      var states = [this.rootState],\n          pathLen,\n          i,\n          l,\n          queryStart,\n          queryParams = {},\n          isSlashDropped = false;\n\n      queryStart = path.indexOf('?');\n      if (queryStart !== -1) {\n        var queryString = path.substr(queryStart + 1, path.length);\n        path = path.substr(0, queryStart);\n        if (queryString) {\n          queryParams = this.parseQueryString(queryString);\n        }\n      }\n\n      path = tryDecode(path);\n      if (!path) return;\n\n      // DEBUG GROUP path\n\n      if (path.charAt(0) !== \"/\") {\n        path = \"/\" + path;\n      }\n\n      pathLen = path.length;\n      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n        path = path.substr(0, pathLen - 1);\n        isSlashDropped = true;\n      }\n\n      for (i = 0, l = path.length; i < l; i++) {\n        states = recognizeChar(states, path.charAt(i));\n        if (!states.length) {\n          break;\n        }\n      }\n\n      // END DEBUG GROUP\n\n      var solutions = [];\n      for (i = 0, l = states.length; i < l; i++) {\n        if (states[i].handlers) {\n          solutions.push(states[i]);\n        }\n      }\n\n      states = sortSolutions(solutions);\n\n      var state = solutions[0];\n\n      if (state && state.handlers) {\n        // if a trailing slash was dropped and a star segment is the last segment\n        // specified, put the trailing slash back\n        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n          path = path + \"/\";\n        }\n        return findHandler(state, path, queryParams);\n      }\n    }\n  };\n\n  RouteRecognizer.prototype.map = map;\n\n  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\n  // export default for holding the Vue reference\n  var exports$1 = {};\n  /**\n   * Warn stuff.\n   *\n   * @param {String} msg\n   */\n\n  function warn$1(msg) {\n    /* istanbul ignore next */\n    if (typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  /**\n   * Resolve a relative path.\n   *\n   * @param {String} base\n   * @param {String} relative\n   * @param {Boolean} append\n   * @return {String}\n   */\n\n  function resolvePath(base, relative, append) {\n    var query = base.match(/(\\?.*)$/);\n    if (query) {\n      query = query[1];\n      base = base.slice(0, -query.length);\n    }\n    // a query!\n    if (relative.charAt(0) === '?') {\n      return base + relative;\n    }\n    var stack = base.split('/');\n    // remove trailing segment if:\n    // - not appending\n    // - appending to trailing slash (last segment is empty)\n    if (!append || !stack[stack.length - 1]) {\n      stack.pop();\n    }\n    // resolve relative path\n    var segments = relative.replace(/^\\//, '').split('/');\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      if (segment === '.') {\n        continue;\n      } else if (segment === '..') {\n        stack.pop();\n      } else {\n        stack.push(segment);\n      }\n    }\n    // ensure leading slash\n    if (stack[0] !== '') {\n      stack.unshift('');\n    }\n    return stack.join('/');\n  }\n\n  /**\n   * Forgiving check for a promise\n   *\n   * @param {Object} p\n   * @return {Boolean}\n   */\n\n  function isPromise(p) {\n    return p && typeof p.then === 'function';\n  }\n\n  /**\n   * Retrive a route config field from a component instance\n   * OR a component contructor.\n   *\n   * @param {Function|Vue} component\n   * @param {String} name\n   * @return {*}\n   */\n\n  function getRouteConfig(component, name) {\n    var options = component && (component.$options || component.options);\n    return options && options.route && options.route[name];\n  }\n\n  /**\n   * Resolve an async component factory. Have to do a dirty\n   * mock here because of Vue core's internal API depends on\n   * an ID check.\n   *\n   * @param {Object} handler\n   * @param {Function} cb\n   */\n\n  var resolver = undefined;\n\n  function resolveAsyncComponent(handler, cb) {\n    if (!resolver) {\n      resolver = {\n        resolve: exports$1.Vue.prototype._resolveComponent,\n        $options: {\n          components: {\n            _: handler.component\n          }\n        }\n      };\n    } else {\n      resolver.$options.components._ = handler.component;\n    }\n    resolver.resolve('_', function (Component) {\n      handler.component = Component;\n      cb(Component);\n    });\n  }\n\n  /**\n   * Map the dynamic segments in a path to params.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @param {Object} query\n   */\n\n  function mapParams(path, params, query) {\n    if (params === undefined) params = {};\n\n    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n      var val = params[key];\n      /* istanbul ignore if */\n      if (!val) {\n        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n      }\n      return val || '';\n    });\n    if (query) {\n      path += genQuery(query);\n    }\n    return path;\n  }\n\n  var hashRE = /#.*$/;\n\n  var HTML5History = (function () {\n    function HTML5History(_ref) {\n      var root = _ref.root;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HTML5History);\n\n      if (root && root !== '/') {\n        // make sure there's the starting slash\n        if (root.charAt(0) !== '/') {\n          root = '/' + root;\n        }\n        // remove trailing slash\n        this.root = root.replace(/\\/$/, '');\n        this.rootRE = new RegExp('^\\\\' + this.root);\n      } else {\n        this.root = null;\n      }\n      this.onChange = onChange;\n      // check base tag\n      var baseEl = document.querySelector('base');\n      this.base = baseEl && baseEl.getAttribute('href');\n    }\n\n    HTML5History.prototype.start = function start() {\n      var _this = this;\n\n      this.listener = function (e) {\n        var url = location.pathname + location.search;\n        if (_this.root) {\n          url = url.replace(_this.rootRE, '');\n        }\n        _this.onChange(url, e && e.state, location.hash);\n      };\n      window.addEventListener('popstate', this.listener);\n      this.listener();\n    };\n\n    HTML5History.prototype.stop = function stop() {\n      window.removeEventListener('popstate', this.listener);\n    };\n\n    HTML5History.prototype.go = function go(path, replace, append) {\n      var url = this.formatPath(path, append);\n      if (replace) {\n        history.replaceState({}, '', url);\n      } else {\n        // record scroll position by replacing current state\n        history.replaceState({\n          pos: {\n            x: window.pageXOffset,\n            y: window.pageYOffset\n          }\n        }, '', location.href);\n        // then push new state\n        history.pushState({}, '', url);\n      }\n      var hashMatch = path.match(hashRE);\n      var hash = hashMatch && hashMatch[0];\n      path = url\n      // strip hash so it doesn't mess up params\n      .replace(hashRE, '')\n      // remove root before matching\n      .replace(this.rootRE, '');\n      this.onChange(path, null, hash);\n    };\n\n    HTML5History.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/'\n      // absolute path\n      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n    };\n\n    return HTML5History;\n  })();\n\n  var HashHistory = (function () {\n    function HashHistory(_ref) {\n      var hashbang = _ref.hashbang;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HashHistory);\n\n      this.hashbang = hashbang;\n      this.onChange = onChange;\n    }\n\n    HashHistory.prototype.start = function start() {\n      var self = this;\n      this.listener = function () {\n        var path = location.hash;\n        var raw = path.replace(/^#!?/, '');\n        // always\n        if (raw.charAt(0) !== '/') {\n          raw = '/' + raw;\n        }\n        var formattedPath = self.formatPath(raw);\n        if (formattedPath !== path) {\n          location.replace(formattedPath);\n          return;\n        }\n        // determine query\n        // note it's possible to have queries in both the actual URL\n        // and the hash fragment itself.\n        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n        self.onChange(path.replace(/^#!?/, '') + query);\n      };\n      window.addEventListener('hashchange', this.listener);\n      this.listener();\n    };\n\n    HashHistory.prototype.stop = function stop() {\n      window.removeEventListener('hashchange', this.listener);\n    };\n\n    HashHistory.prototype.go = function go(path, replace, append) {\n      path = this.formatPath(path, append);\n      if (replace) {\n        location.replace(path);\n      } else {\n        location.hash = path;\n      }\n    };\n\n    HashHistory.prototype.formatPath = function formatPath(path, append) {\n      var isAbsoloute = path.charAt(0) === '/';\n      var prefix = '#' + (this.hashbang ? '!' : '');\n      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n    };\n\n    return HashHistory;\n  })();\n\n  var AbstractHistory = (function () {\n    function AbstractHistory(_ref) {\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, AbstractHistory);\n\n      this.onChange = onChange;\n      this.currentPath = '/';\n    }\n\n    AbstractHistory.prototype.start = function start() {\n      this.onChange('/');\n    };\n\n    AbstractHistory.prototype.stop = function stop() {\n      // noop\n    };\n\n    AbstractHistory.prototype.go = function go(path, replace, append) {\n      path = this.currentPath = this.formatPath(path, append);\n      this.onChange(path);\n    };\n\n    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n    };\n\n    return AbstractHistory;\n  })();\n\n  /**\n   * Determine the reusability of an existing router view.\n   *\n   * @param {Directive} view\n   * @param {Object} handler\n   * @param {Transition} transition\n   */\n\n  function canReuse(view, handler, transition) {\n    var component = view.childVM;\n    if (!component || !handler) {\n      return false;\n    }\n    // important: check view.Component here because it may\n    // have been changed in activate hook\n    if (view.Component !== handler.component) {\n      return false;\n    }\n    var canReuseFn = getRouteConfig(component, 'canReuse');\n    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n      to: transition.to,\n      from: transition.from\n    }) : true; // defaults to true\n  }\n\n  /**\n   * Check if a component can deactivate.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canDeactivate(view, transition, next) {\n    var fromComponent = view.childVM;\n    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHook(hook, fromComponent, next, {\n        expectBoolean: true\n      });\n    }\n  }\n\n  /**\n   * Check if a component can activate.\n   *\n   * @param {Object} handler\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canActivate(handler, transition, next) {\n    resolveAsyncComponent(handler, function (Component) {\n      // have to check due to async-ness\n      if (transition.aborted) {\n        return;\n      }\n      // determine if this component can be activated\n      var hook = getRouteConfig(Component, 'canActivate');\n      if (!hook) {\n        next();\n      } else {\n        transition.callHook(hook, null, next, {\n          expectBoolean: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Call deactivate hooks for existing router-views.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function deactivate(view, transition, next) {\n    var component = view.childVM;\n    var hook = getRouteConfig(component, 'deactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHooks(hook, component, next);\n    }\n  }\n\n  /**\n   * Activate / switch component for a router-view.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Number} depth\n   * @param {Function} [cb]\n   */\n\n  function activate(view, transition, depth, cb, reuse) {\n    var handler = transition.activateQueue[depth];\n    if (!handler) {\n      saveChildView(view);\n      if (view._bound) {\n        view.setComponent(null);\n      }\n      cb && cb();\n      return;\n    }\n\n    var Component = view.Component = handler.component;\n    var activateHook = getRouteConfig(Component, 'activate');\n    var dataHook = getRouteConfig(Component, 'data');\n    var waitForData = getRouteConfig(Component, 'waitForData');\n\n    view.depth = depth;\n    view.activated = false;\n\n    var component = undefined;\n    var loading = !!(dataHook && !waitForData);\n\n    // \"reuse\" is a flag passed down when the parent view is\n    // either reused via keep-alive or as a child of a kept-alive view.\n    // of course we can only reuse if the current kept-alive instance\n    // is of the correct type.\n    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\n    if (reuse) {\n      // just reuse\n      component = view.childVM;\n      component.$loadingRouteData = loading;\n    } else {\n      saveChildView(view);\n\n      // unbuild current component. this step also destroys\n      // and removes all nested child views.\n      view.unbuild(true);\n\n      // build the new component. this will also create the\n      // direct child view of the current one. it will register\n      // itself as view.childView.\n      component = view.build({\n        _meta: {\n          $loadingRouteData: loading\n        },\n        created: function created() {\n          this._routerView = view;\n        }\n      });\n\n      // handle keep-alive.\n      // when a kept-alive child vm is restored, we need to\n      // add its cached child views into the router's view list,\n      // and also properly update current view's child view.\n      if (view.keepAlive) {\n        component.$loadingRouteData = loading;\n        var cachedChildView = component._keepAliveRouterView;\n        if (cachedChildView) {\n          view.childView = cachedChildView;\n          component._keepAliveRouterView = null;\n        }\n      }\n    }\n\n    // cleanup the component in case the transition is aborted\n    // before the component is ever inserted.\n    var cleanup = function cleanup() {\n      component.$destroy();\n    };\n\n    // actually insert the component and trigger transition\n    var insert = function insert() {\n      if (reuse) {\n        cb && cb();\n        return;\n      }\n      var router = transition.router;\n      if (router._rendered || router._transitionOnLoad) {\n        view.transition(component);\n      } else {\n        // no transition on first render, manual transition\n        /* istanbul ignore if */\n        if (view.setCurrent) {\n          // 0.12 compat\n          view.setCurrent(component);\n        } else {\n          // 1.0\n          view.childVM = component;\n        }\n        component.$before(view.anchor, null, false);\n      }\n      cb && cb();\n    };\n\n    var afterData = function afterData() {\n      // activate the child view\n      if (view.childView) {\n        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n      }\n      insert();\n    };\n\n    // called after activation hook is resolved\n    var afterActivate = function afterActivate() {\n      view.activated = true;\n      if (dataHook && waitForData) {\n        // wait until data loaded to insert\n        loadData(component, transition, dataHook, afterData, cleanup);\n      } else {\n        // load data and insert at the same time\n        if (dataHook) {\n          loadData(component, transition, dataHook);\n        }\n        afterData();\n      }\n    };\n\n    if (activateHook) {\n      transition.callHooks(activateHook, component, afterActivate, {\n        cleanup: cleanup,\n        postActivate: true\n      });\n    } else {\n      afterActivate();\n    }\n  }\n\n  /**\n   * Reuse a view, just reload data if necessary.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   */\n\n  function reuse(view, transition) {\n    var component = view.childVM;\n    var dataHook = getRouteConfig(component, 'data');\n    if (dataHook) {\n      loadData(component, transition, dataHook);\n    }\n  }\n\n  /**\n   * Asynchronously load and apply data to component.\n   *\n   * @param {Vue} component\n   * @param {Transition} transition\n   * @param {Function} hook\n   * @param {Function} cb\n   * @param {Function} cleanup\n   */\n\n  function loadData(component, transition, hook, cb, cleanup) {\n    component.$loadingRouteData = true;\n    transition.callHooks(hook, component, function () {\n      component.$loadingRouteData = false;\n      component.$emit('route-data-loaded', component);\n      cb && cb();\n    }, {\n      cleanup: cleanup,\n      postActivate: true,\n      processData: function processData(data) {\n        // handle promise sugar syntax\n        var promises = [];\n        if (isPlainObject(data)) {\n          Object.keys(data).forEach(function (key) {\n            var val = data[key];\n            if (isPromise(val)) {\n              promises.push(val.then(function (resolvedVal) {\n                component.$set(key, resolvedVal);\n              }));\n            } else {\n              component.$set(key, val);\n            }\n          });\n        }\n        if (promises.length) {\n          return promises[0].constructor.all(promises);\n        }\n      }\n    });\n  }\n\n  /**\n   * Save the child view for a kept-alive view so that\n   * we can restore it when it is switched back to.\n   *\n   * @param {Directive} view\n   */\n\n  function saveChildView(view) {\n    if (view.keepAlive && view.childVM && view.childView) {\n      view.childVM._keepAliveRouterView = view.childView;\n    }\n    view.childView = null;\n  }\n\n  /**\n   * Check plain object.\n   *\n   * @param {*} val\n   */\n\n  function isPlainObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  /**\n   * A RouteTransition object manages the pipeline of a\n   * router-view switching process. This is also the object\n   * passed into user route hooks.\n   *\n   * @param {Router} router\n   * @param {Route} to\n   * @param {Route} from\n   */\n\n  var RouteTransition = (function () {\n    function RouteTransition(router, to, from) {\n      babelHelpers.classCallCheck(this, RouteTransition);\n\n      this.router = router;\n      this.to = to;\n      this.from = from;\n      this.next = null;\n      this.aborted = false;\n      this.done = false;\n    }\n\n    /**\n     * Abort current transition and return to previous location.\n     */\n\n    RouteTransition.prototype.abort = function abort() {\n      if (!this.aborted) {\n        this.aborted = true;\n        // if the root path throws an error during validation\n        // on initial load, it gets caught in an infinite loop.\n        var abortingOnLoad = !this.from.path && this.to.path === '/';\n        if (!abortingOnLoad) {\n          this.router.replace(this.from.path || '/');\n        }\n      }\n    };\n\n    /**\n     * Abort current transition and redirect to a new location.\n     *\n     * @param {String} path\n     */\n\n    RouteTransition.prototype.redirect = function redirect(path) {\n      if (!this.aborted) {\n        this.aborted = true;\n        if (typeof path === 'string') {\n          path = mapParams(path, this.to.params, this.to.query);\n        } else {\n          path.params = path.params || this.to.params;\n          path.query = path.query || this.to.query;\n        }\n        this.router.replace(path);\n      }\n    };\n\n    /**\n     * A router view transition's pipeline can be described as\n     * follows, assuming we are transitioning from an existing\n     * <router-view> chain [Component A, Component B] to a new\n     * chain [Component A, Component C]:\n     *\n     *  A    A\n     *  | => |\n     *  B    C\n     *\n     * 1. Reusablity phase:\n     *   -> canReuse(A, A)\n     *   -> canReuse(B, C)\n     *   -> determine new queues:\n     *      - deactivation: [B]\n     *      - activation: [C]\n     *\n     * 2. Validation phase:\n     *   -> canDeactivate(B)\n     *   -> canActivate(C)\n     *\n     * 3. Activation phase:\n     *   -> deactivate(B)\n     *   -> activate(C)\n     *\n     * Each of these steps can be asynchronous, and any\n     * step can potentially abort the transition.\n     *\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.start = function start(cb) {\n      var transition = this;\n\n      // determine the queue of views to deactivate\n      var deactivateQueue = [];\n      var view = this.router._rootView;\n      while (view) {\n        deactivateQueue.unshift(view);\n        view = view.childView;\n      }\n      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\n      // determine the queue of route handlers to activate\n      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n        return match.handler;\n      });\n\n      // 1. Reusability phase\n      var i = undefined,\n          reuseQueue = undefined;\n      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n          break;\n        }\n      }\n      if (i > 0) {\n        reuseQueue = reverseDeactivateQueue.slice(0, i);\n        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n        activateQueue = activateQueue.slice(i);\n      }\n\n      // 2. Validation phase\n      transition.runQueue(deactivateQueue, canDeactivate, function () {\n        transition.runQueue(activateQueue, canActivate, function () {\n          transition.runQueue(deactivateQueue, deactivate, function () {\n            // 3. Activation phase\n\n            // Update router current route\n            transition.router._onTransitionValidated(transition);\n\n            // trigger reuse for all reused views\n            reuseQueue && reuseQueue.forEach(function (view) {\n              return reuse(view, transition);\n            });\n\n            // the root of the chain that needs to be replaced\n            // is the top-most non-reusable view.\n            if (deactivateQueue.length) {\n              var _view = deactivateQueue[deactivateQueue.length - 1];\n              var depth = reuseQueue ? reuseQueue.length : 0;\n              activate(_view, transition, depth, cb);\n            } else {\n              cb();\n            }\n          });\n        });\n      });\n    };\n\n    /**\n     * Asynchronously and sequentially apply a function to a\n     * queue.\n     *\n     * @param {Array} queue\n     * @param {Function} fn\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n      var transition = this;\n      step(0);\n      function step(index) {\n        if (index >= queue.length) {\n          cb();\n        } else {\n          fn(queue[index], transition, function () {\n            step(index + 1);\n          });\n        }\n      }\n    };\n\n    /**\n     * Call a user provided route transition hook and handle\n     * the response (e.g. if the user returns a promise).\n     *\n     * If the user neither expects an argument nor returns a\n     * promise, the hook is assumed to be synchronous.\n     *\n     * @param {Function} hook\n     * @param {*} [context]\n     * @param {Function} [cb]\n     * @param {Object} [options]\n     *                 - {Boolean} expectBoolean\n     *                 - {Boolean} postActive\n     *                 - {Function} processData\n     *                 - {Function} cleanup\n     */\n\n    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n      var _ref$expectBoolean = _ref.expectBoolean;\n      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n      var _ref$postActivate = _ref.postActivate;\n      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n      var processData = _ref.processData;\n      var cleanup = _ref.cleanup;\n\n      var transition = this;\n      var nextCalled = false;\n\n      // abort the transition\n      var abort = function abort() {\n        cleanup && cleanup();\n        transition.abort();\n      };\n\n      // handle errors\n      var onError = function onError(err) {\n        postActivate ? next() : abort();\n        if (err && !transition.router._suppress) {\n          warn$1('Uncaught error during transition: ');\n          throw err instanceof Error ? err : new Error(err);\n        }\n      };\n\n      // since promise swallows errors, we have to\n      // throw it in the next tick...\n      var onPromiseError = function onPromiseError(err) {\n        try {\n          onError(err);\n        } catch (e) {\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      };\n\n      // advance the transition to the next step\n      var next = function next() {\n        if (nextCalled) {\n          warn$1('transition.next() should be called only once.');\n          return;\n        }\n        nextCalled = true;\n        if (transition.aborted) {\n          cleanup && cleanup();\n          return;\n        }\n        cb && cb();\n      };\n\n      var nextWithBoolean = function nextWithBoolean(res) {\n        if (typeof res === 'boolean') {\n          res ? next() : abort();\n        } else if (isPromise(res)) {\n          res.then(function (ok) {\n            ok ? next() : abort();\n          }, onPromiseError);\n        } else if (!hook.length) {\n          next();\n        }\n      };\n\n      var nextWithData = function nextWithData(data) {\n        var res = undefined;\n        try {\n          res = processData(data);\n        } catch (err) {\n          return onError(err);\n        }\n        if (isPromise(res)) {\n          res.then(next, onPromiseError);\n        } else {\n          next();\n        }\n      };\n\n      // expose a clone of the transition object, so that each\n      // hook gets a clean copy and prevent the user from\n      // messing with the internals.\n      var exposed = {\n        to: transition.to,\n        from: transition.from,\n        abort: abort,\n        next: processData ? nextWithData : next,\n        redirect: function redirect() {\n          transition.redirect.apply(transition, arguments);\n        }\n      };\n\n      // actually call the hook\n      var res = undefined;\n      try {\n        res = hook.call(context, exposed);\n      } catch (err) {\n        return onError(err);\n      }\n\n      if (expectBoolean) {\n        // boolean hooks\n        nextWithBoolean(res);\n      } else if (isPromise(res)) {\n        // promise\n        if (processData) {\n          res.then(nextWithData, onPromiseError);\n        } else {\n          res.then(next, onPromiseError);\n        }\n      } else if (processData && isPlainOjbect(res)) {\n        // data promise sugar\n        nextWithData(res);\n      } else if (!hook.length) {\n        next();\n      }\n    };\n\n    /**\n     * Call a single hook or an array of async hooks in series.\n     *\n     * @param {Array} hooks\n     * @param {*} context\n     * @param {Function} cb\n     * @param {Object} [options]\n     */\n\n    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n      var _this = this;\n\n      if (Array.isArray(hooks)) {\n        this.runQueue(hooks, function (hook, _, next) {\n          if (!_this.aborted) {\n            _this.callHook(hook, context, next, options);\n          }\n        }, cb);\n      } else {\n        this.callHook(hooks, context, cb, options);\n      }\n    };\n\n    return RouteTransition;\n  })();\n\n  function isPlainOjbect(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function toArray(val) {\n    return val ? Array.prototype.slice.call(val) : [];\n  }\n\n  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\n  /**\n   * Route Context Object\n   *\n   * @param {String} path\n   * @param {Router} router\n   */\n\n  var Route = function Route(path, router) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, Route);\n\n    var matched = router._recognizer.recognize(path);\n    if (matched) {\n      // copy all custom fields from route configs\n      [].forEach.call(matched, function (match) {\n        for (var key in match.handler) {\n          if (!internalKeysRE.test(key)) {\n            _this[key] = match.handler[key];\n          }\n        }\n      });\n      // set query and params\n      this.query = matched.queryParams;\n      this.params = [].reduce.call(matched, function (prev, cur) {\n        if (cur.params) {\n          for (var key in cur.params) {\n            prev[key] = cur.params[key];\n          }\n        }\n        return prev;\n      }, {});\n    }\n    // expose path and router\n    this.path = path;\n    // for internal use\n    this.matched = matched || router._notFoundHandler;\n    // internal reference to router\n    Object.defineProperty(this, 'router', {\n      enumerable: false,\n      value: router\n    });\n    // Important: freeze self to prevent observation\n    Object.freeze(this);\n  };\n\n  function applyOverride (Vue) {\n    var _Vue$util = Vue.util;\n    var extend = _Vue$util.extend;\n    var isArray = _Vue$util.isArray;\n    var defineReactive = _Vue$util.defineReactive;\n\n    // override Vue's init and destroy process to keep track of router instances\n    var init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      options = options || {};\n      var root = options._parent || options.parent || this;\n      var router = root.$router;\n      var route = root.$route;\n      if (router) {\n        // expose router\n        this.$router = router;\n        router._children.push(this);\n        /* istanbul ignore if */\n        if (this._defineMeta) {\n          // 0.12\n          this._defineMeta('$route', route);\n        } else {\n          // 1.0\n          defineReactive(this, '$route', route);\n        }\n      }\n      init.call(this, options);\n    };\n\n    var destroy = Vue.prototype._destroy;\n    Vue.prototype._destroy = function () {\n      if (!this._isBeingDestroyed && this.$router) {\n        this.$router._children.$remove(this);\n      }\n      destroy.apply(this, arguments);\n    };\n\n    // 1.0 only: enable route mixins\n    var strats = Vue.config.optionMergeStrategies;\n    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\n    if (strats) {\n      strats.route = function (parentVal, childVal) {\n        if (!childVal) return parentVal;\n        if (!parentVal) return childVal;\n        var ret = {};\n        extend(ret, parentVal);\n        for (var key in childVal) {\n          var a = ret[key];\n          var b = childVal[key];\n          // for data, activate and deactivate, we need to merge them into\n          // arrays similar to lifecycle hooks.\n          if (a && hooksToMergeRE.test(key)) {\n            ret[key] = (isArray(a) ? a : [a]).concat(b);\n          } else {\n            ret[key] = b;\n          }\n        }\n        return ret;\n      };\n    }\n  }\n\n  function View (Vue) {\n\n    var _ = Vue.util;\n    var componentDef =\n    // 0.12\n    Vue.directive('_component') ||\n    // 1.0\n    Vue.internalDirectives.component;\n    // <router-view> extends the internal component directive\n    var viewDef = _.extend({}, componentDef);\n\n    // with some overrides\n    _.extend(viewDef, {\n\n      _isRouterView: true,\n\n      bind: function bind() {\n        var route = this.vm.$route;\n        /* istanbul ignore if */\n        if (!route) {\n          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n          return;\n        }\n        // force dynamic directive so v-component doesn't\n        // attempt to build right now\n        this._isDynamicLiteral = true;\n        // finally, init by delegating to v-component\n        componentDef.bind.call(this);\n\n        // locate the parent view\n        var parentView = undefined;\n        var parent = this.vm;\n        while (parent) {\n          if (parent._routerView) {\n            parentView = parent._routerView;\n            break;\n          }\n          parent = parent.$parent;\n        }\n        if (parentView) {\n          // register self as a child of the parent view,\n          // instead of activating now. This is so that the\n          // child's activate hook is called after the\n          // parent's has resolved.\n          this.parentView = parentView;\n          parentView.childView = this;\n        } else {\n          // this is the root view!\n          var router = route.router;\n          router._rootView = this;\n        }\n\n        // handle late-rendered view\n        // two possibilities:\n        // 1. root view rendered after transition has been\n        //    validated;\n        // 2. child view rendered after parent view has been\n        //    activated.\n        var transition = route.router._currentTransition;\n        if (!parentView && transition.done || parentView && parentView.activated) {\n          var depth = parentView ? parentView.depth + 1 : 0;\n          activate(this, transition, depth);\n        }\n      },\n\n      unbind: function unbind() {\n        if (this.parentView) {\n          this.parentView.childView = null;\n        }\n        componentDef.unbind.call(this);\n      }\n    });\n\n    Vue.elementDirective('router-view', viewDef);\n  }\n\n  var trailingSlashRE = /\\/$/;\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var queryStringRE = /\\?.*$/;\n\n  // install v-link, which provides navigation support for\n  // HTML5 history mode\n  function Link (Vue) {\n    var _Vue$util = Vue.util;\n    var _bind = _Vue$util.bind;\n    var isObject = _Vue$util.isObject;\n    var addClass = _Vue$util.addClass;\n    var removeClass = _Vue$util.removeClass;\n\n    var onPriority = Vue.directive('on').priority;\n    var LINK_UPDATE = '__vue-router-link-update__';\n\n    var activeId = 0;\n\n    Vue.directive('link-active', {\n      priority: 9999,\n      bind: function bind() {\n        var _this = this;\n\n        var id = String(activeId++);\n        // collect v-links contained within this element.\n        // we need do this here before the parent-child relationship\n        // gets messed up by terminal directives (if, for, components)\n        var childLinks = this.el.querySelectorAll('[v-link]');\n        for (var i = 0, l = childLinks.length; i < l; i++) {\n          var link = childLinks[i];\n          var existingId = link.getAttribute(LINK_UPDATE);\n          var value = existingId ? existingId + ',' + id : id;\n          // leave a mark on the link element which can be persisted\n          // through fragment clones.\n          link.setAttribute(LINK_UPDATE, value);\n        }\n        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n          if (link.activeIds.indexOf(id) > -1) {\n            link.updateClasses(path, _this.el);\n          }\n        });\n      },\n      unbind: function unbind() {\n        this.vm.$off(LINK_UPDATE, this.cb);\n      }\n    });\n\n    Vue.directive('link', {\n      priority: onPriority - 2,\n\n      bind: function bind() {\n        var vm = this.vm;\n        /* istanbul ignore if */\n        if (!vm.$route) {\n          warn$1('v-link can only be used inside a router-enabled app.');\n          return;\n        }\n        this.router = vm.$route.router;\n        // update things when the route changes\n        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n        // check v-link-active ids\n        var activeIds = this.el.getAttribute(LINK_UPDATE);\n        if (activeIds) {\n          this.el.removeAttribute(LINK_UPDATE);\n          this.activeIds = activeIds.split(',');\n        }\n        // no need to handle click if link expects to be opened\n        // in a new window/tab.\n        /* istanbul ignore if */\n        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n          return;\n        }\n        // handle click\n        this.handler = _bind(this.onClick, this);\n        this.el.addEventListener('click', this.handler);\n      },\n\n      update: function update(target) {\n        this.target = target;\n        if (isObject(target)) {\n          this.append = target.append;\n          this.exact = target.exact;\n          this.prevActiveClass = this.activeClass;\n          this.activeClass = target.activeClass;\n        }\n        this.onRouteUpdate(this.vm.$route);\n      },\n\n      onClick: function onClick(e) {\n        // don't redirect with control keys\n        /* istanbul ignore if */\n        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n        // don't redirect when preventDefault called\n        /* istanbul ignore if */\n        if (e.defaultPrevented) return;\n        // don't redirect on right click\n        /* istanbul ignore if */\n        if (e.button !== 0) return;\n\n        var target = this.target;\n        if (target) {\n          // v-link with expression, just go\n          e.preventDefault();\n          this.router.go(target);\n        } else {\n          // no expression, delegate for an <a> inside\n          var el = e.target;\n          while (el.tagName !== 'A' && el !== this.el) {\n            el = el.parentNode;\n          }\n          if (el.tagName === 'A' && sameOrigin(el)) {\n            e.preventDefault();\n            var path = el.pathname;\n            if (this.router.history.root) {\n              path = path.replace(this.router.history.rootRE, '');\n            }\n            this.router.go({\n              path: path,\n              replace: target && target.replace,\n              append: target && target.append\n            });\n          }\n        }\n      },\n\n      onRouteUpdate: function onRouteUpdate(route) {\n        // router.stringifyPath is dependent on current route\n        // and needs to be called again whenver route changes.\n        var newPath = this.router.stringifyPath(this.target);\n        if (this.path !== newPath) {\n          this.path = newPath;\n          this.updateActiveMatch();\n          this.updateHref();\n        }\n        if (this.activeIds) {\n          this.vm.$emit(LINK_UPDATE, this, route.path);\n        } else {\n          this.updateClasses(route.path, this.el);\n        }\n      },\n\n      updateActiveMatch: function updateActiveMatch() {\n        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n      },\n\n      updateHref: function updateHref() {\n        if (this.el.tagName !== 'A') {\n          return;\n        }\n        var path = this.path;\n        var router = this.router;\n        var isAbsolute = path.charAt(0) === '/';\n        // do not format non-hash relative paths\n        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n        if (href) {\n          this.el.href = href;\n        } else {\n          this.el.removeAttribute('href');\n        }\n      },\n\n      updateClasses: function updateClasses(path, el) {\n        var activeClass = this.activeClass || this.router._linkActiveClass;\n        // clear old class\n        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n          toggleClasses(el, this.prevActiveClass, removeClass);\n        }\n        // remove query string before matching\n        var dest = this.path.replace(queryStringRE, '');\n        path = path.replace(queryStringRE, '');\n        // add new class\n        if (this.exact) {\n          if (dest === path ||\n          // also allow additional trailing slash\n          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        } else {\n          if (this.activeRE && this.activeRE.test(path)) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        }\n      },\n\n      unbind: function unbind() {\n        this.el.removeEventListener('click', this.handler);\n        this.unwatch && this.unwatch();\n      }\n    });\n\n    function sameOrigin(link) {\n      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n    }\n\n    // this function is copied from v-bind:class implementation until\n    // we properly expose it...\n    function toggleClasses(el, key, fn) {\n      key = key.trim();\n      if (key.indexOf(' ') === -1) {\n        fn(el, key);\n        return;\n      }\n      var keys = key.split(/\\s+/);\n      for (var i = 0, l = keys.length; i < l; i++) {\n        fn(el, keys[i]);\n      }\n    }\n  }\n\n  var historyBackends = {\n    abstract: AbstractHistory,\n    hash: HashHistory,\n    html5: HTML5History\n  };\n\n  // late bind during install\n  var Vue = undefined;\n\n  /**\n   * Router constructor\n   *\n   * @param {Object} [options]\n   */\n\n  var Router = (function () {\n    function Router() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$hashbang = _ref.hashbang;\n      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n      var _ref$abstract = _ref.abstract;\n      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n      var _ref$history = _ref.history;\n      var history = _ref$history === undefined ? false : _ref$history;\n      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n      var _ref$root = _ref.root;\n      var root = _ref$root === undefined ? null : _ref$root;\n      var _ref$linkActiveClass = _ref.linkActiveClass;\n      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n      babelHelpers.classCallCheck(this, Router);\n\n      /* istanbul ignore if */\n      if (!Router.installed) {\n        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n      }\n\n      // Vue instances\n      this.app = null;\n      this._children = [];\n\n      // route recognizer\n      this._recognizer = new RouteRecognizer();\n      this._guardRecognizer = new RouteRecognizer();\n\n      // state\n      this._started = false;\n      this._startCb = null;\n      this._currentRoute = {};\n      this._currentTransition = null;\n      this._previousTransition = null;\n      this._notFoundHandler = null;\n      this._notFoundRedirect = null;\n      this._beforeEachHooks = [];\n      this._afterEachHooks = [];\n\n      // trigger transition on initial render?\n      this._rendered = false;\n      this._transitionOnLoad = transitionOnLoad;\n\n      // history mode\n      this._root = root;\n      this._abstract = abstract;\n      this._hashbang = hashbang;\n\n      // check if HTML5 history is available\n      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n      this._history = history && hasPushState;\n      this._historyFallback = history && !hasPushState;\n\n      // create history object\n      var inBrowser = Vue.util.inBrowser;\n      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\n      var History = historyBackends[this.mode];\n      this.history = new History({\n        root: root,\n        hashbang: this._hashbang,\n        onChange: function onChange(path, state, anchor) {\n          _this._match(path, state, anchor);\n        }\n      });\n\n      // other options\n      this._saveScrollPosition = saveScrollPosition;\n      this._linkActiveClass = linkActiveClass;\n      this._suppress = suppressTransitionError;\n    }\n\n    /**\n     * Allow directly passing components to a route\n     * definition.\n     *\n     * @param {String} path\n     * @param {Object} handler\n     */\n\n    // API ===================================================\n\n    /**\n    * Register a map of top-level paths.\n    *\n    * @param {Object} map\n    */\n\n    Router.prototype.map = function map(_map) {\n      for (var route in _map) {\n        this.on(route, _map[route]);\n      }\n      return this;\n    };\n\n    /**\n     * Register a single root-level path\n     *\n     * @param {String} rootPath\n     * @param {Object} handler\n     *                 - {String} component\n     *                 - {Object} [subRoutes]\n     *                 - {Boolean} [forceRefresh]\n     *                 - {Function} [before]\n     *                 - {Function} [after]\n     */\n\n    Router.prototype.on = function on(rootPath, handler) {\n      if (rootPath === '*') {\n        this._notFound(handler);\n      } else {\n        this._addRoute(rootPath, handler, []);\n      }\n      return this;\n    };\n\n    /**\n     * Set redirects.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.redirect = function redirect(map) {\n      for (var path in map) {\n        this._addRedirect(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set aliases.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.alias = function alias(map) {\n      for (var path in map) {\n        this._addAlias(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set global before hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.beforeEach = function beforeEach(fn) {\n      this._beforeEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Set global after hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.afterEach = function afterEach(fn) {\n      this._afterEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Navigate to a given path.\n     * The path can be an object describing a named path in\n     * the format of { name: '...', params: {}, query: {}}\n     * The path is assumed to be already decoded, and will\n     * be resolved against root (if provided)\n     *\n     * @param {String|Object} path\n     * @param {Boolean} [replace]\n     */\n\n    Router.prototype.go = function go(path) {\n      var replace = false;\n      var append = false;\n      if (Vue.util.isObject(path)) {\n        replace = path.replace;\n        append = path.append;\n      }\n      path = this.stringifyPath(path);\n      if (path) {\n        this.history.go(path, replace, append);\n      }\n    };\n\n    /**\n     * Short hand for replacing current path\n     *\n     * @param {String} path\n     */\n\n    Router.prototype.replace = function replace(path) {\n      if (typeof path === 'string') {\n        path = { path: path };\n      }\n      path.replace = true;\n      this.go(path);\n    };\n\n    /**\n     * Start the router.\n     *\n     * @param {VueConstructor} App\n     * @param {String|Element} container\n     * @param {Function} [cb]\n     */\n\n    Router.prototype.start = function start(App, container, cb) {\n      /* istanbul ignore if */\n      if (this._started) {\n        warn$1('already started.');\n        return;\n      }\n      this._started = true;\n      this._startCb = cb;\n      if (!this.app) {\n        /* istanbul ignore if */\n        if (!App || !container) {\n          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n        }\n        /* istanbul ignore if */\n        if (App instanceof Vue) {\n          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n        }\n        this._appContainer = container;\n        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n        // give it a name for better debugging\n        Ctor.options.name = Ctor.options.name || 'RouterApp';\n      }\n\n      // handle history fallback in browsers that do not\n      // support HTML5 history API\n      if (this._historyFallback) {\n        var _location = window.location;\n        var _history = new HTML5History({ root: this._root });\n        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n        if (path && path !== '/') {\n          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n          return;\n        }\n      }\n\n      this.history.start();\n    };\n\n    /**\n     * Stop listening to route changes.\n     */\n\n    Router.prototype.stop = function stop() {\n      this.history.stop();\n      this._started = false;\n    };\n\n    /**\n     * Normalize named route object / string paths into\n     * a string.\n     *\n     * @param {Object|String|Number} path\n     * @return {String}\n     */\n\n    Router.prototype.stringifyPath = function stringifyPath(path) {\n      var generatedPath = '';\n      if (path && typeof path === 'object') {\n        if (path.name) {\n          var extend = Vue.util.extend;\n          var currentParams = this._currentTransition && this._currentTransition.to.params;\n          var targetParams = path.params || {};\n          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n        } else if (path.path) {\n          generatedPath = encodeURI(path.path);\n        }\n        if (path.query) {\n          // note: the generated query string is pre-URL-encoded by the recognizer\n          var query = this._recognizer.generateQueryString(path.query);\n          if (generatedPath.indexOf('?') > -1) {\n            generatedPath += '&' + query.slice(1);\n          } else {\n            generatedPath += query;\n          }\n        }\n      } else {\n        generatedPath = encodeURI(path ? path + '' : '');\n      }\n      return generatedPath;\n    };\n\n    // Internal methods ======================================\n\n    /**\n    * Add a route containing a list of segments to the internal\n    * route recognizer. Will be called recursively to add all\n    * possible sub-routes.\n    *\n    * @param {String} path\n    * @param {Object} handler\n    * @param {Array} segments\n    */\n\n    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n      guardComponent(path, handler);\n      handler.path = path;\n      handler.fullPath = (segments.reduce(function (path, segment) {\n        return path + segment.path;\n      }, '') + path).replace('//', '/');\n      segments.push({\n        path: path,\n        handler: handler\n      });\n      this._recognizer.add(segments, {\n        as: handler.name\n      });\n      // add sub routes\n      if (handler.subRoutes) {\n        for (var subPath in handler.subRoutes) {\n          // recursively walk all sub routes\n          this._addRoute(subPath, handler.subRoutes[subPath],\n          // pass a copy in recursion to avoid mutating\n          // across branches\n          segments.slice());\n        }\n      }\n    };\n\n    /**\n     * Set the notFound route handler.\n     *\n     * @param {Object} handler\n     */\n\n    Router.prototype._notFound = function _notFound(handler) {\n      guardComponent('*', handler);\n      this._notFoundHandler = [{ handler: handler }];\n    };\n\n    /**\n     * Add a redirect record.\n     *\n     * @param {String} path\n     * @param {String} redirectPath\n     */\n\n    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n      if (path === '*') {\n        this._notFoundRedirect = redirectPath;\n      } else {\n        this._addGuard(path, redirectPath, this.replace);\n      }\n    };\n\n    /**\n     * Add an alias record.\n     *\n     * @param {String} path\n     * @param {String} aliasPath\n     */\n\n    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n      this._addGuard(path, aliasPath, this._match);\n    };\n\n    /**\n     * Add a path guard.\n     *\n     * @param {String} path\n     * @param {String} mappedPath\n     * @param {Function} handler\n     */\n\n    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n      var _this2 = this;\n\n      this._guardRecognizer.add([{\n        path: path,\n        handler: function handler(match, query) {\n          var realPath = mapParams(mappedPath, match.params, query);\n          _handler.call(_this2, realPath);\n        }\n      }]);\n    };\n\n    /**\n     * Check if a path matches any redirect records.\n     *\n     * @param {String} path\n     * @return {Boolean} - if true, will skip normal match.\n     */\n\n    Router.prototype._checkGuard = function _checkGuard(path) {\n      var matched = this._guardRecognizer.recognize(path, true);\n      if (matched) {\n        matched[0].handler(matched[0], matched.queryParams);\n        return true;\n      } else if (this._notFoundRedirect) {\n        matched = this._recognizer.recognize(path);\n        if (!matched) {\n          this.replace(this._notFoundRedirect);\n          return true;\n        }\n      }\n    };\n\n    /**\n     * Match a URL path and set the route context on vm,\n     * triggering view updates.\n     *\n     * @param {String} path\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._match = function _match(path, state, anchor) {\n      var _this3 = this;\n\n      if (this._checkGuard(path)) {\n        return;\n      }\n\n      var currentRoute = this._currentRoute;\n      var currentTransition = this._currentTransition;\n\n      if (currentTransition) {\n        if (currentTransition.to.path === path) {\n          // do nothing if we have an active transition going to the same path\n          return;\n        } else if (currentRoute.path === path) {\n          // We are going to the same path, but we also have an ongoing but\n          // not-yet-validated transition. Abort that transition and reset to\n          // prev transition.\n          currentTransition.aborted = true;\n          this._currentTransition = this._prevTransition;\n          return;\n        } else {\n          // going to a totally different path. abort ongoing transition.\n          currentTransition.aborted = true;\n        }\n      }\n\n      // construct new route and transition context\n      var route = new Route(path, this);\n      var transition = new RouteTransition(this, route, currentRoute);\n\n      // current transition is updated right now.\n      // however, current route will only be updated after the transition has\n      // been validated.\n      this._prevTransition = currentTransition;\n      this._currentTransition = transition;\n\n      if (!this.app) {\n        (function () {\n          // initial render\n          var router = _this3;\n          _this3.app = new _this3._appConstructor({\n            el: _this3._appContainer,\n            created: function created() {\n              this.$router = router;\n            },\n            _meta: {\n              $route: route\n            }\n          });\n        })();\n      }\n\n      // check global before hook\n      var beforeHooks = this._beforeEachHooks;\n      var startTransition = function startTransition() {\n        transition.start(function () {\n          _this3._postTransition(route, state, anchor);\n        });\n      };\n\n      if (beforeHooks.length) {\n        transition.runQueue(beforeHooks, function (hook, _, next) {\n          if (transition === _this3._currentTransition) {\n            transition.callHook(hook, null, next, {\n              expectBoolean: true\n            });\n          }\n        }, startTransition);\n      } else {\n        startTransition();\n      }\n\n      if (!this._rendered && this._startCb) {\n        this._startCb.call(null);\n      }\n\n      // HACK:\n      // set rendered to true after the transition start, so\n      // that components that are acitvated synchronously know\n      // whether it is the initial render.\n      this._rendered = true;\n    };\n\n    /**\n     * Set current to the new transition.\n     * This is called by the transition object when the\n     * validation of a route has succeeded.\n     *\n     * @param {Transition} transition\n     */\n\n    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n      // set current route\n      var route = this._currentRoute = transition.to;\n      // update route context for all children\n      if (this.app.$route !== route) {\n        this.app.$route = route;\n        this._children.forEach(function (child) {\n          child.$route = route;\n        });\n      }\n      // call global after hook\n      if (this._afterEachHooks.length) {\n        this._afterEachHooks.forEach(function (hook) {\n          return hook.call(null, {\n            to: transition.to,\n            from: transition.from\n          });\n        });\n      }\n      this._currentTransition.done = true;\n    };\n\n    /**\n     * Handle stuff after the transition.\n     *\n     * @param {Route} route\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n      // handle scroll positions\n      // saved scroll positions take priority\n      // then we check if the path has an anchor\n      var pos = state && state.pos;\n      if (pos && this._saveScrollPosition) {\n        Vue.nextTick(function () {\n          window.scrollTo(pos.x, pos.y);\n        });\n      } else if (anchor) {\n        Vue.nextTick(function () {\n          var el = document.getElementById(anchor.slice(1));\n          if (el) {\n            window.scrollTo(window.scrollX, el.offsetTop);\n          }\n        });\n      }\n    };\n\n    return Router;\n  })();\n\n  function guardComponent(path, handler) {\n    var comp = handler.component;\n    if (Vue.util.isPlainObject(comp)) {\n      comp = handler.component = Vue.extend(comp);\n    }\n    /* istanbul ignore if */\n    if (typeof comp !== 'function') {\n      handler.component = null;\n      warn$1('invalid component for route \"' + path + '\".');\n    }\n  }\n\n  /* Installation */\n\n  Router.installed = false;\n\n  /**\n   * Installation interface.\n   * Install the necessary directives.\n   */\n\n  Router.install = function (externalVue) {\n    /* istanbul ignore if */\n    if (Router.installed) {\n      warn$1('already installed.');\n      return;\n    }\n    Vue = externalVue;\n    applyOverride(Vue);\n    View(Vue);\n    Link(Vue);\n    exports$1.Vue = Vue;\n    Router.installed = true;\n  };\n\n  // auto install\n  /* istanbul ignore if */\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(Router);\n  }\n\n  return Router;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-router/dist/vue-router.js\n ** module id = 13\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.24\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar isWechat = UA && UA.indexOf('micromessenger') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !(isWechat && isIos)) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tisWechat: isWechat,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if (isA || isO) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.24';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 14\n ** module chunks = 0\n **/"],"sourceRoot":""}